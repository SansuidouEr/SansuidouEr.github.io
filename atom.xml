<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SansuidouEr Blog</title>
  
  <subtitle>欢迎来到我的博客</subtitle>
  <link href="https://sansuidouer.github.io/atom.xml" rel="self"/>
  
  <link href="https://sansuidouer.github.io/"/>
  <updated>2024-01-24T15:28:58.847Z</updated>
  <id>https://sansuidouer.github.io/</id>
  
  <author>
    <name>ShanSuiDouEr</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Maya病毒查杀工具</title>
    <link href="https://sansuidouer.github.io/17404/"/>
    <id>https://sansuidouer.github.io/17404/</id>
    <published>2024-01-21T10:02:59.000Z</published>
    <updated>2024-01-24T15:28:58.847Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误，请重试" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="7d830d89fdcde715a0f216bbeceedc47be1f082652487ee885b1077841369468"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入访问密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">此文章暂未开放，请联系管理员观看！</summary>
    
    
    
    <category term="Maya" scheme="https://sansuidouer.github.io/categories/Maya/"/>
    
    
    <category term="Python" scheme="https://sansuidouer.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>UV集检查修复工具</title>
    <link href="https://sansuidouer.github.io/56425/"/>
    <id>https://sansuidouer.github.io/56425/</id>
    <published>2024-01-21T09:37:59.000Z</published>
    <updated>2024-01-24T14:20:41.229Z</updated>
    
    <content type="html"><![CDATA[<h2 id="UV集修复工具"><a href="#UV集修复工具" class="headerlink" title="UV集修复工具"></a>UV集修复工具</h2><p>功能简单，都写在按钮上了，不做介绍，如遇报错请联系我。</p><h3 id="界面："><a href="#界面：" class="headerlink" title="界面："></a>界面：</h3><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20240121175452264.png" alt="image-20240121175452264"></p><h3 id="MEL源码："><a href="#MEL源码：" class="headerlink" title="MEL源码："></a>MEL源码：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line">//UV集检查修改工具//</span><br><span class="line">// 作者：三岁豆 , 创建日期 2024.01.13  V 1.0//</span><br><span class="line"></span><br><span class="line">// 创建窗口 判断UVToolWindow是否存在</span><br><span class="line">if (`window -exists uvToolWindow`) </span><br><span class="line">    deleteUI uvToolWindow;</span><br><span class="line">window -title &quot;三岁豆Er&quot; </span><br><span class="line">-sizeable false</span><br><span class="line">uvToolWindow;</span><br><span class="line"></span><br><span class="line">// 窗口布局</span><br><span class="line">columnLayout  -columnAttach &quot;both&quot; 10 -rowSpacing 5 -columnWidth 230;</span><br><span class="line">int $buttonHeight = 30;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//窗口内容</span><br><span class="line">text -h 50 -label &quot;UV集检查修改工具&quot;;</span><br><span class="line">button -label &quot;选中具有多个UV集的模型&quot; -height $buttonHeight -command &quot;selectMultipleUVSetsModels&quot;;</span><br><span class="line">button -label &quot;选中UV集不为map1的模型&quot; -height $buttonHeight -command &quot;selectNonDefaultUVModels&quot;;</span><br><span class="line">button -label &quot;删除多余的UV集&quot; -height $buttonHeight -command &quot;deleteExtraUVSets&quot;;</span><br><span class="line">button -label &quot;重命名默认UV集为map1&quot; -height $buttonHeight -command &quot;renameFirstUVSetToMap1&quot;;</span><br><span class="line">text  -h 5 -label&quot;&quot;;</span><br><span class="line"></span><br><span class="line">//显示窗口</span><br><span class="line">showWindow uvToolWindow;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 选中具有多个UV集的对象</span><br><span class="line">global proc selectMultipleUVSetsModels() &#123;</span><br><span class="line">    select -cl;</span><br><span class="line">    string $allModels[] = `ls -g`;</span><br><span class="line">    string $model;</span><br><span class="line">    int $foundModels = 0;</span><br><span class="line"></span><br><span class="line">    for ($model in $allModels) &#123;</span><br><span class="line">        string $uvSets[] = `polyUVSet -q -allUVSets $model`;</span><br><span class="line">        if (size($uvSets) &gt; 1) &#123;</span><br><span class="line">            select -add $model;</span><br><span class="line">            $foundModels++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if ($foundModels == 0) &#123;</span><br><span class="line">        confirmDialog -title &quot;提示&quot; -message &quot;\n在当前场景中未找到具有多个UV集的模型!\n&quot; -button &quot;确定&quot; -defaultButton &quot;确定&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 选中UV集不为map1的模型</span><br><span class="line">global proc selectNonDefaultUVModels() &#123;</span><br><span class="line">    select -cl;</span><br><span class="line">    string $allModels[] = `ls -g`;</span><br><span class="line">    string $model;</span><br><span class="line">    int $foundModels = 0;</span><br><span class="line"></span><br><span class="line">    for ($model in $allModels) &#123;</span><br><span class="line">        string $currentUVSets[] = `polyUVSet -q -currentUVSet $model`;</span><br><span class="line">        if (size($currentUVSets) &gt; 0 &amp;&amp; $currentUVSets[0] != &quot;map1&quot;) &#123;</span><br><span class="line">            select -add $model;</span><br><span class="line">            $foundModels++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if ($foundModels == 0) &#123;</span><br><span class="line">        confirmDialog </span><br><span class="line">        -title &quot;提示&quot; </span><br><span class="line">        -message &quot;\n在当前场景中未找到默认UV集名称非 map1 的模型！\n&quot; </span><br><span class="line">        -button &quot;确定&quot; </span><br><span class="line">        -defaultButton &quot;确定&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 删除多余的UV集</span><br><span class="line">global proc deleteExtraUVSets() &#123;</span><br><span class="line">    string $selectedModels[] = `ls -sl -dag -ni -type mesh`;</span><br><span class="line">    if(size($selectedModels) == 0)&#123;</span><br><span class="line">            confirmDialog </span><br><span class="line">            -title &quot;提示&quot; </span><br><span class="line">            -message &quot;\n您还没有选中模型或选中的不是多边形!\n&quot; </span><br><span class="line">            -button &quot;确定&quot; </span><br><span class="line">            -defaultButton &quot;确定&quot;;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    string $model;</span><br><span class="line">    for ($model in $selectedModels) &#123;</span><br><span class="line">        string $uvSets[] = `polyUVSet -q -allUVSets $model`;</span><br><span class="line"></span><br><span class="line">        if(size($uvSets) &lt;= 1) &#123;</span><br><span class="line">            confirmDialog </span><br><span class="line">            -title &quot;提示&quot; </span><br><span class="line">            -message &quot;\n您当前选中的模型仅有一个UV集\n&quot; </span><br><span class="line">            -button &quot;确定&quot; </span><br><span class="line">            -defaultButton &quot;确定&quot;;</span><br><span class="line">            continue;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        string $uvSet;</span><br><span class="line">        for ($uvSet in $uvSets) &#123;</span><br><span class="line">            if ($uvSet != &quot;map1&quot;) &#123;</span><br><span class="line">                print (&quot;正在删除 &quot; + $model + &quot; 的UV集:&quot; + $uvSet + &quot;\n&quot;);</span><br><span class="line">                polyUVSet -delete -uvSet $uvSet $model;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    print &quot;三岁豆Er:删除多余UV集成功!\n&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 重命名默认UV集为map1</span><br><span class="line">global proc renameFirstUVSetToMap1() &#123;</span><br><span class="line">    string $selectedObjects[] = `ls -sl -dag -ni -type mesh`;</span><br><span class="line">    if(size($selectedObjects) == 0)&#123;</span><br><span class="line">        confirmDialog </span><br><span class="line">        -title &quot;提示&quot; </span><br><span class="line">        -message &quot;\n您还没有选中模型或选中的不是多边形!\n&quot; </span><br><span class="line">        -button &quot;确定&quot; </span><br><span class="line">        -defaultButton &quot;确定&quot;;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    string $object;</span><br><span class="line">    for ($object in $selectedObjects) &#123;</span><br><span class="line">        string $uvSets[] = `polyUVSet -q -allUVSets $object`;</span><br><span class="line">        if (size($uvSets) &gt; 0) &#123;</span><br><span class="line">            string $firstUVSet = $uvSets[0];</span><br><span class="line">            if ($firstUVSet != &quot;map1&quot;) &#123;</span><br><span class="line">                polyUVSet -rename -newUVSet &quot;map1&quot; -uvSet $firstUVSet $object;</span><br><span class="line">                print (&quot;已将 &quot; + $object + &quot; 的默认UV集重命名为 &#x27;map1&#x27;\n&quot;);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                print ($object + &quot; 的第一个 UV 集已经是 &#x27;map1&#x27;。\n&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            print ($object + &quot; 没有 UV 集。\n&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    print &quot;三岁豆Er!重命名默认UV集成功!\n&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">检查场景中是否有多个UV集和UV集名称不为map1的模型，并提供修复方法</summary>
    
    
    
    <category term="Maya" scheme="https://sansuidouer.github.io/categories/Maya/"/>
    
    
    <category term="Mel" scheme="https://sansuidouer.github.io/tags/Mel/"/>
    
  </entry>
  
  <entry>
    <title>鼠标右键发送到</title>
    <link href="https://sansuidouer.github.io/45700/"/>
    <id>https://sansuidouer.github.io/45700/</id>
    <published>2023-12-27T12:53:52.000Z</published>
    <updated>2024-01-24T14:20:41.283Z</updated>
    
    <content type="html"><![CDATA[<h1 id="发送到"><a href="#发送到" class="headerlink" title="发送到"></a>发送到</h1><p>我们使用Windows管理文件中，鼠标右键里面有个发送到，发送到桌面快捷方式很好用</p><p>里面固定的有几个选项，传真、文档、桌面快捷方式……</p><p>如果我们想要自定义一个目录进行发送文件该怎么弄呢？</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20231227205205283.png" alt="image-20231227205205283"></p><h3 id="添加发送到文件夹的选项"><a href="#添加发送到文件夹的选项" class="headerlink" title="添加发送到文件夹的选项"></a>添加发送到文件夹的选项</h3><p>Win+R 打开运行对话框</p><p>输入以下内容，回车。</p><p>会打开一个目录，在此目录下新建一个快捷方式，目标指向你想要自定义的文件夹。</p><p>就可以在鼠标右键找到你自定义的文件夹啦。</p><p>切记现在是相当于发送当前选中文件到指定文件夹，也就是拷贝了一份给这个指定的文件夹。</p><p>如果您的目的已经达到了，那么您就看到这里就可以了</p><p>如果您想像发送到桌面快捷方式一样发送这个文件的快捷方式到指定目录请继续往下看。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell:sendto</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20231227211301001.png" alt="image-20231227211301001"></p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20231227212716479.png" alt="image-20231227212716479"></p><h3 id="发送到指定文件夹快捷方式"><a href="#发送到指定文件夹快捷方式" class="headerlink" title="发送到指定文件夹快捷方式"></a>发送到指定文件夹快捷方式</h3><h4 id="第一步-新建VB脚本"><a href="#第一步-新建VB脚本" class="headerlink" title="第一步 新建VB脚本"></a>第一步 新建VB脚本</h4><p>在你指定的目录下新建文本文档，将以下代码存储到文本文档中，</p><p>需要修改的内容就是第四句代码引号中的内容</p><p>“E:\测试\“修改为你自己想要存放快捷方式的目录，一定要以“ \ ”结尾。</p><p>重点！！</p><p>不要直接保存，按快捷键Ctrl+Shift+S另存为</p><p>另存为名称随意，编码格式一定要选择ANSI 否则会报错，默认保存的话是UTF-8</p><p>然后将文件后缀.txt修改为.vbs</p><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Set</span> unNamedArguments = WScript.Arguments.UnNamed </span><br><span class="line"><span class="keyword">set</span> WshShell = WScript.<span class="built_in">CreateObject</span>(<span class="string">&quot;WScript.Shell&quot;</span>) </span><br><span class="line"><span class="keyword">Set</span> objFSO = <span class="built_in">CreateObject</span>(<span class="string">&quot;Scripting.FileSystemObject&quot;</span>) </span><br><span class="line">strFolder = <span class="string">&quot;E:\测试\&quot;</span></span><br><span class="line"><span class="keyword">for</span> count = <span class="number">0</span> <span class="keyword">to</span> wscript.arguments.count<span class="number">-1</span> <span class="keyword">Step</span> <span class="number">1</span> </span><br><span class="line">    filename = unNamedArguments.Item(count) </span><br><span class="line">    <span class="keyword">Set</span> objFile = objFSO.GetFile(filename)  </span><br><span class="line"><span class="keyword">set</span> oShellLink = WshShell.CreateShortcut(strFolder &amp; objFSO.GetFileName(filename)&amp; <span class="string">&quot;.lnk&quot;</span>) </span><br><span class="line">    oShellLink.TargetPath = filename </span><br><span class="line">    oShellLink.WindowStyle = <span class="number">1</span> </span><br><span class="line">    oShellLink.WorkingDirectory = objFSO.GetParentFolderName(filename) </span><br><span class="line">    oShellLink.Save  </span><br><span class="line"><span class="keyword">NEXT</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20231227214806936.png" alt="image-20231227214806936"></p><h4 id="第二步-将当前的VB脚本发送到shell-sendto目录"><a href="#第二步-将当前的VB脚本发送到shell-sendto目录" class="headerlink" title="第二步 将当前的VB脚本发送到shell:sendto目录"></a>第二步 将当前的VB脚本发送到shell:sendto目录</h4><p>将你新建好的VB脚本的快捷方式发送到你的shell:sendto目录。</p><p>快捷方式的命名可以随意。</p><p>自此结束，就可以把你选中的文件快捷发送到你自定义的目录下面了。</p><h4 id="补充："><a href="#补充：" class="headerlink" title="补充："></a>补充：</h4><p>如果你觉得VBS脚本的图标不好看，可以修改shell:sendto目录下的VBS快捷方式的图标</p><p>在文件名最前面加上“..”，可以让你的文件顺序达到最高。</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/END_02.svg"></p>]]></content>
    
    
    <summary type="html">鼠标右键“发送到”功能，发送到指定目录</summary>
    
    
    
    <category term="Windows" scheme="https://sansuidouer.github.io/categories/Windows/"/>
    
    
    <category term="Windows" scheme="https://sansuidouer.github.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>PixPin</title>
    <link href="https://sansuidouer.github.io/21735/"/>
    <id>https://sansuidouer.github.io/21735/</id>
    <published>2023-12-06T12:57:46.000Z</published>
    <updated>2024-01-24T14:20:41.183Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PixPin"><a href="#PixPin" class="headerlink" title="PixPin"></a>PixPin</h1><p>PixPin是一款功能强大的截图&#x2F;贴图工具。</p><p>其实按照我的理解，就是Snipaste的一个加强版。</p><p>功能比Snipaste多一些，比如本地OCR，截长图，录制GIF等。</p><p>主要是Snipaste已经好久不更新了，估计也不会有更新了。这个是作者还在做一些新功能。可以体验一下。</p><p>PixPin官网：<a href="https://pixpinapp.com/">https://pixpinapp.com/</a></p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20231206211708987.png" alt="image-20231206211708987"></p><h1 id="Snipaste"><a href="#Snipaste" class="headerlink" title="Snipaste"></a>Snipaste</h1><p>Snipaste官网：<a href="https://zh.snipaste.com/">https://zh.snipaste.com/</a></p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20231206211629395.png" alt="image-20231206211629395"></p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/END_02.svg"></p>]]></content>
    
    
    <summary type="html">“ 功能强大使用简单的截图/贴图工具 ”</summary>
    
    
    
    <category term="软件" scheme="https://sansuidouer.github.io/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
    <category term="软件分享" scheme="https://sansuidouer.github.io/tags/%E8%BD%AF%E4%BB%B6%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>Vray 在线资源库无法正常打开</title>
    <link href="https://sansuidouer.github.io/39509/"/>
    <id>https://sansuidouer.github.io/39509/</id>
    <published>2023-12-03T08:26:29.000Z</published>
    <updated>2024-01-24T14:20:41.248Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20231203164351435.png" alt="image-20231203164351435"></p><h3 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h3><p>首先在浏览器打开以下网址</p><p><a href="https://cosmos.chaos.com/">https://cosmos.chaos.com/</a></p><p>如果能打开以上网址，正常访问</p><p>那就进行第二步</p><p>如果无法正常访问，测试不同浏览器是否能正常访问。</p><p>检查DNS 是否正常，防火墙是否拦截。</p><h3 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h3><p>下载最新的 Chaos Cosmos Browser</p><p><a href="https://download.chaos.com/cn?platform=47&product=62">https://download.chaos.com/cn?platform=47&amp;product=62</a></p><p>关闭Maya安装下载的Chaos Cosmos Browser</p><p>启动Maya即可解决。</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20231203163311874.png" alt="image-20231203163311874"></p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/END_02.svg"></p>]]></content>
    
    
    <summary type="html">解决VrayforMaya 的 Chaos Cosmos Browser 无法打开的问题</summary>
    
    
    
    <category term="Maya" scheme="https://sansuidouer.github.io/categories/Maya/"/>
    
    
    <category term="Mel" scheme="https://sansuidouer.github.io/tags/Mel/"/>
    
    <category term="Vray" scheme="https://sansuidouer.github.io/tags/Vray/"/>
    
  </entry>
  
  <entry>
    <title>Ps 盗版弹窗提示</title>
    <link href="https://sansuidouer.github.io/25656/"/>
    <id>https://sansuidouer.github.io/25656/</id>
    <published>2023-11-19T12:09:45.000Z</published>
    <updated>2024-01-24T14:20:41.236Z</updated>
    
    <content type="html"><![CDATA[<h2 id="遇到问题"><a href="#遇到问题" class="headerlink" title="遇到问题"></a>遇到问题</h2><p>很不幸，我的Adobe Photoshop 2024遇到了这个非正版提示</p><p>原因很简单，Adobe不知道在什么时候加入了联网检测盗版，打击盗版的功能。</p><p>但是这个是基于你挂了梯子才会导致Adobe链接了他的服务器，检测到您安装的盗版。</p><p>如果您也很不幸，遇到了这个问题，请看下去！</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/Snipaste_2023-11-19_20-17-55.png"></p><h2 id="寻求解决方法"><a href="#寻求解决方法" class="headerlink" title="寻求解决方法"></a>寻求解决方法</h2><p>前期我百度了很多方法，有修改host文件达到阻断Adobe链接服务器的，也有通过防火墙阻断PS联网检测的。</p><p>前面也说过，挂梯子是一种特殊的联网方式，挂梯子的软件不同联网方式也不同。</p><p>也就意味着可能会让Adobe偷偷通过梯子的联网方式跑出去检测到您的盗版软件。</p><h3 id="修改host文件的方法"><a href="#修改host文件的方法" class="headerlink" title="修改host文件的方法"></a>修改host文件的方法</h3><p>将以下代码添加到 C:\Windows\System32\drivers\etc文件夹下的host文件里面（用记事本打开即可）</p><p>如遇没用权限保存文件什么的问题，自行百度。</p><p>我是没用通过这个方法解决，如果您没用挂梯子的需求可以试一试。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 ic.adobe.io</span><br><span class="line">127.0.0.1 *.adobe.io</span><br><span class="line">127.0.0.1 *.adobe.com</span><br><span class="line">127.0.0.1 lmlicenses.wip4.adobe.com</span><br><span class="line">127.0.0.1 lm.licenses.adobe.com</span><br><span class="line">127.0.0.1 na2m-pr.licenses.adobe.com</span><br><span class="line">127.0.0.1 practivate.adobe.com</span><br><span class="line">127.0.0.1 activate.adobe.com</span><br><span class="line">127.0.0.1 ereg.adobe.com</span><br><span class="line">127.0.0.1 activate.wip3.adobe.com</span><br><span class="line">127.0.0.1 wip.adobe.com</span><br><span class="line">127.0.0.1 wip3.adobe.com</span><br><span class="line">127.0.0.1 3dns-3.adobe.com</span><br><span class="line">127.0.0.1 3dns-2.adobe.com</span><br><span class="line">127.0.0.1 adobe-dns.adobe.com</span><br><span class="line">127.0.0.1 adobe-dns-2.adobe.com</span><br><span class="line">127.0.0.1 adobe-dns-3.adobe.com</span><br><span class="line">127.0.0.1 ereg.wip3.adobe.com</span><br><span class="line">127.0.0.1 activate-sea.adobe.com</span><br><span class="line">127.0.0.1 wwis-dubc1-vip60.adobe.com</span><br><span class="line">127.0.0.1 activate-sjc0.adobe.com</span><br><span class="line">127.0.0.1 hl2rcv.adobe.com</span><br><span class="line">127.0.0.1 ims-na1-prprod.adobelogin.com</span><br><span class="line">127.0.0.1 na4r.services.adobe.com</span><br><span class="line">127.0.0.1 na1r.services.adobe.com</span><br></pre></td></tr></table></figure><h2 id="我的解决方案"><a href="#我的解决方案" class="headerlink" title="我的解决方案"></a>我的解决方案</h2><p>解决方法也很简单，就是阻断Adobe链接检测服务器</p><p>据我分析，我阻断了以下三个程序解决了该问题。</p><p>C:\Program Files\Adobe\Adobe Photoshop 2024\Adobe Crash Processor.exe<br>C:\Program Files\Adobe\Adobe Photoshop 2024\CRWindowsClientService.exe<br>C:\Program Files\Adobe\Adobe Photoshop 2024\Photoshop.exe</p><h4 id="火绒"><a href="#火绒" class="headerlink" title="火绒"></a>火绒</h4><p>可以通过火绒的 防护中心 → 系统防护 → 联网控制 → 添加规则  阻止以上三个程序联网即可解决</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/PSLW.png"></p><p>除了通过火绒阻止还可以用Windows10的防火墙禁止这三个程序出站联网。我没用试过有没有用。毕竟我已经用火绒解决了。</p><h3 id="2023年11月20日22-34-52更新："><a href="#2023年11月20日22-34-52更新：" class="headerlink" title="2023年11月20日22:34:52更新："></a>2023年11月20日22:34:52更新：</h3><p>如果您挂了梯子，还是会弹出警告，需要单独通过代理软件来屏蔽Adobe的域名</p><p>例：V2rayN</p><p>keyword:adobe（屏蔽包含”adobe“关键词的所有网址）</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20231120223816116.png" alt="image"></p><p>祝君好运！</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/END_02.svg"></p>]]></content>
    
    
    <summary type="html">“ 这个非正版的应用程序将很快被禁用，联系你的 IT 管理员 ”</summary>
    
    
    
    <category term="Ps" scheme="https://sansuidouer.github.io/categories/Ps/"/>
    
    
    <category term="Ps" scheme="https://sansuidouer.github.io/tags/Ps/"/>
    
  </entry>
  
  <entry>
    <title>Windows10 超级资源管理器 Clover</title>
    <link href="https://sansuidouer.github.io/8090/"/>
    <id>https://sansuidouer.github.io/8090/</id>
    <published>2023-11-18T12:39:51.000Z</published>
    <updated>2024-01-24T14:20:41.297Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Clover"><a href="#Clover" class="headerlink" title="Clover"></a>Clover</h1><p>一款很古老的软件，现在已经不更新了</p><p>目前版本支持到Windows10</p><p>Clover 是 Windows Explorer 资源管理器的一个扩展，为其增加类似谷歌 Chrome 浏览器的多标签页功能</p><p>官网：<a href="http://cn.ejie.me/">http://cn.ejie.me/</a></p><h2 id="特别说明"><a href="#特别说明" class="headerlink" title="特别说明"></a>特别说明</h2><p>下载火绒会报毒，介意勿用！介意勿用！介意勿用！</p><p>我个人认为可能是内置了广告书签导致的，后续使用没发现有什么问题。</p><p>病毒名称：TrojanDownloader&#x2F;QiaoYa.d</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20231118204756021.png" alt="image-20231118204756021"></p><p>哈勃查毒显示未发现风险 <a href="https://habo.qq.com/file/showdetail?pk=ADQGZF1qB2YIMVs6U2oHYQ==">腾讯哈勃分析系统</a></p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20231118205403786.png" alt="image-20231118205403786"></p><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><p>功能也很简单，就是可以像浏览器一样开很多标签，而不是像Win10分好多窗口。还有就是可以设置书签快速访问，也可以设置网页书签。很方便。</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20231118205823861.png" alt="image-20231118205823861"></p><h2 id="修改三叶草图标"><a href="#修改三叶草图标" class="headerlink" title="修改三叶草图标"></a>修改三叶草图标</h2><p>记一次更改任务栏三叶草图标问题</p><p>修改Clover的快捷方式图标，达到修改图标的目的</p><p>Clover默认安装快捷方式目录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\ProgramData\Microsoft\Windows\Start Menu\Programs</span><br></pre></td></tr></table></figure><p>打开目录后寻找Clover的一个快捷方式，修改图标即可。</p><p>Windows图标路径：C:\Windows\System32\imageres.dll</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20231118210208900.png" alt="image-20231118210208900"></p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/END_02.svg"></p>]]></content>
    
    
    <summary type="html">Clover 是 Windows Explorer 资源管理器的一个扩展，为其增加类似谷歌浏览器的多标签页功能</summary>
    
    
    
    <category term="软件" scheme="https://sansuidouer.github.io/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
    <category term="软件分享" scheme="https://sansuidouer.github.io/tags/%E8%BD%AF%E4%BB%B6%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>啥是ACES？</title>
    <link href="https://sansuidouer.github.io/45385/"/>
    <id>https://sansuidouer.github.io/45385/</id>
    <published>2023-11-18T12:37:43.000Z</published>
    <updated>2024-01-24T14:20:41.266Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误，请重试" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="85c90208feda1d4482483042a44928e8447bffc1dc20e509679af3c420ca7211">5560b822679e40d5171246821a336b3df26b4499cf4fb7b65cad23e9f424a1e1d4b1198a7f4bf76b739be88484d4aae09d475ca6ee07f834bae2601358c2938d7b5892da55f096575ee16550046e4f0f047c749de504e16a4019736b8e1c176f6c179faf6d8ed4b5210c5f072d5b0319ac60c4f204722e2a10b166b1603a4387fe2074c5d34a2f8888c17bc34dcd01cb3df0b8edd5313e4c779eead01f44c390c223e614f9233d9af6b39a3b6b773b49b073df52200e22e20afaed98922e14d7eee808dea8e31a5c0fece0c607943f01f6fc88ddd009e50a1e3000f217cfdc6f395d6881938e1934e001851c9b36937e59a62c11c461e6fa6f59fe5987d0f838a1e7af4d48ea73a04f3638d6b0682cc667f92b3f587b187d2a48bb1c3be9d870ac3577bb22b0a503e1ffa7f5146d55182be473ca4ec4b242652802606fe3d7bf14d758ab4c342623b3212feab97acbf13985e67b1d89409c8e3022df1861e5db4d28d4c2c374990ef58b1188f83058a7c052d1b678e79541434bda06771f426ffe938843955d67248e069337824af7183e92be8a5fb3dda2daa13ceb4d90c125a25f61b605088da17dd41300100562cbbdda645d786badb92781d8ad8bc15fed5b9f4007ecabf18f4830f0079065b49c0d8026056c4ee87074f6d9a3a56cc9a5d583594e541a942670d817307ae38290ed0fc438605180371ee48e9f70eb013da4287d2c6a21f220cbcb5cb0eaed9f9ea24ab7c0618ee6718f0063f36834e5cac6a680b28cd8108387901a34345026357e551953bdfbde0941c56ccd21365bc427a32bc94c868fbe75a716a9845d06783ddbe8507122756464c7ff4997114ea9cae476ea44fcebf0c76a78bb7c64170c33262fdbd6931a5a56316a3eb0656b2168cf31f41b77a65207e17220768066798d05f8dab68d8e297d96da72a37d955773f79fd97e9cab69dd3637e92ed92d8b9f9038bf22eb597e4ecdb4e745fffdf237156bf0ed45a9d00e2d4d223fc1933c6850157b153f535da1d0d2a94f03d5471f64e2955a9ebf2925ea8830fd7e14861d0ca15e451ba8b5c53bdfec98ab48d4c0aa73e269d1009265e77d69a1e66d631f97c631aadf904eb0474a79634e646d2a28e633821ec7b1b682cf4c3b735a80e848425f42d0d8f5d16a6c182c93ae5382928e422968ef7d371f203a482793171fd06e4760112362cee6622eb09c0b8b5117bb74d3c2ea37749592fe1a203a3d822acc79d27f0796bffff38bec21b133ef67190fdf067d494af666e26d6c0cd531981500a8494a14833e6f7676e011b83a1d7cb2ccc5b06be25b9468cc199ee9213913d0bc4305106a2f69c685b97df2331f96e96ea9363d76eeaae72dd1800b09dc44e00f6ab2240bcbbf52555d8ddaecb9ac20cd06526d78d3fc8853b6f01097b34b618ad8d4360f3247badb6d41214b146ae3a70bcd25b739d362cddfefc6a5abefb13aa3d10d428daebec0ca0b78cd447cb8e99973469b89ea0cc17cef4e3c6b65f1c02bcfb863d13e8739641a2f28d22cd522279afdf191e47d3bb4edcb322b7be28669d62bab9fd4858e46d12cfa60c8d89fc2fa6bf38c3eeea2d0258199472b2391e155392b0826bc09356e4c986575169743336859c3c05014ffc5237fade2b50e40b96c2b4c429f2cb172f8ba04c641f6babd712347cba6c9e1b6f6063845af91428f5b473e3839d7cade940790b9dea1228d33b6c582c0f2ea1224a5c8d9a4818bafab35917db68ddeed983f806a6dcbce3f8ff9465b79890463c4d2961f01510d7750d8292918dabea652b1842ab886840a3fac0f8a09d1832b65381ca47efa41d4ac9007c7d539cc9e6d47635ca2a67569967fbf7919471ccc51aeaf4ab9d276bb90b252d379fa482b72bc5d2388638f5a680319b2bd1ab4df9e05bc7178939c6dd5b151f1f42e2dd24daea9540884ef0776b0aca74f833a00bf0d7b53274169bf4bed7e4057b8095fb9ec991ec56a0ccbd4e53f69f691a91fa2b0c5ba68d9419d2127ebcf9e0fc139146d094bb05a9121a45213dd34b8886d1686f64817b431035c5f5151e8a16548a296ec2b32ee8a11d590a667703a69298476a4eb63e277bf7f819e1329728e4c95363617d5ace15e07c1192641338da3c402603a3ae33c77da75193a557b5169e876eb70f78d3e90093f53b6de1bbbe0fbe16175e65702998466281ce7aad30f51c00e653e9aa79169b63fd619abeb2efbf1511a1408f36786f401dd95d30a6dcd5a714f00f66104889f4b7b4883d724d8422f9c5f26a2dc1a2a353b2d8815ab3b49a5fecfb3c4e0d33401734025a6f92102418ab27fb8b5987616ece455f1d94e799a0f4203e8a67c73f3a36c420c41a1dd478ea2e9b9512e34ea508d64448b85cd9eb2c412b457a7bcaed63b8312a9795d35099a26a1068dfb90a5da9acbf0e11d8870af47cd1cdb6265d20f5cf20a12a9bef06e13ef1dec2634d448ae98dd2183ae2c61af0adc9daed0c7a3be0a353b7497edb833ea4e98cd46c117726351578ca27eaad1eebbfca53bac513c6dcedf38542427a4b0a187dce9c52801873ce19c5ffabfd2b8611ec3b0ca99ae556e8dff182fcdd42f71590911e0115c0cb8f0e622e2e8eade277d139b0cdda50c7b94cd398f43df4cdac205e9236123b1266cd91212ab83daa208326364e4f3f1f118b08ae43d8b88cdd3aae1ab6498f4e89d50190eca7dfe12fd1c1aa3411d5b38bb1a0e9bd57783119f889afc737c93413a4141fd51af7f452fa4b21fb6fa93649ab5da155bc00ce07d9f2a2e989213f563cb123747f71a9955fbd121b3d71d6a5fd833c93402e877ef76845845597bdc14c5318b5f1f31a437d82f3a78fa5b47ee9ac525fe2b65f7e78d309209efc199b55da3f4d06ca50f155d9ad2a4f948e9432771eab0f3535c856e6c5c5766df5734ec26643b5f15fb96685bd1992922a6c0d1f6a8405b03b49e963e86b08ea75074e48aaffebe389b3dd169edee4b5e5635b766d57903ee3d817c890747c560e52ea6dda9fee2600270d512a81769cfca55f03d59aa26fad4ca1a30e821c46a7fa8841659fdc3c99e1c2d9674feb766efa632a2892d36f9f2fa282abc5faef88faddd94de6b5fc6fa550772e64acbbaf179431a4f62bc873183525c0425ccfd7996f293c0bce88e534c5bb04fb5ade33f80c42c7f6547b94a6adddd7b207ab033c20a031c6ab0ea70749b01f9d151284cb7898933b4b87270d69733158a92ef70e7360b57a813af6ba92503ddf896468e6c0f0fe768f02f19b369ea1447eb26e50fd0e1975e9785efad10ce69f80f014397b3a71978b15619568f74342120e44679ef6e85a69ce009e0552b7b48d5944988be7a4fd843879fa591422a5912291bac899d9f9ec3f414ab1f9e6ff7929c089dc6a778be6861b65d9204882a754ee3e0e42303c4aa3030af47349eece45169734a135df385cf0d731341bcfa7a258f775f65b0b12e48a5fe52bd177501b5481bd22e732318af500b86a7017d07b18ca06248999407f722a0a2a4d371bcddad5e984ee484532d6dae6430a70d6bf4210880e9f7bf01f05693c71e73317e18b59c427b141cb674512d68cb2af84e43d7f507680320ef5506d4536d1ae06eecc6ddf7fa853f04cbeabb15fdf7b9a6469c4a51a01980b9838295261b7633c0ba97bef6ec1a52b7b43375b120fe74f2af267d067d801a2247dd9abfeb1106cb8105960f29fbdfa920a4f937420fc323578352539e0f739a9d8d5ba1725e646bc43e762f1911808fdffa8f23696acfe4f2ddc0698d56ee70b168fd9161b77ddead49b8e2ae90261f8ee1588d4efc164923614e54ed04b6845d834175f4817218dc636751a15591f1353cb7173dbbd07cb1c31defb4284d1a668ad62a1311f51821e14567592d009cc1f0bf0c480427d4510c1fe43dac3e1e251ecc39570e7059782b984dc0bb31b9956b310cffdf81a29791b0c7d4c89614d3aaf9f26415f59cc8b30134e57937bb25d608b276647e5dd3ce62eaa4932b0963a9a8f711a4686eceb848f835c4e8d8644df97c17547cbc20feca3cebb8dc3343cc5c3a3e8a632855515a947cc4177e887822e3c1807fac3e0656438e86673abca9d689e5672dca27a6f8f38b846ce22e5a57be020afc46cea8a19d87f084622ad3aefcada9ba3b8c3ba1191f27cdae18d8d8fe5de0a7c796c8588bb2d50db2b2b6dd6f11f919d5a7915b38b8795ed5dd8968e267cee8c2328acf8655d8139983abe93a5ef1e7a99681313d319eab24cb9c14b741a1a1810472cd4c4374b188c1232cf79ac7f2df6262efaaacce0097c21d7b09c26142dcd220cd07d98d762f41b8833e8c4cafe706fe0610cc92d2d5db759f8fcb4aec8e0f61b32ac5035cdf980b96ff819adbdf5bb49c0a6731b5b9d27d6c8dedcd7eced0fd28b2cbd7de59bc9b7b86e6a0daad16cd67e4430e868e29853b294d58651deaa082665cbd683369f47a441a3eec2697b2898b0535feb05470bb7030277e967344c484b49eefd637b0e6f34748bdf64ecb5cf8fe8a27ae9e24b1e4efc31fe95646e99d375527a231692ca1a4ed0395bf2b42</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入访问密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">此文章暂未开放，请联系管理员观看！</summary>
    
    
    
    <category term="Maya" scheme="https://sansuidouer.github.io/categories/Maya/"/>
    
    
    <category term="Maya" scheme="https://sansuidouer.github.io/tags/Maya/"/>
    
  </entry>
  
  <entry>
    <title>Ps图层批量重命名 2.0</title>
    <link href="https://sansuidouer.github.io/46573/"/>
    <id>https://sansuidouer.github.io/46573/</id>
    <published>2023-11-18T12:02:35.000Z</published>
    <updated>2024-01-24T14:20:41.231Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Jsx脚本安装"><a href="#Jsx脚本安装" class="headerlink" title="Jsx脚本安装"></a>Jsx脚本安装</h2><p>脚本放置位置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files\Adobe\Adobe Photoshop 2023\Presets\Scripts</span><br></pre></td></tr></table></figure><p>重启PS</p><h2 id="脚本的使用"><a href="#脚本的使用" class="headerlink" title="脚本的使用"></a>脚本的使用</h2><p>选中需要批量重命名的图层执行该脚本</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20231118201318937.png" alt="image-20231118201318937"></p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20231118202543767.png" alt="image-20231118202543767"></p><p>三种模式，分别为 后缀   前缀   完全重命名</p><p>图层_%n  可得到如图所示效果  %n为序号的意思</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20231118203024114.png" alt="image-20231118203024114"></p><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>蓝奏云：<a href="https://zhangzhilong.lanzoue.com/iMglz1f95edi">https://zhangzhilong.lanzoue.com/iMglz1f95edi</a></p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/END_02.svg"></p>]]></content>
    
    
    <summary type="html">此文章介绍了利用jsx脚本重命名图层名称的方法</summary>
    
    
    
    <category term="Ps" scheme="https://sansuidouer.github.io/categories/Ps/"/>
    
    
    <category term="Adobe" scheme="https://sansuidouer.github.io/tags/Adobe/"/>
    
    <category term="Ps" scheme="https://sansuidouer.github.io/tags/Ps/"/>
    
  </entry>
  
  <entry>
    <title>李跳跳自定义规则</title>
    <link href="https://sansuidouer.github.io/24119/"/>
    <id>https://sansuidouer.github.io/24119/</id>
    <published>2023-11-12T10:29:14.000Z</published>
    <updated>2024-01-24T14:20:41.285Z</updated>
    
    <content type="html"><![CDATA[<p><strong>2023年11月19日21:26:52更新：Github公告</strong></p><blockquote><p>由于李跳跳自定义规则的局限性，很多弹窗无法编写规则关闭，本项目不再更新应用内广告和弹窗规则。如果你有关闭开屏广告以外的需求，建议切换至 <a href="https://github.com/gkd-kit/gkd">gkd</a> 使用，<a href="https://github.com/gkd-kit/subscription">gkd 默认订阅</a> 后续将持续更新。</p></blockquote><p><strong>2023 年 8 月 24 日</strong>，李跳跳官方公众号宣布无限期停更！</p><p>用过李跳跳的懂得都懂，不想换掉李跳跳的可以用以下方法继续更新规则</p><p>Github 有一个仓库更新了很多自定义跳过规则。介绍的很清楚如何使用，感兴趣了解一下</p><p>Github 主页：<a href="https://github.com/Snoopy1866/LiTiaotiao-Custom-Rules">https://github.com/Snoopy1866/LiTiaotiao-Custom-Rules</a></p><p>自定义规则页面：<a href="https://snoopy1866.github.io/LiTiaotiao-Custom-Rules">https://snoopy1866.github.io/LiTiaotiao-Custom-Rules</a></p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20231112183540842.png" alt="image-20231112183540842"></p>]]></content>
    
    
    <summary type="html">李跳跳是一款利用无障碍权限进行跳App开屏广告的安卓辅助应用，无需联网，免费使用。</summary>
    
    
    
    <category term="软件分享" scheme="https://sansuidouer.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="软件分享" scheme="https://sansuidouer.github.io/tags/%E8%BD%AF%E4%BB%B6%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>NekoBox</title>
    <link href="https://sansuidouer.github.io/59922/"/>
    <id>https://sansuidouer.github.io/59922/</id>
    <published>2023-11-12T09:25:50.000Z</published>
    <updated>2024-01-24T14:20:41.205Z</updated>
    
    <content type="html"><![CDATA[<h1 id="NekoBox"><a href="#NekoBox" class="headerlink" title="NekoBox"></a>NekoBox</h1><p>NekoBox主页：<a href="https://matsuridayo.github.io/">MatsuriDayo</a></p><p>NekoBox for Android <a href="https://github.com/MatsuriDayo/NekoBoxForAndroid">GitHub - NekoBox forAndroid</a></p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20231112174743330.png" alt="image-20231112174743330"></p><p>前一段时间 Clash 内核作者把Github上面的库删除了，原因也众说纷纭。</p><p>总之也就意味着Clash内核以后不在维护了，如有需求请尽快切换别的内核进行使用。</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20231112181058876.png" alt="image-20231112181058876"></p><p>NekoBox 就是一个很好的替补。</p><p>NekoBox可以选择Xray内核和 Sing-box内核。Xray是V2ray使用的内核，</p><p>首次启动会让您手动选择内核，根据您的节点类型选择内核。</p><p>NekoBox支持Xray和Sing-Box内核，支持Naive内核，Tuic内核扩展，WireGuard配置，WARP+配置文件，支持全部协议！</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20231112181006005.png" alt="image-20231112181006005"></p>]]></content>
    
    
    <summary type="html">NekoBox是一款代理链接工具</summary>
    
    
    
    <category term="软件分享" scheme="https://sansuidouer.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="软件分享" scheme="https://sansuidouer.github.io/tags/%E8%BD%AF%E4%BB%B6%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>Vray for Maya</title>
    <link href="https://sansuidouer.github.io/52726/"/>
    <id>https://sansuidouer.github.io/52726/</id>
    <published>2023-11-05T09:01:31.000Z</published>
    <updated>2024-01-24T14:20:41.241Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Chaaos"><a href="#Chaaos" class="headerlink" title="Chaaos"></a>Chaaos</h1><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/thumb-vray6releasevideo.png" alt="img"></p><ul><li><a href="https://www.chaos.com/vray/maya">Vray for Maya官方主页</a></li><li><a href="https://docs.chaos.com/display/VMAYA/Tutorials">Vray for Maya 官方教程</a>  </li><li><a href="https://docs.chaos.com/display/VMAYA/V-Ray+for+Maya+Help">Vray for Maya 官方帮助</a></li><li><a href="https://www.youtube.com/@ChaosOfficial">Chaost TV Youtube频道</a></li></ul><h1 id="渲染设置-Overrides"><a href="#渲染设置-Overrides" class="headerlink" title="渲染设置-Overrides"></a>渲染设置-Overrides</h1><h2 id="Camera（摄像机）"><a href="#Camera（摄像机）" class="headerlink" title="Camera（摄像机）"></a>Camera（摄像机）</h2><p><strong>Auto Exposure</strong>  自动曝光</p><p><strong>Auto White Balance</strong>  自动白平衡</p><p><strong>Transfer to selected camera</strong> 的意思是传输到选定摄像机</p><p><strong>Camera Type</strong> 摄像机类型（标准，球形，圆柱形…）</p><p><strong>Overscan mode</strong> 过扫描模式 （我愿称之为扩边）</p><p>—   None 关闭<br>—    所有边距相等<br>—   水平和垂直边距<br>—   左边距、右边距、上边距、下边距 </p><p><strong>Overscan values</strong> 过扫描值（大白话翻译你想扩多少！）</p><p><strong>Overscan units</strong> 过扫描单位（大白话翻译你想以谁为单位！）</p><p>—   像素<br>—   百分比</p><font color="#FF0000"><p>单说一下百分比问题<br>假设你渲染的图像尺寸为1000x1000像素<br>你设置了数值为 1 2<br>则渲染得到的尺寸为1020x1040</p></font><p><strong>Override FOV</strong> 覆盖FOV<br><strong>Depth of Field</strong> 景深<br><strong>Motion blur</strong> 动态模糊<br><strong>Prepass samples</strong><br><strong>Geometry samples</strong><br><font color="#FF0000"><strong>Ignore image planes</strong> 忽略图像平面</font></p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20231105183631020.png" alt="image-20231105183631020"></p><h2 id="Geometry（几何体）"><a href="#Geometry（几何体）" class="headerlink" title="Geometry（几何体）"></a>Geometry（几何体）</h2><p><img src="https://docs.chaos.com/download/attachments/60896294/maya2020_50010_GeometryOverrides.jpg?version=2&modificationDate=1591894436000&api=v2" alt="maya2020_50010_GeometryOverrides.jpg"></p><p><strong>位移</strong> 可理解为置换（默认勾选）</p><p><strong>细分</strong> （默认勾选）</p><p><strong>视口细分</strong> 勾选后Maya按3才有效果（默认不勾选）</p><p><strong>Hair&#x2F;PaintFX&#x2F;Fur</strong>  用于Maya毛发的渲染（默认勾选）</p><p><strong>VRay 代理</strong> 用于场景中 V-Ray 代理对象的渲染（默认勾选）</p><p><strong>粒子</strong> 用于粒子的渲染（默认勾选）</p><p><strong>插件几何体</strong>  第三方插件引入场景的几何体的渲染。（默认勾选）</p><p><strong>隐藏的几何体</strong> （默认勾选）</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/END_02.svg"></p>]]></content>
    
    
    <summary type="html">Vray for Maya</summary>
    
    
    
    <category term="Maya" scheme="https://sansuidouer.github.io/categories/Maya/"/>
    
    
    <category term="Vray" scheme="https://sansuidouer.github.io/tags/Vray/"/>
    
  </entry>
  
  <entry>
    <title>尝试保存时出现致命错误...</title>
    <link href="https://sansuidouer.github.io/32820/"/>
    <id>https://sansuidouer.github.io/32820/</id>
    <published>2023-11-05T07:39:43.000Z</published>
    <updated>2024-01-24T14:20:41.264Z</updated>
    
    <content type="html"><![CDATA[<h1 id="尝试保存时出现致命错误"><a href="#尝试保存时出现致命错误" class="headerlink" title="尝试保存时出现致命错误"></a>尝试保存时出现致命错误</h1><p>关键词：[Maya崩溃] [英伟达驱动]</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20231105172821479.png" alt="image-20231105172821479"></p><p>在我们使用Maya的过程中，我遇到一个问题，有些时候我们完成制作退出Maya的时候。会提示出现致命错误并崩溃的情况。</p><p>在此记录一下解决方法</p><p><a href="https://www.nvidia.com/en-us/geforce/drivers/">https://www.nvidia.com/en-us/geforce/drivers/</a></p><p>通过以上链接↑下载 NVIDIA的<strong>GeForce® Drivers</strong>驱动更新程序，升级最稳定的显卡驱动解决此问题</p><p>如果您的右下角有<strong>GeForce® Drivers</strong>程序则不需要再下载直接更新推荐的驱动程序即可</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20231105160937963.png" alt="image-20231105160937963"></p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20231105160033181.png" alt="image-20231105160033181"></p><p>如果您不想下载以上程序登陆您的ID</p><p>你也可以选择直接在以下NVIDIA官方驱动中文网下载您显卡的稳定驱动。</p><p><a href="https://www.nvidia.cn/Download/index.aspx?lang=cn">官方驱动 | NVIDIA</a></p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20231105162815264.png" alt="image-20231105162815264"></p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/END_02.svg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;尝试保存时出现致命错误&quot;&gt;&lt;a href=&quot;#尝试保存时出现致命错误&quot; class=&quot;headerlink&quot; title=&quot;尝试保存时出现致命错误&quot;&gt;&lt;/a&gt;尝试保存时出现致命错误&lt;/h1&gt;&lt;p&gt;关键词：[Maya崩溃] [英伟达驱动]&lt;/p&gt;
&lt;p&gt;&lt;img s</summary>
      
    
    
    
    <category term="Maya" scheme="https://sansuidouer.github.io/categories/Maya/"/>
    
    
    <category term="Maya" scheme="https://sansuidouer.github.io/tags/Maya/"/>
    
  </entry>
  
  <entry>
    <title>Vray 代理设置工具</title>
    <link href="https://sansuidouer.github.io/4804/"/>
    <id>https://sansuidouer.github.io/4804/</id>
    <published>2023-11-03T12:58:52.000Z</published>
    <updated>2024-01-24T14:20:41.227Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vray-代理设置工具"><a href="#Vray-代理设置工具" class="headerlink" title="Vray 代理设置工具"></a>Vray 代理设置工具</h1><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20231116203055919.png" alt="image-20231116203055919"></p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Vray 代理批量设置工具//</span></span><br><span class="line"><span class="comment">// 作者：三岁豆 , 创建日期 2023.11.02  V 1.0//</span></span><br><span class="line"><span class="keyword">proc</span> rayproxy0()&#123;</span><br><span class="line">    <span class="keyword">string</span> $sel[<span class="number">0</span>] = <span class="string">`ls -sl -dag -type shape`</span>; <span class="comment">//$sel=选择的物体，-dag 组内对象生效</span></span><br><span class="line">    <span class="keyword">for</span> ($one <span class="keyword">in</span> $sel) <span class="comment">//对$sel中所有执行</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="string">`objExists ($one+&quot;.geomType&quot;)`</span>)</span><br><span class="line">        &#123;<span class="keyword">setAttr</span> ($one+<span class="string">&quot;.geomType&quot;</span>) <span class="number">0</span>;&#125;</span><br><span class="line">        <span class="keyword">print</span> $sel<span class="string">&quot; 设置None成功！ \n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">proc</span> rayproxy1()&#123;</span><br><span class="line">    <span class="keyword">string</span> $sel[<span class="number">0</span>] = <span class="string">`ls -sl -dag -type shape`</span>; <span class="comment">//$sel=选择的物体，-dag 组内对象生效</span></span><br><span class="line">    <span class="keyword">for</span> ($one <span class="keyword">in</span> $sel) <span class="comment">//对$sel中所有执行</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="string">`objExists ($one+&quot;.geomType&quot;)`</span>)</span><br><span class="line">        &#123;<span class="keyword">setAttr</span> ($one+<span class="string">&quot;.geomType&quot;</span>) <span class="number">1</span>;&#125;</span><br><span class="line">        <span class="keyword">print</span> $sel<span class="string">&quot; 设置 Bounding boxes 成功！ \n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">proc</span> rayproxy2()&#123;</span><br><span class="line">    <span class="keyword">string</span> $sel[<span class="number">0</span>] = <span class="string">`ls -sl -dag -type shape`</span>; <span class="comment">//$sel=选择的物体，-dag 组内对象生效</span></span><br><span class="line">    <span class="keyword">for</span> ($one <span class="keyword">in</span> $sel) <span class="comment">//对$sel中所有执行</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="string">`objExists ($one+&quot;.geomType&quot;)`</span>)</span><br><span class="line">        &#123;<span class="keyword">setAttr</span> ($one+<span class="string">&quot;.geomType&quot;</span>) <span class="number">2</span>;&#125;</span><br><span class="line">        <span class="keyword">print</span> $sel<span class="string">&quot; 设置 Preview geometry 成功！ \n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">proc</span> rayproxy3()&#123;</span><br><span class="line">    <span class="keyword">string</span> $sel[<span class="number">0</span>] = <span class="string">`ls -sl -dag -type shape`</span>; <span class="comment">//$sel=选择的物体，-dag 组内对象生效</span></span><br><span class="line">    <span class="keyword">for</span> ($one <span class="keyword">in</span> $sel) <span class="comment">//对$sel中所有执行</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="string">`objExists ($one+&quot;.geomType&quot;)`</span>)</span><br><span class="line">        &#123;<span class="keyword">setAttr</span> ($one+<span class="string">&quot;.geomType&quot;</span>) <span class="number">3</span>;&#125;</span><br><span class="line">        <span class="keyword">print</span> $sel<span class="string">&quot; 设置 Full geometry 成功！ \n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">string</span> $WindowPorxyz = <span class="string">&quot;WindowPorxyz&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="string">`window -ex $WindowPorxyz`</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">deleteUI</span> -<span class="keyword">window</span> $WindowPorxyz;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">string</span> $WindowPorxy = <span class="string">`window -title &quot;三岁豆Er&quot;</span></span><br><span class="line"><span class="string">       -sizeable 0 </span></span><br><span class="line"><span class="string">       $WindowPorxyz`</span>;</span><br><span class="line"><span class="keyword">columnLayout</span>  -columnAttach <span class="string">&quot;both&quot;</span> <span class="number">10</span> -rowSpacing <span class="number">5</span> -columnWidth <span class="number">230</span>;</span><br><span class="line">      <span class="keyword">text</span>  -h <span class="number">50</span>  -label<span class="string">&quot;Vray 代理批量设置工具&quot;</span>;</span><br><span class="line">       <span class="keyword">button</span> -label <span class="string">&quot;导入代理&quot;</span> -c <span class="string">&quot;vrayCreateImportProxyWindow&quot;</span>;</span><br><span class="line">       <span class="keyword">button</span> -label <span class="string">&quot;导出代理&quot;</span> -c <span class="string">&quot;vrayCreateCreateProxyWindow;&quot;</span>;</span><br><span class="line">       <span class="keyword">button</span> -label <span class="string">&quot;None&quot;</span>  -c  <span class="string">&quot;rayproxy0&quot;</span>;</span><br><span class="line">       <span class="keyword">button</span> -label <span class="string">&quot;Bounding boxes&quot;</span> -c <span class="string">&quot;rayproxy1&quot;</span>;</span><br><span class="line">       <span class="keyword">button</span> -label <span class="string">&quot;Preview geometry&quot;</span> -c <span class="string">&quot;rayproxy2&quot;</span>;</span><br><span class="line">       <span class="keyword">button</span> -label <span class="string">&quot;Full geometry&quot;</span> -c <span class="string">&quot;rayproxy3&quot;</span>;</span><br><span class="line">       <span class="keyword">text</span>  -h <span class="number">5</span> -label<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">setParent</span> ..;</span><br><span class="line"><span class="keyword">showWindow</span> $WindowPorxyz;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/END_02.svg"></p>]]></content>
    
    
    <summary type="html">Vray代理批量设置脚本（MEL）</summary>
    
    
    
    <category term="Maya" scheme="https://sansuidouer.github.io/categories/Maya/"/>
    
    
    <category term="Mel" scheme="https://sansuidouer.github.io/tags/Mel/"/>
    
    <category term="Vray" scheme="https://sansuidouer.github.io/tags/Vray/"/>
    
  </entry>
  
  <entry>
    <title>Round Inset</title>
    <link href="https://sansuidouer.github.io/11742/"/>
    <id>https://sansuidouer.github.io/11742/</id>
    <published>2023-11-02T13:23:52.000Z</published>
    <updated>2024-01-24T14:20:41.246Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Round-Inset-（圆形镶嵌）"><a href="#Round-Inset-（圆形镶嵌）" class="headerlink" title="Round Inset （圆形镶嵌）"></a>Round Inset （圆形镶嵌）</h1><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20231102214035404.png" alt="image-20231102214035404"></p><p>作者主页：<a href="https://www.youtube.com/@Im3dJoe">https://www.youtube.com/@Im3dJoe</a></p><p>本插件演示：<a href="https://www.youtube.com/watch?v=kzo56yxYVCo">https://www.youtube.com/watch?v=kzo56yxYVCo</a></p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>直接复制到Maya脚本编辑器 Python 执行即可 仅测试Maya2018、2022正常运行。</p><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> maya.cmds <span class="keyword">as</span> mc</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> maya.mel <span class="keyword">as</span> mel</span><br><span class="line"><span class="keyword">import</span> maya.OpenMaya <span class="keyword">as</span> OpenMaya</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">roundInset</span>():</span><br><span class="line">    cmd = <span class="string">&#x27;source dagMenuProc;&#x27;</span></span><br><span class="line">    mel.<span class="built_in">eval</span>(cmd)</span><br><span class="line">    <span class="keyword">global</span> insetDataPP</span><br><span class="line">    <span class="keyword">global</span> insetMesh</span><br><span class="line">    <span class="keyword">global</span> insetFace</span><br><span class="line">    <span class="keyword">global</span> insetDataEdgeLoopList</span><br><span class="line">    <span class="keyword">global</span> insetMeshVolume</span><br><span class="line">    <span class="keyword">global</span> useMySelectInsetEdge</span><br><span class="line">    useMySelectInsetEdge = []</span><br><span class="line">    insetDataEdgeLoopList = []</span><br><span class="line">    insetDataPP = []</span><br><span class="line">    insetMesh = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    insetFace = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    insetMeshVolume = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> mc.window(<span class="string">&#x27;RoundInsetUI&#x27;</span>, exists = <span class="literal">True</span>):</span><br><span class="line">        mc.deleteUI(<span class="string">&#x27;RoundInsetUI&#x27;</span>)</span><br><span class="line">    RoundInsetUI = mc.window(<span class="string">&#x27;RoundInsetUI&#x27;</span>, title=<span class="string">&#x27;Round Inset v1.25&#x27;</span>,w = <span class="number">250</span>, s = <span class="number">1</span> ,mxb = <span class="literal">False</span>, mnb = <span class="literal">False</span>)</span><br><span class="line">    mc.columnLayout(adj=<span class="number">1</span>)</span><br><span class="line">    mc.text(l=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    mc.rowColumnLayout(nc=<span class="number">5</span>, cw=[(<span class="number">1</span>, <span class="number">300</span>), (<span class="number">2</span>, <span class="number">20</span>),(<span class="number">3</span>, <span class="number">5</span>),(<span class="number">4</span>, <span class="number">90</span>),(<span class="number">5</span>, <span class="number">10</span>)] )</span><br><span class="line">    mc.columnLayout(adj=<span class="number">1</span>)</span><br><span class="line">    mc.rowColumnLayout(nc=<span class="number">2</span>, cw=[(<span class="number">1</span>, <span class="number">270</span>), (<span class="number">2</span>, <span class="number">20</span>)] )</span><br><span class="line">    mc.floatSliderGrp(<span class="string">&#x27;rInsetV&#x27;</span>, en = <span class="number">0</span>, cw3=[<span class="number">60</span>,<span class="number">40</span>,<span class="number">0</span>], label=<span class="string">&#x27;Offset   &#x27;</span>, field=<span class="literal">True</span>,v=<span class="number">0.01</span>, <span class="built_in">min</span>= -<span class="number">1</span>, <span class="built_in">max</span>= <span class="number">1</span>, step=<span class="number">0.001</span>)</span><br><span class="line">    mc.button(<span class="string">&#x27;rInsetVMax&#x27;</span>,l=<span class="string">&#x27;+&#x27;</span>, c=<span class="string">&#x27;slipderMax(&quot;rInsetV&quot;)&#x27;</span>, en = <span class="number">1</span>,bgc=[<span class="number">0.28</span>,<span class="number">0.28</span>,<span class="number">0.28</span>])</span><br><span class="line">    mc.floatSliderGrp(<span class="string">&#x27;rBevelRound&#x27;</span>, en = <span class="number">0</span>, cw3=[<span class="number">60</span>,<span class="number">40</span>,<span class="number">0</span>], label=<span class="string">&#x27;Round   &#x27;</span>, field=<span class="literal">True</span>, v=<span class="number">0</span> , <span class="built_in">min</span>=-<span class="number">1</span>, <span class="built_in">max</span>= <span class="number">1</span> ,step=<span class="number">0.001</span>)</span><br><span class="line">    mc.button(<span class="string">&#x27;rBevelRoundMax&#x27;</span>,l=<span class="string">&#x27;+&#x27;</span>, c=<span class="string">&#x27;slipderMax(&quot;rBevelRound&quot;)&#x27;</span>, en = <span class="number">1</span>,bgc=[<span class="number">0.28</span>,<span class="number">0.28</span>,<span class="number">0.28</span>])</span><br><span class="line">    mc.floatSliderGrp(<span class="string">&#x27;rBevelLength&#x27;</span>, en = <span class="number">0</span>, cw3=[<span class="number">60</span>,<span class="number">40</span>,<span class="number">0</span>], cc=<span class="string">&#x27;rBevelLengthUpdate()&#x27;</span>, label=<span class="string">&#x27;Length   &#x27;</span>, field=<span class="literal">True</span>,v=<span class="number">0.01</span>, <span class="built_in">min</span>=<span class="number">0.01</span>, <span class="built_in">max</span>= <span class="number">0.1</span>,fmx = <span class="number">10</span>, step=<span class="number">0.001</span>)</span><br><span class="line">    mc.button(<span class="string">&#x27;rBevelLengthMax&#x27;</span>,l=<span class="string">&#x27;+&#x27;</span>,  c=<span class="string">&#x27;slipderMax(&quot;rBevelLength&quot;)&#x27;</span>, en = <span class="number">1</span>,bgc=[<span class="number">0.28</span>,<span class="number">0.28</span>,<span class="number">0.28</span>])</span><br><span class="line">    mc.setParent( <span class="string">&#x27;..&#x27;</span> )</span><br><span class="line">    mc.setParent( <span class="string">&#x27;..&#x27;</span> )</span><br><span class="line">    mc.rowColumnLayout(nc=<span class="number">1</span>, cw=[(<span class="number">1</span>, <span class="number">20</span>)] )</span><br><span class="line">    mc.button(<span class="string">&#x27;InsetRemoveButton&#x27;</span>,l=<span class="string">&#x27;X&#x27;</span>, c=<span class="string">&#x27;roundInsetRemove()&#x27;</span>, h = <span class="number">26</span>, en = <span class="number">0</span>,bgc=[<span class="number">0.28</span>,<span class="number">0.28</span>,<span class="number">0.28</span>])</span><br><span class="line">    mc.button(<span class="string">&#x27;InnerCornerEvenButton&#x27;</span>,l=<span class="string">&#x27;E&#x27;</span>, c=<span class="string">&#x27;evenInnerCorner()&#x27;</span>,h = <span class="number">26</span>,  en = <span class="number">0</span>,bgc=[<span class="number">0.28</span>,<span class="number">0.28</span>,<span class="number">0.28</span>])</span><br><span class="line">    mc.button(<span class="string">&#x27;InsetCkeaneButton&#x27;</span>,l=<span class="string">&#x27;O&#x27;</span>, c=<span class="string">&#x27;roundInsetClean()&#x27;</span>,h = <span class="number">26</span>, en = <span class="number">1</span>,bgc=[<span class="number">0.28</span>,<span class="number">0.48</span>,<span class="number">0.28</span>])</span><br><span class="line">    mc.setParent( <span class="string">&#x27;..&#x27;</span> )</span><br><span class="line">    mc.text(l=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    mc.button(<span class="string">&#x27;InsetButton&#x27;</span>,l=<span class="string">&#x27;Inset&#x27;</span>, c=<span class="string">&#x27;roundInsetRun()&#x27;</span>, en = <span class="number">1</span>,bgc=[<span class="number">0.18</span>,<span class="number">0.18</span>,<span class="number">0.18</span>])</span><br><span class="line">    mc.setParent( <span class="string">&#x27;..&#x27;</span> )</span><br><span class="line">    mc.text(l=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    mc.showWindow(RoundInsetUI)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">slipderMax</span>(<span class="params">name</span>):</span><br><span class="line">    sliderName = name</span><br><span class="line">    currentMaxV = mc.floatSliderGrp(sliderName, q = <span class="number">1</span>, <span class="built_in">max</span>=<span class="number">1</span>)</span><br><span class="line">    currentMinV = mc.floatSliderGrp(sliderName, q = <span class="number">1</span>, <span class="built_in">min</span>=<span class="number">1</span>)</span><br><span class="line">    mc.floatSliderGrp(sliderName, e = <span class="number">1</span>, <span class="built_in">min</span> = currentMinV*<span class="number">2</span>, <span class="built_in">max</span>= currentMaxV*<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rBevelLengthUpdate</span>():</span><br><span class="line">    <span class="keyword">global</span> insetFace</span><br><span class="line">    <span class="keyword">global</span> insetDataEdgeLoopList</span><br><span class="line">    <span class="keyword">global</span> insetMesh</span><br><span class="line">    <span class="keyword">global</span> insetDataPP</span><br><span class="line">    <span class="keyword">global</span> newLoop</span><br><span class="line">    <span class="keyword">global</span> recordInnerCornerList</span><br><span class="line">    newV = mc.floatSliderGrp(<span class="string">&#x27;rBevelLength&#x27;</span>, q=<span class="number">1</span> ,v=<span class="number">1</span>)</span><br><span class="line">    getRoundV = mc.floatSliderGrp(<span class="string">&#x27;rBevelRound&#x27;</span>, q=<span class="number">1</span>, v=<span class="number">1</span>)</span><br><span class="line">    currentOffsetV = mc.floatSliderGrp(<span class="string">&#x27;rInsetV&#x27;</span>, q=<span class="number">1</span> ,v=<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">if</span> mc.objExists(<span class="string">&#x27;insetOffsetNod*&#x27;</span>):</span><br><span class="line">        mc.delete(<span class="string">&#x27;insetOffsetNod*&#x27;</span>)</span><br><span class="line">    edgeLoopCheck = mc.polyListComponentConversion(insetFace, te=<span class="literal">True</span>)</span><br><span class="line">    edgeLoopCheck = mc.ls(edgeLoopCheck,fl=<span class="number">1</span>)</span><br><span class="line">    insetDataEdgeLoopList = edgeLoopCheck </span><br><span class="line">    <span class="keyword">if</span> insetDataEdgeLoopList:</span><br><span class="line">        storeList=[]</span><br><span class="line">        <span class="keyword">for</span> e <span class="keyword">in</span> insetDataEdgeLoopList:</span><br><span class="line">            checkPoint = mc.polyListComponentConversion(e, tv=<span class="literal">True</span>)</span><br><span class="line">            checkPoint = mc.ls(checkPoint,fl=<span class="number">1</span>)</span><br><span class="line">            dist = distanceBetween(checkPoint[<span class="number">0</span>],checkPoint[<span class="number">1</span>])</span><br><span class="line">            <span class="keyword">if</span>  dist &lt; newV:</span><br><span class="line">                storeList.append(e)</span><br><span class="line">    cornerLoop = storeList </span><br><span class="line">    recordInnerCornerList = cornerLoop</span><br><span class="line">    <span class="keyword">if</span> cornerLoop:</span><br><span class="line">        sortGrp = []</span><br><span class="line">        sortGrp =  getEdgeRingGroup(cornerLoop)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(sortGrp) &gt; <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">for</span> g <span class="keyword">in</span> sortGrp:</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">len</span>(g) &gt; <span class="number">2</span> :</span><br><span class="line">                    matchCorner(g, <span class="number">1.3</span>)</span><br><span class="line">            newRoundMesh = mc.duplicate(insetMesh, rr=<span class="number">1</span>)</span><br><span class="line">            mc.rename(newRoundMesh, <span class="string">&#x27;roundV&#x27;</span>)</span><br><span class="line">            <span class="keyword">for</span> g <span class="keyword">in</span> sortGrp:</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">len</span>(g) &gt; <span class="number">2</span> :</span><br><span class="line">                    matchCorner(g, <span class="number">1</span>)</span><br><span class="line">            innerCVList = mc.polyListComponentConversion(cornerLoop, tv=<span class="literal">True</span>)</span><br><span class="line">            innerCVList = mc.ls(innerCVList,fl=<span class="number">1</span>)</span><br><span class="line">            findRingList =mc.polyListComponentConversion(innerCVList,fv=<span class="literal">True</span>, te=<span class="literal">True</span>)</span><br><span class="line">            findRingList  = mc.ls(findRingList,fl=<span class="number">1</span>)</span><br><span class="line">            loopRingList = <span class="built_in">list</span>(<span class="built_in">set</span>(findRingList)-<span class="built_in">set</span>(newLoop))</span><br><span class="line">            loopRingList = mc.polySelectSp(loopRingList[<span class="number">0</span>],ring =<span class="number">1</span>, q=<span class="number">1</span> )</span><br><span class="line">            loopRingList = mc.ls(loopRingList,fl=<span class="number">1</span>)</span><br><span class="line">            insetDataPP = []</span><br><span class="line">            moveP = []</span><br><span class="line">            baseP = []</span><br><span class="line">            checkCV = mc.polyListComponentConversion(loopRingList[<span class="number">0</span>], tv=<span class="literal">True</span>)</span><br><span class="line">            checkCV = mc.ls(checkCV,fl=<span class="number">1</span>)</span><br><span class="line">            bevelDistance = distanceBetween(checkCV[<span class="number">0</span>],checkCV[-<span class="number">1</span>])</span><br><span class="line">            <span class="keyword">for</span> r <span class="keyword">in</span> loopRingList:</span><br><span class="line">                checkCV = mc.polyListComponentConversion(r, tv=<span class="literal">True</span>)</span><br><span class="line">                checkCV = mc.ls(checkCV,fl=<span class="number">1</span>)</span><br><span class="line">                <span class="keyword">if</span> checkCV[<span class="number">0</span>] <span class="keyword">in</span> innerCVList:</span><br><span class="line">                    moveP = checkCV[<span class="number">0</span>]</span><br><span class="line">                    baseP = checkCV[<span class="number">1</span>]</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    moveP = checkCV[<span class="number">1</span>]</span><br><span class="line">                    baseP = checkCV[<span class="number">0</span>]</span><br><span class="line">                basePPos = mc.pointPosition(baseP, w =<span class="number">1</span>)</span><br><span class="line">                movePPos = mc.pointPosition(moveP, w =<span class="number">1</span>)</span><br><span class="line">                dataCollect = [moveP,basePPos,movePPos]</span><br><span class="line">                insetDataPP.append(dataCollect)</span><br><span class="line">            newMesh = mc.duplicate(insetMesh, rr=<span class="number">1</span>)</span><br><span class="line">            mc.rename(newMesh,<span class="string">&#x27;insetOffsetV&#x27;</span>)</span><br><span class="line">            refBevelV = math.sqrt(insetFaceArea) *<span class="number">4</span></span><br><span class="line">            <span class="keyword">for</span> v <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(insetDataPP)):</span><br><span class="line">                currentPos = mc.pointPosition(insetDataPP[v][<span class="number">0</span>], w =<span class="number">1</span>)</span><br><span class="line">                posX = ((currentPos[<span class="number">0</span>] - insetDataPP[v][<span class="number">1</span>][<span class="number">0</span>])*(refBevelV))+ insetDataPP[v][<span class="number">1</span>][<span class="number">0</span>]</span><br><span class="line">                posY = ((currentPos[<span class="number">1</span>] - insetDataPP[v][<span class="number">1</span>][<span class="number">1</span>])*(refBevelV))+ insetDataPP[v][<span class="number">1</span>][<span class="number">1</span>]</span><br><span class="line">                posZ = ((currentPos[<span class="number">2</span>] - insetDataPP[v][<span class="number">1</span>][<span class="number">2</span>])*(refBevelV))+ insetDataPP[v][<span class="number">1</span>][<span class="number">2</span>]</span><br><span class="line">                mc.move(posX, posY, posZ, insetDataPP[v][<span class="number">0</span>].replace(insetMesh, <span class="string">&#x27;insetOffsetV&#x27;</span>), a =<span class="literal">True</span>, ws=<span class="literal">True</span>)</span><br><span class="line">            mc.delete(insetMesh, ch=<span class="number">1</span>)</span><br><span class="line">            blendName = mc.blendShape(<span class="string">&#x27;insetOffsetV&#x27;</span>,<span class="string">&#x27;roundV&#x27;</span>, insetMesh)</span><br><span class="line">            mc.delete(<span class="string">&#x27;insetOffsetV&#x27;</span>,<span class="string">&#x27;roundV&#x27;</span>)</span><br><span class="line">            mc.rename(blendName, <span class="string">&#x27;insetOffsetNode&#x27;</span>)</span><br><span class="line">            mc.setAttr(<span class="string">&#x27;insetOffsetNode.envelope&#x27;</span>, <span class="number">2</span>)</span><br><span class="line">            mc.connectControl( <span class="string">&#x27;rInsetV&#x27;</span>, <span class="string">&#x27;insetOffsetNode.insetOffsetV&#x27;</span> )</span><br><span class="line">            mc.connectControl( <span class="string">&#x27;rBevelRound&#x27;</span>, <span class="string">&#x27;insetOffsetNode.roundV&#x27;</span> )</span><br><span class="line">            mc.setAttr(<span class="string">&#x27;insetOffsetNode.insetOffsetV&#x27;</span>, currentOffsetV)</span><br><span class="line">            mc.setAttr(<span class="string">&#x27;insetOffsetNode.roundV&#x27;</span>, getRoundV)</span><br><span class="line">            mc.select(<span class="string">&#x27;cornerDisp&#x27;</span>)</span><br><span class="line">            cmd = <span class="string">&#x27;doMenuComponentSelectionExt(&quot;&#x27;</span> + insetMesh + <span class="string">&#x27;&quot;, &quot;edge&quot;, 0);&#x27;</span></span><br><span class="line">            mel.<span class="built_in">eval</span>(cmd)</span><br><span class="line">            mc.select(insetFace,add=<span class="number">1</span>)</span><br><span class="line">            mc.setToolTo(<span class="string">&#x27;selectSuperContext&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">roundInsetRemove</span>():</span><br><span class="line">    <span class="keyword">global</span> insetFace</span><br><span class="line">    <span class="keyword">global</span> insetMesh</span><br><span class="line">    <span class="keyword">global</span> insetDataEdgeLoopList</span><br><span class="line">    <span class="keyword">global</span> useMySelectInsetEdge</span><br><span class="line">    useMySelectInsetEdge = []</span><br><span class="line">    <span class="keyword">if</span> insetFace:</span><br><span class="line">        mc.select(cl=<span class="number">1</span>)</span><br><span class="line">        mc.polyDelEdge(insetFace, cv=<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">if</span> insetDataEdgeLoopList:</span><br><span class="line">        mc.select(<span class="string">&#x27;insetDataEdgeLoopListKeep&#x27;</span>)</span><br><span class="line">        insetDataEdgeLoopList = mc.ls(sl=<span class="number">1</span>,fl=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> insetDataEdgeLoopList:</span><br><span class="line">            toCommonFaceA = mc.polyListComponentConversion(insetDataEdgeLoopList[<span class="number">0</span>], tf=<span class="literal">True</span>)</span><br><span class="line">            toCommonFaceA = mc.ls(toCommonFaceA,fl=<span class="number">1</span>)</span><br><span class="line">            toCommonFaceB = mc.polyListComponentConversion(insetDataEdgeLoopList[<span class="number">1</span>], tf=<span class="literal">True</span>)</span><br><span class="line">            toCommonFaceB = mc.ls(toCommonFaceB,fl=<span class="number">1</span>)</span><br><span class="line">            flatFace = <span class="built_in">list</span>(<span class="built_in">set</span>(toCommonFaceA)&amp;<span class="built_in">set</span>(toCommonFaceB))</span><br><span class="line">            insetFace = flatFace</span><br><span class="line">    mc.floatSliderGrp(<span class="string">&#x27;rInsetV&#x27;</span>, e=<span class="number">1</span>, v=<span class="number">0.01</span>, <span class="built_in">min</span>=-<span class="number">1</span>, <span class="built_in">max</span>= <span class="number">1</span>,fmx = <span class="number">10</span>, step=<span class="number">0.001</span>)</span><br><span class="line">    mc.floatSliderGrp(<span class="string">&#x27;rBevelLength&#x27;</span>, e=<span class="number">1</span> , en=<span class="number">0</span>, field=<span class="literal">True</span>,v=<span class="number">0.01</span>, <span class="built_in">min</span>=<span class="number">0.01</span>, <span class="built_in">max</span>= <span class="number">0.1</span>,fmx = <span class="number">10</span>, step=<span class="number">0.001</span>)</span><br><span class="line">    mc.floatSliderGrp(<span class="string">&#x27;rBevelRound&#x27;</span>, e=<span class="number">1</span> ,en=<span class="number">0</span>, v=<span class="number">0</span>, <span class="built_in">min</span>=-<span class="number">1</span>, <span class="built_in">max</span>= <span class="number">1</span>, step=<span class="number">0.001</span>)</span><br><span class="line">    <span class="keyword">if</span> mc.objExists(<span class="string">&#x27;insetDataEdgeLoopListKeep&#x27;</span>):</span><br><span class="line">        mc.delete(<span class="string">&#x27;insetDataEdgeLoopListKeep&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> mc.objExists(<span class="string">&#x27;cornerDisp&#x27;</span>):</span><br><span class="line">        mc.setAttr(<span class="string">&#x27;cornerDisp.creaseLevel&#x27;</span>, <span class="number">0</span>)</span><br><span class="line">        mc.delete(<span class="string">&#x27;cornerDisp&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> insetMesh:</span><br><span class="line">        mc.select(insetMesh)</span><br><span class="line">        mc.delete(<span class="built_in">all</span>=<span class="number">1</span>, e=<span class="number">1</span>, ch=<span class="number">1</span>)</span><br><span class="line">        cmd  = <span class="string">&#x27;doMenuComponentSelectionExt(&quot;&#x27;</span> + insetMesh + <span class="string">&#x27;&quot;, &quot;facet&quot; , 0);&#x27;</span></span><br><span class="line">        mel.<span class="built_in">eval</span>(cmd)</span><br><span class="line">        mc.select(insetFace)</span><br><span class="line">    insetFace = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    insetMesh = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    insetDataEdgeLoopList = []</span><br><span class="line">    mc.setToolTo(<span class="string">&#x27;Move&#x27;</span>)</span><br><span class="line">    mc.button(<span class="string">&#x27;InnerCornerEvenButton&#x27;</span>,e=<span class="number">1</span>, en = <span class="number">0</span>,bgc=[<span class="number">0.28</span>,<span class="number">0.28</span>,<span class="number">0.28</span>])</span><br><span class="line">    mc.button(<span class="string">&#x27;InsetRemoveButton&#x27;</span>,e=<span class="number">1</span>, en = <span class="number">0</span>,bgc=[<span class="number">0.28</span>,<span class="number">0.28</span>,<span class="number">0.28</span>])</span><br><span class="line">    mc.button(<span class="string">&#x27;InsetButton&#x27;</span>,e=<span class="number">1</span>, l=<span class="string">&#x27;Inset&#x27;</span>, c=<span class="string">&#x27;roundInsetRun()&#x27;</span>, en = <span class="number">1</span>,bgc=[<span class="number">0.18</span>,<span class="number">0.18</span>,<span class="number">0.18</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">roundInsetClean</span>():</span><br><span class="line">    <span class="keyword">global</span> insetFace</span><br><span class="line">    <span class="keyword">global</span> insetMesh</span><br><span class="line">    <span class="keyword">global</span> useMySelectInsetEdge</span><br><span class="line">    <span class="keyword">if</span> mc.objExists(<span class="string">&quot;insetOffsetNod*&quot;</span>):</span><br><span class="line">        listNode = mc.ls(<span class="string">&quot;insetOffsetNod*&quot;</span>)</span><br><span class="line">        <span class="keyword">for</span> s <span class="keyword">in</span> listNode:</span><br><span class="line">            getOldMesh = mc.listConnections((s + <span class="string">&#x27;.outputGeometry&#x27;</span>), scn=<span class="literal">True</span> )</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                getOldShape = mc.listConnections((getOldMesh[<span class="number">0</span>] + <span class="string">&#x27;.outputGeometry&#x27;</span>), scn=<span class="literal">True</span> )</span><br><span class="line">                mc.delete(getOldShape, ch=<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                mc.delete(getOldMesh, ch=<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">if</span> mc.objExists(<span class="string">&#x27;insetOffsetNod*&#x27;</span>):</span><br><span class="line">        mc.delete(<span class="string">&#x27;insetOffsetNod*&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> mc.objExists(<span class="string">&#x27;roundV&#x27;</span>):</span><br><span class="line">        mc.delete(<span class="string">&#x27;roundV&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> mc.objExists(<span class="string">&quot;insetOffsetV&quot;</span>):</span><br><span class="line">        mc.delete(<span class="string">&#x27;nsetOffsetV&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> mc.objExists(<span class="string">&#x27;insetDataEdgeLoopListKeep&#x27;</span>):</span><br><span class="line">        mc.delete(<span class="string">&#x27;insetDataEdgeLoopListKeep&#x27;</span>)</span><br><span class="line">    mc.floatSliderGrp(<span class="string">&#x27;rInsetV&#x27;</span>, e=<span class="number">1</span>, v=<span class="number">0.01</span>, <span class="built_in">min</span>=-<span class="number">1</span>, <span class="built_in">max</span>= <span class="number">1</span>,fmx = <span class="number">10</span>, step=<span class="number">0.001</span>)</span><br><span class="line">    mc.floatSliderGrp(<span class="string">&#x27;rBevelLength&#x27;</span>, e=<span class="number">1</span> , en=<span class="number">0</span>, field=<span class="literal">True</span>,v=<span class="number">0.01</span>, <span class="built_in">min</span>=<span class="number">0.01</span>, <span class="built_in">max</span>= <span class="number">0.1</span>,fmx = <span class="number">10</span>, step=<span class="number">0.001</span>)</span><br><span class="line">    mc.floatSliderGrp(<span class="string">&#x27;rBevelRound&#x27;</span>, e=<span class="number">1</span> ,en=<span class="number">0</span>, v=<span class="number">0</span>, <span class="built_in">min</span>=-<span class="number">1</span>, <span class="built_in">max</span>= <span class="number">1</span>, step=<span class="number">0.001</span>)</span><br><span class="line">    <span class="keyword">if</span> mc.objExists(<span class="string">&#x27;insetDataEdgeLoopListKeep&#x27;</span>):</span><br><span class="line">        mc.delete(<span class="string">&#x27;insetDataEdgeLoopListKeep&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> mc.objExists(<span class="string">&#x27;cornerDisp&#x27;</span>):</span><br><span class="line">        mc.setAttr(<span class="string">&#x27;cornerDisp.creaseLevel&#x27;</span>, <span class="number">0</span>)</span><br><span class="line">        mc.delete(<span class="string">&#x27;cornerDisp&#x27;</span>)          </span><br><span class="line">    <span class="keyword">if</span> insetFace:</span><br><span class="line">        mc.select(insetFace)</span><br><span class="line">        cmd = <span class="string">&#x27;doMenuComponentSelectionExt(&quot;&#x27;</span> + insetMesh + <span class="string">&#x27;&quot;, &quot;facet&quot;, 0);&#x27;</span></span><br><span class="line">        mel.<span class="built_in">eval</span>(cmd)</span><br><span class="line">        mc.select(insetFace)</span><br><span class="line">    insetFace = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    insetMesh = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    useMySelectInsetEdge = []</span><br><span class="line">    mc.button(<span class="string">&#x27;InsetRemoveButton&#x27;</span>,e=<span class="number">1</span>, en = <span class="number">0</span>,bgc=[<span class="number">0.28</span>,<span class="number">0.28</span>,<span class="number">0.28</span>])</span><br><span class="line">    mc.button(<span class="string">&#x27;InsetCkeaneButton&#x27;</span>,e=<span class="number">1</span>, en = <span class="number">0</span>,bgc=[<span class="number">0.28</span>,<span class="number">0.28</span>,<span class="number">0.28</span>])</span><br><span class="line">    mc.button(<span class="string">&#x27;InnerCornerEvenButton&#x27;</span>,e=<span class="number">1</span>, en = <span class="number">0</span>,bgc=[<span class="number">0.28</span>,<span class="number">0.28</span>,<span class="number">0.28</span>])</span><br><span class="line">    mc.button(<span class="string">&#x27;InsetButton&#x27;</span>,e=<span class="number">1</span>, l=<span class="string">&#x27;Inset&#x27;</span>, c=<span class="string">&#x27;roundInsetRun()&#x27;</span>, en = <span class="number">1</span>,bgc=[<span class="number">0.18</span>,<span class="number">0.18</span>,<span class="number">0.18</span>])</span><br><span class="line">    mc.setToolTo(<span class="string">&#x27;Move&#x27;</span>)</span><br><span class="line">    <span class="comment"># clean storeBevel Attr</span></span><br><span class="line">    transformsNodeList = mc.ls(dag =<span class="number">1</span>,<span class="built_in">type</span>=<span class="string">&#x27;transform&#x27;</span>,l=<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">for</span> l <span class="keyword">in</span> transformsNodeList:</span><br><span class="line">        anyUserAttr = mc.listAttr(l,userDefined=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> anyUserAttr:</span><br><span class="line">            <span class="keyword">for</span> a <span class="keyword">in</span> anyUserAttr:</span><br><span class="line">                <span class="keyword">if</span> a == <span class="string">&#x27;storeBevelV&#x27;</span>:</span><br><span class="line">                    <span class="keyword">if</span> mc.attributeQuery(a, node = l, ex=<span class="literal">True</span> ):</span><br><span class="line">                        mc.setAttr((l + <span class="string">&quot;.&quot;</span> + a), l=<span class="number">0</span>)</span><br><span class="line">                        mc.deleteAttr(l + <span class="string">&quot;.&quot;</span> + a)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">evenInnerCorner</span>():</span><br><span class="line">    <span class="keyword">global</span> recordInnerCornerList</span><br><span class="line">    mc.select(recordInnerCornerList)</span><br><span class="line">    sortGrp = []</span><br><span class="line">    sortGrp =  getEdgeRingGroup(recordInnerCornerList)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(sortGrp) &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">for</span> g <span class="keyword">in</span> sortGrp:</span><br><span class="line">            <span class="keyword">if</span> mc.objExists(<span class="string">&#x27;tempEvenCurve&#x27;</span>):</span><br><span class="line">                mc.delete(<span class="string">&#x27;tempEvenCurve&#x27;</span>)</span><br><span class="line">            listVtx = vtxLoopOrder(g)</span><br><span class="line">            mc.select(g)</span><br><span class="line">            mc.polyToCurve(form=<span class="number">2</span>, degree=<span class="number">1</span>, conformToSmoothMeshPreview=<span class="number">1</span>)</span><br><span class="line">            mc.rename(<span class="string">&#x27;tempEvenCurve&#x27;</span>)</span><br><span class="line">            curveCVs =mc.ls(<span class="string">&#x27;tempEvenCurve.cv[*]&#x27;</span>,fl=<span class="number">1</span>)</span><br><span class="line">            posCurve = mc.xform(curveCVs[<span class="number">0</span>], a=<span class="number">1</span>,ws=<span class="number">1</span>, q=<span class="number">1</span>, t=<span class="number">1</span>)</span><br><span class="line">            posEdge = mc.xform(listVtx[<span class="number">0</span>], a=<span class="number">1</span>,ws=<span class="number">1</span>, q=<span class="number">1</span>, t=<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">if</span> posCurve == posEdge:</span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                listVtx = listVtx[::-<span class="number">1</span>]</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(curveCVs)&gt;<span class="number">2</span>:</span><br><span class="line">                mc.rebuildCurve(<span class="string">&#x27;tempEvenCurve&#x27;</span>,ch=<span class="number">1</span>, rpo=<span class="number">1</span>, rt=<span class="number">0</span>, end=<span class="number">1</span>, kr=<span class="number">0</span>, kcp=<span class="number">0</span>, kep=<span class="number">1</span>, kt=<span class="number">0</span>, s = <span class="number">0</span> , d=<span class="number">1</span>, tol=<span class="number">0</span>)</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">len</span>(curveCVs)&lt; <span class="number">4</span>:</span><br><span class="line">                    mc.delete( <span class="string">&#x27;tempEvenCurve.cv[1]&#x27;</span>, <span class="string">&#x27;tempEvenCurve.cv[3]&#x27;</span>)</span><br><span class="line">                    curveCVs =mc.ls(<span class="string">&#x27;tempEvenCurve.cv[*]&#x27;</span>,fl=<span class="number">1</span>)</span><br><span class="line">                posCurve = mc.xform(curveCVs[<span class="number">0</span>], a=<span class="number">1</span>,ws=<span class="number">1</span>, q=<span class="number">1</span>, t=<span class="number">1</span>)</span><br><span class="line">                posEdge = mc.xform(listVtx[<span class="number">0</span>], a=<span class="number">1</span>,ws=<span class="number">1</span>, q=<span class="number">1</span>, t=<span class="number">1</span>)</span><br><span class="line">                posEdge[<span class="number">0</span>] = <span class="built_in">round</span>(posEdge[<span class="number">0</span>],<span class="number">3</span>)</span><br><span class="line">                posEdge[<span class="number">1</span>] = <span class="built_in">round</span>(posEdge[<span class="number">1</span>],<span class="number">3</span>)</span><br><span class="line">                posEdge[<span class="number">2</span>] = <span class="built_in">round</span>(posEdge[<span class="number">2</span>],<span class="number">3</span>)</span><br><span class="line">                posCurve[<span class="number">0</span>] = <span class="built_in">round</span>(posCurve[<span class="number">0</span>],<span class="number">3</span>)</span><br><span class="line">                posCurve[<span class="number">1</span>] = <span class="built_in">round</span>(posCurve[<span class="number">1</span>],<span class="number">3</span>)</span><br><span class="line">                posCurve[<span class="number">2</span>] = <span class="built_in">round</span>(posCurve[<span class="number">2</span>],<span class="number">3</span>)</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(curveCVs)):</span><br><span class="line">                pos = mc.xform(curveCVs[i], a=<span class="number">1</span>,ws=<span class="number">1</span>, q=<span class="number">1</span>, t=<span class="number">1</span>)</span><br><span class="line">                mc.xform(listVtx[i], a=<span class="number">1</span>, ws=<span class="number">1</span>, t = (pos[<span class="number">0</span>],pos[<span class="number">1</span>],pos[<span class="number">2</span>]) )</span><br><span class="line">            mc.delete(<span class="string">&#x27;tempEvenCurve&#x27;</span>)</span><br><span class="line">        mc.select(<span class="string">&#x27;cornerDisp&#x27;</span>)</span><br><span class="line">        cmd = <span class="string">&#x27;doMenuComponentSelectionExt(&quot;&#x27;</span> + insetMesh + <span class="string">&#x27;&quot;, &quot;edge&quot;, 0);&#x27;</span></span><br><span class="line">        mel.<span class="built_in">eval</span>(cmd)</span><br><span class="line">        mc.select(insetFace,add=<span class="number">1</span>)</span><br><span class="line">        mc.setToolTo(<span class="string">&#x27;selectSuperContext&#x27;</span>)</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">reviewProtectCorner</span>():</span><br><span class="line">    mc.select(cl=<span class="number">1</span>)</span><br><span class="line">    mc.select(<span class="string">&#x27;cornerDisp&#x27;</span>)</span><br><span class="line">   </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">reFineMySelect</span>():</span><br><span class="line">    getRoundV = mc.floatSliderGrp(<span class="string">&#x27;rBevelRound&#x27;</span>, q=<span class="number">1</span>, v=<span class="number">1</span>)</span><br><span class="line">    getInsetV = mc.floatSliderGrp(<span class="string">&#x27;rInsetV&#x27;</span>, q=<span class="number">1</span>, v=<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">global</span> useMySelectInsetEdge</span><br><span class="line">    useMySelectInsetEdge = mc.filterExpand(ex =<span class="number">1</span>, sm =<span class="number">32</span>) </span><br><span class="line">    mc.select(useMySelectInsetEdge)</span><br><span class="line">    <span class="keyword">global</span> insetFace</span><br><span class="line">    <span class="keyword">global</span> insetMesh</span><br><span class="line">    <span class="keyword">global</span> insetDataEdgeLoopList</span><br><span class="line">    <span class="keyword">if</span> insetFace:</span><br><span class="line">        mc.select(cl=<span class="number">1</span>)</span><br><span class="line">        mc.polyDelEdge(insetFace, cv=<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">if</span> insetDataEdgeLoopList:</span><br><span class="line">        mc.select(<span class="string">&#x27;insetDataEdgeLoopListKeep&#x27;</span>)</span><br><span class="line">        insetDataEdgeLoopList = mc.ls(sl=<span class="number">1</span>,fl=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> insetDataEdgeLoopList:</span><br><span class="line">            toCommonFaceA = mc.polyListComponentConversion(insetDataEdgeLoopList[<span class="number">0</span>], tf=<span class="literal">True</span>)</span><br><span class="line">            toCommonFaceA = mc.ls(toCommonFaceA,fl=<span class="number">1</span>)</span><br><span class="line">            toCommonFaceB = mc.polyListComponentConversion(insetDataEdgeLoopList[<span class="number">1</span>], tf=<span class="literal">True</span>)</span><br><span class="line">            toCommonFaceB = mc.ls(toCommonFaceB,fl=<span class="number">1</span>)</span><br><span class="line">            flatFace = <span class="built_in">list</span>(<span class="built_in">set</span>(toCommonFaceA)&amp;<span class="built_in">set</span>(toCommonFaceB))</span><br><span class="line">            insetFace = flatFace</span><br><span class="line">    <span class="keyword">if</span> mc.objExists(<span class="string">&#x27;insetDataEdgeLoopListKeep&#x27;</span>):</span><br><span class="line">        mc.delete(<span class="string">&#x27;insetDataEdgeLoopListKeep&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> mc.objExists(<span class="string">&#x27;cornerDisp&#x27;</span>):</span><br><span class="line">        mc.setAttr(<span class="string">&#x27;cornerDisp.creaseLevel&#x27;</span>, <span class="number">0</span>)</span><br><span class="line">        mc.delete(<span class="string">&#x27;cornerDisp&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> insetMesh:</span><br><span class="line">        mc.select(insetMesh)</span><br><span class="line">        mc.delete(<span class="built_in">all</span>=<span class="number">1</span>, e=<span class="number">1</span>, ch=<span class="number">1</span>)</span><br><span class="line">        cmd  = <span class="string">&#x27;doMenuComponentSelectionExt(&quot;&#x27;</span> + insetMesh + <span class="string">&#x27;&quot;, &quot;facet&quot; , 0);&#x27;</span></span><br><span class="line">        mel.<span class="built_in">eval</span>(cmd)</span><br><span class="line">        mc.select(insetFace)</span><br><span class="line">    insetFace = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    insetMesh = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    insetDataEdgeLoopList = []</span><br><span class="line">    roundInsetRun()</span><br><span class="line">    mc.setAttr(<span class="string">&#x27;insetOffsetNode.insetOffsetV&#x27;</span>, getInsetV)</span><br><span class="line">    mc.setAttr(<span class="string">&#x27;insetOffsetNode.roundV&#x27;</span>, getRoundV)</span><br><span class="line">    mc.select(<span class="string">&#x27;cornerDisp&#x27;</span>)</span><br><span class="line">    cmd = <span class="string">&#x27;doMenuComponentSelectionExt(&quot;&#x27;</span> + insetMesh + <span class="string">&#x27;&quot;, &quot;edge&quot;, 0);&#x27;</span></span><br><span class="line">    mel.<span class="built_in">eval</span>(cmd)</span><br><span class="line">    mc.select(insetFace,add=<span class="number">1</span>)</span><br><span class="line">    mc.setToolTo(<span class="string">&#x27;selectSuperContext&#x27;</span>)</span><br><span class="line">    mc.button(<span class="string">&#x27;InsetButton&#x27;</span>,e=<span class="number">1</span>, l=<span class="string">&#x27;Inset&#x27;</span>, c=<span class="string">&#x27;roundInsetRun()&#x27;</span>, en = <span class="number">1</span>,bgc=[<span class="number">0.18</span>,<span class="number">0.18</span>,<span class="number">0.18</span>])</span><br><span class="line">      </span><br><span class="line">       </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">roundInsetRun</span>():</span><br><span class="line">    modifiers = mc.getModifiers()</span><br><span class="line">    <span class="keyword">if</span> modifiers == <span class="number">4</span>: <span class="comment"># &quot;press Ctrl&quot; </span></span><br><span class="line">        <span class="keyword">if</span> mc.objExists(<span class="string">&#x27;insetOffsetNod*&#x27;</span>):</span><br><span class="line">            reviewProtectCorner()</span><br><span class="line">            mc.button(<span class="string">&#x27;InsetButton&#x27;</span>,e=<span class="number">1</span>, l=<span class="string">&#x27;reFine&#x27;</span>, c=<span class="string">&#x27;reFineMySelect()&#x27;</span>, en = <span class="number">1</span>,bgc=[<span class="number">0.38</span>,<span class="number">0.28</span>,<span class="number">0.18</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        getRoundV = mc.floatSliderGrp(<span class="string">&#x27;rBevelRound&#x27;</span>, q=<span class="number">1</span>, v=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> mc.objExists(<span class="string">&quot;insetOffsetNod*&quot;</span>):</span><br><span class="line">            listNode = mc.ls(<span class="string">&quot;insetOffsetNod*&quot;</span>)</span><br><span class="line">            <span class="keyword">for</span> s <span class="keyword">in</span> listNode:</span><br><span class="line">                getOldMesh = mc.listConnections((s + <span class="string">&#x27;.outputGeometry&#x27;</span>), scn=<span class="literal">True</span> )</span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    getOldShape = mc.listConnections((getOldMesh[<span class="number">0</span>] + <span class="string">&#x27;.outputGeometry&#x27;</span>), scn=<span class="literal">True</span> )</span><br><span class="line">                    mc.delete(getOldShape, ch=<span class="number">1</span>)</span><br><span class="line">                <span class="keyword">except</span>:</span><br><span class="line">                    mc.delete(getOldMesh, ch=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> mc.objExists(<span class="string">&#x27;insetOffsetNod*&#x27;</span>):</span><br><span class="line">            mc.delete(<span class="string">&#x27;insetOffsetNod*&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> mc.objExists(<span class="string">&#x27;roundV&#x27;</span>):</span><br><span class="line">            mc.delete(<span class="string">&#x27;roundV&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> mc.objExists(<span class="string">&quot;insetOffsetV&quot;</span>):</span><br><span class="line">            mc.delete(<span class="string">&#x27;nsetOffsetV&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> mc.objExists(<span class="string">&#x27;insetDataEdgeLoopListKeep&#x27;</span>):</span><br><span class="line">            mc.delete(<span class="string">&#x27;insetDataEdgeLoopListKeep&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> mc.objExists(<span class="string">&#x27;cornerDisp&#x27;</span>):</span><br><span class="line">            mc.setAttr(<span class="string">&quot;cornerDisp.creaseLevel&quot;</span>, <span class="number">0</span>)</span><br><span class="line">            mc.delete(<span class="string">&#x27;cornerDisp*&#x27;</span>)</span><br><span class="line">        <span class="keyword">global</span> insetDataPP</span><br><span class="line">        <span class="keyword">global</span> insetMesh</span><br><span class="line">        <span class="keyword">global</span> insetFace</span><br><span class="line">        <span class="keyword">global</span> insetDataEdgeLoopList</span><br><span class="line">        <span class="keyword">global</span> insetFaceArea</span><br><span class="line">        <span class="keyword">global</span> newLoop</span><br><span class="line">        <span class="keyword">global</span> recordInnerCornerList</span><br><span class="line">        <span class="keyword">global</span> useMySelectInsetEdge</span><br><span class="line">        recordInnerCornerList = []</span><br><span class="line">        newLoop = []</span><br><span class="line">        insetDataEdgeLoopList = []</span><br><span class="line">        insetDataPP = []</span><br><span class="line">        insetMesh = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        insetFace = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        insetFaceArea = <span class="number">0</span></span><br><span class="line">        selComponent = mc.filterExpand(ex =<span class="number">1</span>, sm =<span class="number">34</span>)</span><br><span class="line">        <span class="keyword">if</span> selComponent:</span><br><span class="line">            geo = mc.ls(hl=<span class="number">1</span>)</span><br><span class="line">            mc.makeIdentity(geo[<span class="number">0</span>], apply=<span class="number">1</span>, t=<span class="number">0</span>, r=<span class="number">0</span>, s=<span class="number">1</span>, n=<span class="number">0</span>, pn=<span class="number">1</span>)</span><br><span class="line">            insetMesh = geo[<span class="number">0</span>]</span><br><span class="line">            faceID = selComponent[<span class="number">0</span>].split(<span class="string">&#x27;[&#x27;</span>)[-<span class="number">1</span>].split(<span class="string">&#x27;]&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">            faceID = <span class="built_in">int</span>(faceID)</span><br><span class="line">            insetFaceArea = getfaceArea(insetMesh,faceID)</span><br><span class="line">            edgeLoopCheck = mc.polyListComponentConversion(selComponent, te=<span class="literal">True</span>)</span><br><span class="line">            edgeLoopCheck = mc.ls(edgeLoopCheck,fl=<span class="number">1</span>)</span><br><span class="line">            insetDataEdgeLoopList = edgeLoopCheck</span><br><span class="line">            mc.sets(insetDataEdgeLoopList, name= <span class="string">&#x27;insetDataEdgeLoopListKeep&#x27;</span>, text=<span class="string">&#x27;insetDataEdgeLoopListKeep&#x27;</span>)</span><br><span class="line">            shortestLength = <span class="number">100000</span></span><br><span class="line">            <span class="keyword">for</span> e <span class="keyword">in</span> edgeLoopCheck:</span><br><span class="line">                checkPoint = mc.polyListComponentConversion(e, tv=<span class="literal">True</span>)</span><br><span class="line">                checkPoint = mc.ls(checkPoint,fl=<span class="number">1</span>)</span><br><span class="line">                dist = distanceBetween(checkPoint[<span class="number">0</span>],checkPoint[<span class="number">1</span>])</span><br><span class="line">                <span class="keyword">if</span>  dist &lt; shortestLength:</span><br><span class="line">                    shortestLength = dist</span><br><span class="line">            shortestLength = <span class="built_in">round</span>(shortestLength, <span class="number">3</span>)</span><br><span class="line">            bevelLength = shortestLength * <span class="number">1.1</span></span><br><span class="line">            bevelLength =  <span class="built_in">round</span>(bevelLength, <span class="number">3</span>)</span><br><span class="line">            maxL = <span class="built_in">round</span>((bevelLength*<span class="number">1.2</span>),<span class="number">2</span>)</span><br><span class="line">            fMax = <span class="built_in">round</span>((bevelLength*<span class="number">10</span>),<span class="number">2</span>)</span><br><span class="line">            stepV =  bevelLength / <span class="number">10</span></span><br><span class="line">            mc.floatSliderGrp(<span class="string">&#x27;rBevelLength&#x27;</span>, e=<span class="number">1</span> ,v=bevelLength, <span class="built_in">min</span>= bevelLength ,<span class="built_in">max</span>= maxL ,fmx=fMax, step = stepV)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> mc.attributeQuery(<span class="string">&#x27;storeBevelV&#x27;</span>, node = geo[<span class="number">0</span>], ex=<span class="literal">True</span> ):</span><br><span class="line">                mc.addAttr(geo[<span class="number">0</span>], ln=<span class="string">&#x27;storeBevelV&#x27;</span>)</span><br><span class="line">            mc.setAttr((insetMesh + <span class="string">&#x27;.storeBevelV&#x27;</span>), <span class="number">0.01</span>)</span><br><span class="line">            mc.polyExtrudeFacet(selComponent,constructionHistory=<span class="number">1</span>, keepFacesTogether=<span class="number">1</span> ,divisions=<span class="number">1</span>, twist=<span class="number">0</span>, taper=<span class="number">1</span>, offset= <span class="number">0.01</span>, thickness=<span class="number">0</span>, smoothingAngle=<span class="number">30</span>)</span><br><span class="line">            insetFace = mc.ls(sl=<span class="number">1</span>,fl=<span class="number">1</span>)</span><br><span class="line">            newLoop = mc.polyListComponentConversion(te=<span class="literal">True</span>)</span><br><span class="line">            newLoop = mc.ls(newLoop,fl=<span class="number">1</span>)</span><br><span class="line">            mc.select(cl=<span class="number">1</span>)</span><br><span class="line">            findCorner = []</span><br><span class="line">            <span class="keyword">for</span> n <span class="keyword">in</span> newLoop:</span><br><span class="line">                intSelCV = mc.polyListComponentConversion(n, tv=<span class="literal">True</span>)</span><br><span class="line">                intSelCV = mc.ls(intSelCV,fl=<span class="number">1</span>)</span><br><span class="line">                distanceX = distanceBetween(intSelCV[<span class="number">0</span>],intSelCV[<span class="number">1</span>])</span><br><span class="line">                <span class="comment">#if distanceX &gt; bevelLength*1.1:</span></span><br><span class="line">                <span class="keyword">if</span> distanceX &gt; bevelLength*<span class="number">1.5</span>:</span><br><span class="line">                    findCorner.append(n)</span><br><span class="line">            cornerLoop = <span class="built_in">list</span>(<span class="built_in">set</span>(newLoop)-<span class="built_in">set</span>(findCorner))</span><br><span class="line">            recordInnerCornerList = cornerLoop</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> useMySelectInsetEdge:</span><br><span class="line">                <span class="comment"># for user select</span></span><br><span class="line">                mc.select(useMySelectInsetEdge)</span><br><span class="line">                mc.ConvertSelectionToFaces()</span><br><span class="line">                mc.ConvertSelectionToEdgePerimeter()</span><br><span class="line">                tempCheckList = mc.ls(sl=<span class="number">1</span>,fl=<span class="number">1</span>)</span><br><span class="line">                newCorner = <span class="built_in">list</span>(<span class="built_in">set</span>(newLoop)&amp;<span class="built_in">set</span>(tempCheckList))</span><br><span class="line">                cornerLoop = newCorner</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> cornerLoop:</span><br><span class="line">                mc.createNode(<span class="string">&#x27;creaseSet&#x27;</span>)</span><br><span class="line">                mc.rename(<span class="string">&#x27;cornerDisp&#x27;</span>)</span><br><span class="line">                mc.setAttr(<span class="string">&quot;cornerDisp.creaseLevel&quot;</span>, <span class="number">1</span>)</span><br><span class="line">                <span class="comment">#mc.select(cornerLoop)</span></span><br><span class="line">                sortGrp = []</span><br><span class="line">                sortGrp =  getEdgeRingGroup(cornerLoop)</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">len</span>(sortGrp) &gt; <span class="number">0</span>:<span class="comment"># need a method to check loop number = protect corner number</span></span><br><span class="line">                    <span class="keyword">for</span> g <span class="keyword">in</span> sortGrp:</span><br><span class="line">                        <span class="keyword">if</span> <span class="built_in">len</span>(g) &gt; <span class="number">2</span> :</span><br><span class="line">                            matchCorner(g, <span class="number">1.3</span>)</span><br><span class="line">                    newRoundMesh = mc.duplicate(insetMesh, rr=<span class="number">1</span>)</span><br><span class="line">                    mc.rename(newRoundMesh, <span class="string">&#x27;roundV&#x27;</span>)</span><br><span class="line">                    <span class="keyword">for</span> g <span class="keyword">in</span> sortGrp:</span><br><span class="line">                        <span class="keyword">if</span> <span class="built_in">len</span>(g) &gt; <span class="number">2</span> :</span><br><span class="line">                            matchCorner(g, <span class="number">1</span>)</span><br><span class="line">                    innerCVList = mc.polyListComponentConversion(cornerLoop, tv=<span class="literal">True</span>)</span><br><span class="line">                    innerCVList = mc.ls(innerCVList,fl=<span class="number">1</span>)</span><br><span class="line">                    findRingList =mc.polyListComponentConversion(innerCVList,fv=<span class="literal">True</span>, te=<span class="literal">True</span>)</span><br><span class="line">                    findRingList  = mc.ls(findRingList,fl=<span class="number">1</span>)</span><br><span class="line">                    loopRingList = <span class="built_in">list</span>(<span class="built_in">set</span>(findRingList)-<span class="built_in">set</span>(newLoop))</span><br><span class="line">                    loopRingList = mc.polySelectSp(loopRingList[<span class="number">0</span>],ring =<span class="number">1</span>, q=<span class="number">1</span> )</span><br><span class="line">                    loopRingList = mc.ls(loopRingList,fl=<span class="number">1</span>)</span><br><span class="line">                    insetDataPP = []</span><br><span class="line">                    moveP = []</span><br><span class="line">                    baseP = []</span><br><span class="line">                    checkCV = mc.polyListComponentConversion(loopRingList[<span class="number">0</span>], tv=<span class="literal">True</span>)</span><br><span class="line">                    checkCV = mc.ls(checkCV,fl=<span class="number">1</span>)</span><br><span class="line">                    bevelDistance = distanceBetween(checkCV[<span class="number">0</span>],checkCV[-<span class="number">1</span>])</span><br><span class="line">                    <span class="keyword">for</span> r <span class="keyword">in</span> loopRingList:</span><br><span class="line">                        checkCV = mc.polyListComponentConversion(r, tv=<span class="literal">True</span>)</span><br><span class="line">                        checkCV = mc.ls(checkCV,fl=<span class="number">1</span>)</span><br><span class="line">                        <span class="keyword">if</span> checkCV[<span class="number">0</span>] <span class="keyword">in</span> innerCVList:</span><br><span class="line">                            moveP = checkCV[<span class="number">0</span>]</span><br><span class="line">                            baseP = checkCV[<span class="number">1</span>]</span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                            moveP = checkCV[<span class="number">1</span>]</span><br><span class="line">                            baseP = checkCV[<span class="number">0</span>]</span><br><span class="line">                        basePPos = mc.pointPosition(baseP, w =<span class="number">1</span>)</span><br><span class="line">                        movePPos = mc.pointPosition(moveP, w =<span class="number">1</span>)</span><br><span class="line">                        dataCollect = [moveP,basePPos,movePPos]</span><br><span class="line">                        insetDataPP.append(dataCollect)</span><br><span class="line">                    newMesh = mc.duplicate(insetMesh, rr=<span class="number">1</span>)</span><br><span class="line">                    mc.rename(newMesh,<span class="string">&#x27;insetOffsetV&#x27;</span>)</span><br><span class="line">                    refBevelV = math.sqrt(insetFaceArea) *<span class="number">4</span></span><br><span class="line">                    <span class="keyword">for</span> v <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(insetDataPP)):</span><br><span class="line">                        currentPos = mc.pointPosition(insetDataPP[v][<span class="number">0</span>], w =<span class="number">1</span>)</span><br><span class="line">                        posX = ((currentPos[<span class="number">0</span>] - insetDataPP[v][<span class="number">1</span>][<span class="number">0</span>])*(refBevelV))+ insetDataPP[v][<span class="number">1</span>][<span class="number">0</span>]</span><br><span class="line">                        posY = ((currentPos[<span class="number">1</span>] - insetDataPP[v][<span class="number">1</span>][<span class="number">1</span>])*(refBevelV))+ insetDataPP[v][<span class="number">1</span>][<span class="number">1</span>]</span><br><span class="line">                        posZ = ((currentPos[<span class="number">2</span>] - insetDataPP[v][<span class="number">1</span>][<span class="number">2</span>])*(refBevelV))+ insetDataPP[v][<span class="number">1</span>][<span class="number">2</span>]</span><br><span class="line">                        mc.move(posX, posY, posZ, insetDataPP[v][<span class="number">0</span>].replace(insetMesh, <span class="string">&#x27;insetOffsetV&#x27;</span>), a =<span class="literal">True</span>, ws=<span class="literal">True</span>)</span><br><span class="line">                    mc.delete(insetMesh, ch=<span class="number">1</span>)</span><br><span class="line">                    blendName = mc.blendShape(<span class="string">&#x27;insetOffsetV&#x27;</span>,<span class="string">&#x27;roundV&#x27;</span>, insetMesh)</span><br><span class="line">                    mc.delete(<span class="string">&#x27;insetOffsetV&#x27;</span>,<span class="string">&#x27;roundV&#x27;</span>)</span><br><span class="line">                    mc.rename(blendName, <span class="string">&#x27;insetOffsetNode&#x27;</span>)</span><br><span class="line">                    mc.setAttr(<span class="string">&quot;insetOffsetNode.envelope&quot;</span>, <span class="number">2</span>)</span><br><span class="line">                    mc.connectControl( <span class="string">&#x27;rInsetV&#x27;</span>, <span class="string">&#x27;insetOffsetNode.insetOffsetV&#x27;</span> )</span><br><span class="line">                    mc.connectControl( <span class="string">&#x27;rBevelRound&#x27;</span>, <span class="string">&#x27;insetOffsetNode.roundV&#x27;</span> )</span><br><span class="line">                    mc.floatSliderGrp(<span class="string">&#x27;rBevelLength&#x27;</span>,e=<span class="number">1</span>, en=<span class="number">1</span>)</span><br><span class="line">                    mc.floatSliderGrp(<span class="string">&#x27;rBevelRound&#x27;</span>, e=<span class="number">1</span>, en=<span class="number">1</span>, v=<span class="number">0</span>)</span><br><span class="line">                    mc.button(<span class="string">&#x27;InsetRemoveButton&#x27;</span>,e=<span class="number">1</span>, en = <span class="number">1</span>,bgc=[<span class="number">0.48</span>,<span class="number">0.28</span>,<span class="number">0.28</span>])</span><br><span class="line">                    mc.button(<span class="string">&#x27;InsetCkeaneButton&#x27;</span>,e=<span class="number">1</span>, en = <span class="number">1</span>,bgc=[<span class="number">0.28</span>,<span class="number">0.48</span>,<span class="number">0.28</span>])</span><br><span class="line">                    mc.button(<span class="string">&#x27;InnerCornerEvenButton&#x27;</span>,e=<span class="number">1</span>, en = <span class="number">1</span>)</span><br><span class="line">                    mc.select(cl=<span class="number">1</span>)</span><br><span class="line">                    mc.select(<span class="string">&#x27;cornerDisp&#x27;</span>)</span><br><span class="line">                    cmd = <span class="string">&#x27;doMenuComponentSelectionExt(&quot;&#x27;</span> + insetMesh + <span class="string">&#x27;&quot;, &quot;edge&quot;, 0);&#x27;</span></span><br><span class="line">                    mel.<span class="built_in">eval</span>(cmd)</span><br><span class="line">                    mc.select(insetFace,add=<span class="number">1</span>)</span><br><span class="line">                    mc.setToolTo(<span class="string">&#x27;selectSuperContext&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">matchCorner</span>(<span class="params">edgeLoop, getRoundV</span>):</span><br><span class="line">    <span class="keyword">global</span> insetFace</span><br><span class="line">    <span class="keyword">global</span> insetDataEdgeLoopList</span><br><span class="line">    selLoopShort = edgeLoop</span><br><span class="line">    toCV = mc.polyListComponentConversion(selLoopShort, tv=<span class="literal">True</span>)</span><br><span class="line">    toEdge =mc.polyListComponentConversion(toCV, te=<span class="literal">True</span>)</span><br><span class="line">    toEdge = mc.ls(toEdge,fl=<span class="number">1</span>)</span><br><span class="line">    toFace = mc.polyListComponentConversion(selLoopShort, tf=<span class="literal">True</span>)</span><br><span class="line">    toFace = mc.ls(toFace,fl=<span class="number">1</span>)</span><br><span class="line">    toFace = <span class="built_in">list</span>(<span class="built_in">set</span>(toFace)-<span class="built_in">set</span>(insetFace))</span><br><span class="line">    toEdgeB = mc.polyListComponentConversion(toFace, te=<span class="literal">True</span>)</span><br><span class="line">    toEdgeB = mc.ls(toEdgeB,fl=<span class="number">1</span>)</span><br><span class="line">    selLoopLong = <span class="built_in">list</span>(<span class="built_in">set</span>(toEdgeB)-<span class="built_in">set</span>(toEdge))</span><br><span class="line">    totalLengthA = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> selLoopLong:</span><br><span class="line">        intSelCV = mc.polyListComponentConversion(s, tv=<span class="literal">True</span>)</span><br><span class="line">        intSelCV = mc.ls(intSelCV,fl=<span class="number">1</span>)</span><br><span class="line">        distanceX = distanceBetween(intSelCV[<span class="number">0</span>],intSelCV[<span class="number">1</span>])</span><br><span class="line">        totalLengthA = totalLengthA + distanceX</span><br><span class="line">    totalLengthB = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> selLoopShort:</span><br><span class="line">        intSelCV = mc.polyListComponentConversion(s, tv=<span class="literal">True</span>)</span><br><span class="line">        intSelCV = mc.ls(intSelCV,fl=<span class="number">1</span>)</span><br><span class="line">        distanceX = distanceBetween(intSelCV[<span class="number">0</span>],intSelCV[<span class="number">1</span>])</span><br><span class="line">        totalLengthB = totalLengthB + distanceX</span><br><span class="line">    scaleV = totalLengthA/totalLengthB*getRoundV</span><br><span class="line">    toDO = <span class="built_in">list</span>(<span class="built_in">set</span>(toEdge) - <span class="built_in">set</span>(toEdgeB))</span><br><span class="line">    toDO = toDO + selLoopShort</span><br><span class="line">    toDO = <span class="built_in">list</span>(<span class="built_in">set</span>(toDO))</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(insetDataEdgeLoopList) == <span class="built_in">len</span>(toDO):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        mc.sets(selLoopLong,forceElement=<span class="string">&quot;cornerDisp&quot;</span>)</span><br><span class="line">        pPoint,vList,cList = unBevelEdgeLoop(toDO)</span><br><span class="line">        <span class="keyword">for</span> v <span class="keyword">in</span> vList:</span><br><span class="line">            mc.scale(scaleV,scaleV,scaleV, v, cs=<span class="number">1</span>, r=<span class="number">1</span>, p= (pPoint[<span class="number">0</span>],pPoint[<span class="number">1</span>],pPoint[<span class="number">2</span>]))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">distanceBetween</span>(<span class="params">p1,p2</span>):</span><br><span class="line">    pA = mc.pointPosition(p1, w =<span class="number">1</span>)</span><br><span class="line">    pB = mc.pointPosition(p2, w =<span class="number">1</span>)</span><br><span class="line">    dist = math.sqrt( ((pA[<span class="number">0</span>] - pB[<span class="number">0</span>])**<span class="number">2</span>)  + ((pA[<span class="number">1</span>] - pB[<span class="number">1</span>])**<span class="number">2</span>)  + ((pA[<span class="number">2</span>] - pB[<span class="number">2</span>])**<span class="number">2</span>) )</span><br><span class="line">    <span class="keyword">return</span> dist</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getEdgeRingGroup</span>(<span class="params">selEdges</span>):</span><br><span class="line">    <span class="comment">#selEdges = mc.ls(sl=1,fl=1)</span></span><br><span class="line">    trans = selEdges[<span class="number">0</span>].split(<span class="string">&quot;.&quot;</span>)[<span class="number">0</span>]</span><br><span class="line">    e2vInfos = mc.polyInfo(selEdges, ev=<span class="literal">True</span>)</span><br><span class="line">    e2vDict = &#123;&#125;</span><br><span class="line">    fEdges = []</span><br><span class="line">    <span class="keyword">for</span> info <span class="keyword">in</span> e2vInfos:</span><br><span class="line">        evList = [ <span class="built_in">int</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> re.findall(<span class="string">&#x27;\\d+&#x27;</span>, info) ]</span><br><span class="line">        e2vDict.update(<span class="built_in">dict</span>([(evList[<span class="number">0</span>], evList[<span class="number">1</span>:])]))</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            startEdge, startVtxs = e2vDict.popitem()</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        edgesGrp = [startEdge]</span><br><span class="line">        num = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> vtx <span class="keyword">in</span> startVtxs:</span><br><span class="line">            curVtx = vtx</span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"></span><br><span class="line">                nextEdges = []</span><br><span class="line">                <span class="keyword">for</span> k <span class="keyword">in</span> e2vDict:</span><br><span class="line">                    <span class="keyword">if</span> curVtx <span class="keyword">in</span> e2vDict[k]:</span><br><span class="line">                        nextEdges.append(k)</span><br><span class="line">                <span class="keyword">if</span> nextEdges:</span><br><span class="line">                    <span class="keyword">if</span> <span class="built_in">len</span>(nextEdges) == <span class="number">1</span>:</span><br><span class="line">                        <span class="keyword">if</span> num == <span class="number">0</span>:</span><br><span class="line">                            edgesGrp.append(nextEdges[<span class="number">0</span>])</span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                            edgesGrp.insert(<span class="number">0</span>, nextEdges[<span class="number">0</span>])</span><br><span class="line">                        nextVtxs = e2vDict[nextEdges[<span class="number">0</span>]]</span><br><span class="line">                        curVtx = [ vtx <span class="keyword">for</span> vtx <span class="keyword">in</span> nextVtxs <span class="keyword">if</span> vtx != curVtx ][<span class="number">0</span>]</span><br><span class="line">                        e2vDict.pop(nextEdges[<span class="number">0</span>])</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            num += <span class="number">1</span></span><br><span class="line">        fEdges.append(edgesGrp)</span><br><span class="line">    retEdges =[]</span><br><span class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> fEdges:</span><br><span class="line">        collectList=[]</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> f:</span><br><span class="line">            getCom= (trans +<span class="string">&quot;.e[&quot;</span>+ <span class="built_in">str</span>(x) +<span class="string">&quot;]&quot;</span>)</span><br><span class="line">            collectList.append(getCom)</span><br><span class="line">        retEdges.append(collectList)</span><br><span class="line">    <span class="keyword">return</span> retEdges</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">unBevelEdgeLoop</span>(<span class="params">edgelist</span>):</span><br><span class="line">    listVtx = vtxLoopOrder(edgelist)</span><br><span class="line">    checkA = angleBetweenThreeP(listVtx[<span class="number">1</span>],listVtx[<span class="number">0</span>],listVtx[-<span class="number">1</span>])</span><br><span class="line">    angleA = math.degrees(checkA)</span><br><span class="line">    checkB = angleBetweenThreeP(listVtx[-<span class="number">2</span>],listVtx[-<span class="number">1</span>],listVtx[<span class="number">0</span>])</span><br><span class="line">    angleB = math.degrees(checkB)</span><br><span class="line">    angleC = <span class="number">180</span> - angleA -angleB</span><br><span class="line">    distanceC = distanceBetween(listVtx[<span class="number">0</span>],listVtx[-<span class="number">1</span>])</span><br><span class="line">    distanceA = distanceC / math.sin(math.radians(angleC)) * math.sin(math.radians(angleA))</span><br><span class="line">    distanceB = distanceC / math.sin(math.radians(angleC)) * math.sin(math.radians(angleB))</span><br><span class="line">    oldDistA = distanceBetween(listVtx[-<span class="number">2</span>],listVtx[-<span class="number">1</span>])</span><br><span class="line">    oldDistB = distanceBetween(listVtx[<span class="number">0</span>],listVtx[<span class="number">1</span>])</span><br><span class="line">    scalarB = distanceB / oldDistB</span><br><span class="line">    pA = mc.pointPosition(listVtx[<span class="number">0</span>], w =<span class="number">1</span>)</span><br><span class="line">    pB = mc.pointPosition(listVtx[<span class="number">1</span>], w =<span class="number">1</span>)</span><br><span class="line">    newP = [<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]</span><br><span class="line">    newP[<span class="number">0</span>] = ((pB[<span class="number">0</span>]-pA[<span class="number">0</span>])*scalarB) + pA[<span class="number">0</span>]</span><br><span class="line">    newP[<span class="number">1</span>] = ((pB[<span class="number">1</span>]-pA[<span class="number">1</span>])*scalarB) + pA[<span class="number">1</span>]</span><br><span class="line">    newP[<span class="number">2</span>] = ((pB[<span class="number">2</span>]-pA[<span class="number">2</span>])*scalarB) + pA[<span class="number">2</span>]</span><br><span class="line">    listVtx = listVtx[<span class="number">1</span>:-<span class="number">1</span>]</span><br><span class="line">    storeDist = []</span><br><span class="line">    <span class="keyword">for</span> l <span class="keyword">in</span> listVtx:</span><br><span class="line">        sotreXYZ = [<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]</span><br><span class="line">        p=mc.xform(l,q=<span class="literal">True</span>,t=<span class="literal">True</span>,ws=<span class="literal">True</span>)</span><br><span class="line">        sotreXYZ[<span class="number">0</span>] = (newP[<span class="number">0</span>] -p[<span class="number">0</span>])/<span class="number">100</span></span><br><span class="line">        sotreXYZ[<span class="number">1</span>] = (newP[<span class="number">1</span>] -p[<span class="number">1</span>])/<span class="number">100</span></span><br><span class="line">        sotreXYZ[<span class="number">2</span>] = (newP[<span class="number">2</span>] -p[<span class="number">2</span>])/<span class="number">100</span></span><br><span class="line">        storeDist.append(sotreXYZ)</span><br><span class="line">    <span class="keyword">return</span> newP,listVtx,storeDist</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">vtxLoopOrder</span>(<span class="params">edgelist</span>):</span><br><span class="line">    selEdges = edgelist</span><br><span class="line">    shapeNode = mc.listRelatives(selEdges[<span class="number">0</span>], fullPath=<span class="literal">True</span> , parent=<span class="literal">True</span> )</span><br><span class="line">    transformNode = mc.listRelatives(shapeNode[<span class="number">0</span>], fullPath=<span class="literal">True</span> , parent=<span class="literal">True</span> )</span><br><span class="line">    edgeNumberList = []</span><br><span class="line">    <span class="keyword">for</span> a <span class="keyword">in</span> selEdges:</span><br><span class="line">        checkNumber = ((a.split(<span class="string">&#x27;.&#x27;</span>)[<span class="number">1</span>]).split(<span class="string">&#x27;\n&#x27;</span>)[<span class="number">0</span>]).split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> checkNumber:</span><br><span class="line">            findNumber = <span class="string">&#x27;&#x27;</span>.join([n <span class="keyword">for</span> n <span class="keyword">in</span> c.split(<span class="string">&#x27;|&#x27;</span>)[-<span class="number">1</span>] <span class="keyword">if</span> n.isdigit()])</span><br><span class="line">            <span class="keyword">if</span> findNumber:</span><br><span class="line">                edgeNumberList.append(findNumber)</span><br><span class="line">    getNumber = []</span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> selEdges:</span><br><span class="line">        evlist = mc.polyInfo(s,ev=<span class="literal">True</span>)</span><br><span class="line">        checkNumber = ((evlist[<span class="number">0</span>].split(<span class="string">&#x27;:&#x27;</span>)[<span class="number">1</span>]).split(<span class="string">&#x27;\n&#x27;</span>)[<span class="number">0</span>]).split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> checkNumber:</span><br><span class="line">            findNumber = <span class="string">&#x27;&#x27;</span>.join([n <span class="keyword">for</span> n <span class="keyword">in</span> c.split(<span class="string">&#x27;|&#x27;</span>)[-<span class="number">1</span>] <span class="keyword">if</span> n.isdigit()])</span><br><span class="line">            <span class="keyword">if</span> findNumber:</span><br><span class="line">                getNumber.append(findNumber)</span><br><span class="line">    dup = <span class="built_in">set</span>([x <span class="keyword">for</span> x <span class="keyword">in</span> getNumber <span class="keyword">if</span> getNumber.count(x) &gt; <span class="number">1</span>])</span><br><span class="line">    getHeadTail = <span class="built_in">list</span>(<span class="built_in">set</span>(getNumber) - dup)</span><br><span class="line">    vftOrder = []</span><br><span class="line">    vftOrder.append(getHeadTail[<span class="number">0</span>])</span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> <span class="built_in">len</span>(dup)&gt; <span class="number">0</span> <span class="keyword">and</span> count &lt; <span class="number">100</span>:</span><br><span class="line">        checkVtx = transformNode[<span class="number">0</span>]+<span class="string">&#x27;.vtx[&#x27;</span>+ vftOrder[-<span class="number">1</span>] + <span class="string">&#x27;]&#x27;</span></span><br><span class="line">        velist = mc.polyInfo(checkVtx,ve=<span class="literal">True</span>)</span><br><span class="line">        getNumber = []</span><br><span class="line">        checkNumber = ((velist[<span class="number">0</span>].split(<span class="string">&#x27;:&#x27;</span>)[<span class="number">1</span>]).split(<span class="string">&#x27;\n&#x27;</span>)[<span class="number">0</span>]).split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> checkNumber:</span><br><span class="line">            findNumber = <span class="string">&#x27;&#x27;</span>.join([n <span class="keyword">for</span> n <span class="keyword">in</span> c.split(<span class="string">&#x27;|&#x27;</span>)[-<span class="number">1</span>] <span class="keyword">if</span> n.isdigit()])</span><br><span class="line">            <span class="keyword">if</span> findNumber:</span><br><span class="line">                getNumber.append(findNumber)</span><br><span class="line">        findNextEdge = []</span><br><span class="line">        <span class="keyword">for</span> g <span class="keyword">in</span> getNumber:</span><br><span class="line">            <span class="keyword">if</span> g <span class="keyword">in</span> edgeNumberList:</span><br><span class="line">                findNextEdge = g</span><br><span class="line">        edgeNumberList.remove(findNextEdge)</span><br><span class="line">        checkVtx = transformNode[<span class="number">0</span>]+<span class="string">&#x27;.e[&#x27;</span>+ findNextEdge + <span class="string">&#x27;]&#x27;</span></span><br><span class="line">        findVtx = mc.polyInfo(checkVtx,ev=<span class="literal">True</span>)</span><br><span class="line">        getNumber = []</span><br><span class="line">        checkNumber = ((findVtx[<span class="number">0</span>].split(<span class="string">&#x27;:&#x27;</span>)[<span class="number">1</span>]).split(<span class="string">&#x27;\n&#x27;</span>)[<span class="number">0</span>]).split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> checkNumber:</span><br><span class="line">            findNumber = <span class="string">&#x27;&#x27;</span>.join([n <span class="keyword">for</span> n <span class="keyword">in</span> c.split(<span class="string">&#x27;|&#x27;</span>)[-<span class="number">1</span>] <span class="keyword">if</span> n.isdigit()])</span><br><span class="line">            <span class="keyword">if</span> findNumber:</span><br><span class="line">                getNumber.append(findNumber)</span><br><span class="line">        gotNextVtx = []</span><br><span class="line">        <span class="keyword">for</span> g <span class="keyword">in</span> getNumber:</span><br><span class="line">            <span class="keyword">if</span> g <span class="keyword">in</span> dup:</span><br><span class="line">                gotNextVtx = g</span><br><span class="line">        dup.remove(gotNextVtx)</span><br><span class="line">        vftOrder.append(gotNextVtx)</span><br><span class="line">        count +=  <span class="number">1</span></span><br><span class="line">    vftOrder.append(getHeadTail[<span class="number">1</span>])</span><br><span class="line">    finalList = []</span><br><span class="line">    <span class="keyword">for</span> v <span class="keyword">in</span> vftOrder:</span><br><span class="line">        finalList.append(transformNode[<span class="number">0</span>]+<span class="string">&#x27;.vtx[&#x27;</span>+ v + <span class="string">&#x27;]&#x27;</span> )</span><br><span class="line">    <span class="keyword">return</span> finalList</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">angleBetweenThreeP</span>(<span class="params">pA, pB, pC</span>):</span><br><span class="line">    a = mc.pointPosition(pA, w =<span class="number">1</span>)</span><br><span class="line">    b = mc.pointPosition(pB, w =<span class="number">1</span>)</span><br><span class="line">    c = mc.pointPosition(pC, w =<span class="number">1</span>)</span><br><span class="line">    ba = [ aa-bb <span class="keyword">for</span> aa,bb <span class="keyword">in</span> <span class="built_in">zip</span>(a,b) ]</span><br><span class="line">    bc = [ cc-bb <span class="keyword">for</span> cc,bb <span class="keyword">in</span> <span class="built_in">zip</span>(c,b) ]</span><br><span class="line">    nba = math.sqrt ( <span class="built_in">sum</span> ( (x**<span class="number">2.0</span> <span class="keyword">for</span> x <span class="keyword">in</span> ba) ) )</span><br><span class="line">    ba = [ x/nba <span class="keyword">for</span> x <span class="keyword">in</span> ba ]</span><br><span class="line">    nbc = math.sqrt ( <span class="built_in">sum</span> ( (x**<span class="number">2.0</span> <span class="keyword">for</span> x <span class="keyword">in</span> bc) ) )</span><br><span class="line">    bc = [ x/nbc <span class="keyword">for</span> x <span class="keyword">in</span> bc ]</span><br><span class="line">    scalar = <span class="built_in">sum</span> ( (aa*bb <span class="keyword">for</span> aa,bb <span class="keyword">in</span> <span class="built_in">zip</span>(ba,bc)) )</span><br><span class="line">    angle = math.acos(scalar)</span><br><span class="line">    <span class="keyword">return</span> angle</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getfaceArea</span>(<span class="params">mesh,faceId</span>):</span><br><span class="line">    <span class="keyword">if</span> mc.objectType(mesh) == <span class="string">&#x27;transform&#x27;</span>:</span><br><span class="line">        mesh = mc.listRelatives(mesh,s=<span class="literal">True</span>,ni=<span class="literal">True</span>,pa=<span class="literal">True</span>)[<span class="number">0</span>]</span><br><span class="line">    selectionList = OpenMaya.MSelectionList()</span><br><span class="line">    OpenMaya.MGlobal.getSelectionListByName(mesh,selectionList)</span><br><span class="line">    mDagPath = OpenMaya.MDagPath()</span><br><span class="line">    selectionList.getDagPath(<span class="number">0</span>,mDagPath)</span><br><span class="line">    meshFaceIt = OpenMaya.MItMeshPolygon(mDagPath)</span><br><span class="line">    <span class="keyword">if</span> faceId != <span class="literal">None</span>:</span><br><span class="line">        meshFaceUtil = OpenMaya.MScriptUtil()</span><br><span class="line">        meshFacePtr = meshFaceUtil.asIntPtr()</span><br><span class="line">        meshFaceIt.setIndex(faceId,meshFacePtr)</span><br><span class="line">    faceArea = OpenMaya.MScriptUtil()</span><br><span class="line">    faceArea.createFromDouble(<span class="number">0.0</span>)</span><br><span class="line">    faceAreaPtr = faceArea.asDoublePtr()</span><br><span class="line">    meshFaceIt.getArea(faceAreaPtr)</span><br><span class="line">    areaCheck =  OpenMaya.MScriptUtil(faceAreaPtr).asDouble()</span><br><span class="line">    <span class="keyword">return</span> areaCheck</span><br><span class="line"></span><br><span class="line">roundInset()</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">一个保持圆角等距的挤出工具</summary>
    
    
    
    <category term="Python" scheme="https://sansuidouer.github.io/categories/Python/"/>
    
    
    <category term="Python" scheme="https://sansuidouer.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>人这种动物为什么要喝牛那种动物的奶——《警惕科学（完整版）》</title>
    <link href="https://sansuidouer.github.io/52048/"/>
    <id>https://sansuidouer.github.io/52048/</id>
    <published>2023-10-29T09:42:56.000Z</published>
    <updated>2024-01-24T14:20:41.252Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/JingTiKeXue3.png"></p><h1 id="人这种动物是怎样喝上牛那种动物的奶的？"><a href="#人这种动物是怎样喝上牛那种动物的奶的？" class="headerlink" title="人这种动物是怎样喝上牛那种动物的奶的？"></a>人这种动物是怎样喝上牛那种动物的奶的？</h1><p>2006年初同学聚会，在我说起我的素食三大理由“环保、健康、合天理”之后，我的中学同学，现在农科院从事转基因研究的张永祥博士告诉我一个远远超出了我脆弱的想象能力的事实。这使我立即戒掉了了牛奶，并且迅速延及其它奶制品，连冰淇淋都戒掉了。</p><p>我且把这个过程换一种方式重述一遍。</p><p>物质不灭，能量守恒，天上不会下牛奶。现在我们知道，我们喝的奶，都来自一种叫做奶牛的动物。</p><p>那么，奶牛为什么会产奶呢？</p><p>这个问题很多人不知道，我以前也比较含糊。现在我终于可以确认，奶牛之所以产奶，是因为她生小牛了。没有哪一种哺乳类动物的雌性个体会平白无故地天天从乳房里向外淌奶。</p><p>那么，奶牛为什么会生小牛呢？</p><p>因为她怀孕了。</p><p>奶牛为什么怀孕呢？</p><p>这个问题很多人都想当然地以为自己知道，所以答案才让我震惊，</p><p>——因为，因为她被人工受精了！</p><p>进而，</p><p>奶牛为什么会不断地产奶呢？</p><p>因为她不断地生小牛。</p><p>奶牛为什么不断地生小牛呢？</p><p>因为她不断地怀孕。</p><p>奶牛为什么不断地怀孕呢？</p><p>因为她不断地被人工受精。</p><p>同肉类食品一样，我们现在饮用的牛奶，都来自于工厂化的养殖业，而不是来自传统的人畜共生的畜牧业。乳业流水线上的奶牛，一辈子没谈过恋爱，一辈子没有过过性生活，甚至一辈子没有见过公牛，却一辈子不停地生小牛，一辈子在不停地被挤奶。</p><p>天啊，我的牛顿啊，这还是牛过的日子吗？</p><p>甚至，奶牛妈妈从来没有给自己的孩子哺过乳——据说，一旦让小牛吃过他娘的奶头，牛妈妈就和牛宝宝就会产生母子依恋，就不肯让人挤奶了。所以在先进的乳业工厂里，奶牛根本看不到自己的孩子，小牛也见不到他们的母亲，一生下来就被母子分离。一部分小母牛被人喂养成奶牛，重复她母亲的命运；一部分小牛被卖出去当肉牛饲养，这算是幸运的；还有一部分小牛，直接进了生化工厂，变成了各种血清、蛋白和酶！</p><p>地啊，我的爱因斯坦啊，人可以安心让牛过这样的生活吗？</p><p>在现代化的“先进”管理下，奶牛的一生大概是这样的。小母牛在16个月的时候进入青春期，人就要考虑为她授精。很快，这个一岁多的处女牛就莫名其妙地怀孕了。280天之后，小母牛分娩，作了妈妈。从此时起，自动化的机械取奶装置就开始定期吸她的奶。又过了305天，奶牛停止产奶，可以休息了。但是只能休息60天。因为此前220天，她已经第二次被人工授精了。60天后，她会产下了第二个孩子，开始了新的轮回。在七八个轮回之后，奶牛体力衰竭，就被“淘汰”了。</p><p>“淘汰”是乳品行业的术语，就是不要了，处置了。——能卖就卖了，不能卖也不能留着浪费饲料。</p><p>奶牛们就是这样生活了一辈子！</p><h2 id="田松-人这种动物为什么要喝牛那种动物的奶——《警惕科学（完整版）》第三节"><a href="#田松-人这种动物为什么要喝牛那种动物的奶——《警惕科学（完整版）》第三节" class="headerlink" title="田松 | 人这种动物为什么要喝牛那种动物的奶——《警惕科学（完整版）》第三节"></a><a href="https://www.163.com/dy/article/DGDV62IP0511C3KH.html">田松 | 人这种动物为什么要喝牛那种动物的奶——《警惕科学（完整版）》第三节</a></h2><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/END_02.svg"></p>]]></content>
    
    
    <summary type="html">田松：人这种动物是怎样喝上牛那种动物的奶的？</summary>
    
    
    
    
    <category term="阅读" scheme="https://sansuidouer.github.io/tags/%E9%98%85%E8%AF%BB/"/>
    
  </entry>
  
  <entry>
    <title>Maya有什么命名规范？</title>
    <link href="https://sansuidouer.github.io/16940/"/>
    <id>https://sansuidouer.github.io/16940/</id>
    <published>2023-10-28T08:04:31.000Z</published>
    <updated>2024-01-24T14:20:41.169Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Maya中的节点和属性名称不能以数字开头，必须以英文字母开头，不能使用中文字符，特殊字符除了_以外，其他如空格、&#x2F;、-、(、)等都不允许使用。第一个单词首字母小写，后面接的其他单词首字母大写。Mya的工程文件命名虽然不受限制，可以用数字开头，也可以用中文字符和特殊字符，但笔者推荐还是按照节点和属性的命名要求来命名工程文件，以预防出现不可知的错误。<br>提示：Maya的整个文件保存路径最好都是全英文的，不要出现中文字符，否则有可能出现文件打不开等奇怪的问题。</p><p>（以上内容摘抄自，《三维建模与渲染：Maya建模与Arnold渲染百问》 第 20 问 ）</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/END_01.svg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Maya中的节点和属性名称不能以数字开头，必须以英文字母开头，不能使用中文字符，特殊字符除了_以外，其他如空格、&amp;#x2F;、-、(、)等都不允许使用。第一个单词首字母小写，后面接的其他单词首字母大写。Mya的工程文件命名虽然不受限制，可以用数字开</summary>
      
    
    
    
    <category term="Maya" scheme="https://sansuidouer.github.io/categories/Maya/"/>
    
    
    <category term="Maya" scheme="https://sansuidouer.github.io/tags/Maya/"/>
    
  </entry>
  
  <entry>
    <title>嵌入iframe播放器</title>
    <link href="https://sansuidouer.github.io/59730/"/>
    <id>https://sansuidouer.github.io/59730/</id>
    <published>2023-10-22T15:20:00.000Z</published>
    <updated>2024-01-24T14:20:41.262Z</updated>
    
    <content type="html"><![CDATA[<h1 id="iframe"><a href="#iframe" class="headerlink" title="iframe"></a>iframe</h1><p>iframe 标签用于在网页里面嵌入其他网页。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;https://www.example.com/&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;500&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">allowfullscreen</span> <span class="attr">sandbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><p>以上代码意思就是在网页中嵌入一个示例站点（<a href="https://www.example.com/%EF%BC%89">https://www.example.com/）</a><br>宽度自适应100% ，高度为500像素。 边框宽度为0<br>效果如下↓</p><iframe src="https://www.example.com/ "        width="100%" height="500" frameborder="0"></iframe><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;position: relative; padding: 30% 45%;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">style</span>=<span class="string">&quot;position: absolute; width: 100%; height: 100%; left: 0; top: 0;&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">src</span>=<span class="string">&quot;https://player.bilibili.com/player.html?aid=692332871&amp;bvid=BV1d24y1Y79G&amp;cid=950939214&amp;p=1&amp;autoplay=0&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">scrolling</span>=<span class="string">&quot;no&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;no&quot;</span> <span class="attr">framespacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">allowfullscreen</span>=<span class="string">&quot;true&quot;</span> <span class="attr">danmaku</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>自动播放需要加在链接的后方使用 “&amp;” 连接 </p><p>https :&#x2F;&#x2F;xxxxxx.xxx&amp;autoplay&#x3D;0</p><div style="position: relative; padding: 30% 45%;"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="https://player.bilibili.com/player.html?aid=692332871&bvid=BV1d24y1Y79G&cid=950939214&p=1&autoplay=0" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" danmaku="0"></iframe></div><p></p><p></p><table><thead><tr><th align="center"></th><th align="center">作用</th><th align="center">意义</th></tr></thead><tbody><tr><td align="center">autoplay</td><td align="center">自动播放</td><td align="center">0&#x2F;1</td></tr><tr><td align="center">danmaku</td><td align="center">弹幕</td><td align="center">0&#x2F;1</td></tr><tr><td align="center">muted</td><td align="center">静音</td><td align="center">0&#x2F;1</td></tr><tr><td align="center">hasMuteButton</td><td align="center">隐藏静音按钮</td><td align="center">0&#x2F;1</td></tr><tr><td align="center">hideCoverInfo</td><td align="center">播放量，弹幕等</td><td align="center">0&#x2F;1</td></tr><tr><td align="center">hideDanmakuButton</td><td align="center">隐藏弹幕按钮</td><td align="center">0&#x2F;1</td></tr><tr><td align="center">noFullScreenButton</td><td align="center">隐藏全屏按钮</td><td align="center">0&#x2F;1</td></tr><tr><td align="center">fjw</td><td align="center">记忆播放</td><td align="center">0&#x2F;1</td></tr><tr><td align="center">t</td><td align="center">开始时间&#x2F;秒</td><td align="center"></td></tr><tr><td align="center">highQuality</td><td align="center">高清</td><td align="center">0&#x2F;1</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/END_02.svg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;iframe&quot;&gt;&lt;a href=&quot;#iframe&quot; class=&quot;headerlink&quot; title=&quot;iframe&quot;&gt;&lt;/a&gt;iframe&lt;/h1&gt;&lt;p&gt;iframe 标签用于在网页里面嵌入其他网页。&lt;/p&gt;
&lt;figure class=&quot;highlight h</summary>
      
    
    
    
    <category term="Hexo" scheme="https://sansuidouer.github.io/categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="https://sansuidouer.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Maya为什么不能使用 Ctrl+C / Ctrl+V</title>
    <link href="https://sansuidouer.github.io/7640/"/>
    <id>https://sansuidouer.github.io/7640/</id>
    <published>2023-10-22T11:23:53.000Z</published>
    <updated>2024-01-24T14:20:41.203Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Maya为什么不能使用-Ctrl-C-Ctrl-V"><a href="#Maya为什么不能使用-Ctrl-C-Ctrl-V" class="headerlink" title="Maya为什么不能使用 Ctrl+C &#x2F; Ctrl+V"></a>Maya为什么不能使用 Ctrl+C &#x2F; Ctrl+V</h1><p>我在上学的时候接触Maya就有见到这个熟悉的字符 “pasted__”，当时我也不知道这个东西怎么产生的。后来在实习的时候知道了这玩意是Ctrl + C &#x2F; V 产生的。一开始我也没觉得有什么影响，但是我记得好像是有一个场景有很多这个字符，灯光链接出现了问题，怎么也链接不到。最后给那个模型修改了命名解决了问题。我是不会使用C V复制粘贴模型的，后来工作以后我发现还是有人使用这种方法复制粘贴模型的，可能是为了方便？快捷？ 我表示很不理解。后来我发现有问题后只要到我手里的场景文件我发现 pasted 就会进行清理，以避免不必要的麻烦。 我在<a href="/54222/">Maya重命名工具：ig_EzRename</a>一文中介绍过一键干掉pasted的功能，可以通过这个功能干掉pasted。</p><blockquote><h2 id="为什么不能用【Ctrl】-【C】-【Ctrl】-【V】替代【Ctrl】-【D】操作？"><a href="#为什么不能用【Ctrl】-【C】-【Ctrl】-【V】替代【Ctrl】-【D】操作？" class="headerlink" title="为什么不能用【Ctrl】+【C】&#x2F;【Ctrl】+【V】替代【Ctrl】+【D】操作？"></a>为什么不能用【Ctrl】+【C】&#x2F;【Ctrl】+【V】替代【Ctrl】+【D】操作？</h2><p>大家平时使用Window操作系统都习惯用【Ctrl】+【C】&#x2F;【Ctrl】+【V】来拷贝&#x2F;粘贴对象，再Maya里使用【Ctrl】+【C】&#x2F;【Ctrl】+【V】也能实现复制对象的操作，但其复制结果与【Ctrl】+【D】完全不同。</p><p>还是以小球pSphere1为例，用【Ctrl】+【C】&#x2F;【Ctrl】+【V】复制出一个新的小球，名称自动命名为pasted__pSphere1，pasted__pSphere1在上一层级还自动产生一个空的组节点作为父节点。新小球将原小球的所有节点网络完整复制了一套，新节点的命名都是在原节点前加“pasted__”。</p><p>笔者不推荐使用【Ctrl】+【C】&#x2F;【Ctrl】+【V】这种复制方式，因为它的命名方式不简洁，经过多次复制后会产生一长串的前缀字符，还形成了多层级的空组，在Hypeshade（材质编辑器）里也会出现许多一模一样的节点，导致整个场景文件凌乱不堪，整理起来非常麻烦。所以，如果想要复制完整的节点网络，就用Duplicate Special（特殊复制）；如果只想复制单独一个节点，就用Duplicate（复制）热键【Ctrl】+【D】。</p><p>（以上内容摘抄自，《三维建模与渲染：Maya建模与Arnold渲染百问》 第 19 问 ）</p></blockquote><hr><p>羊盒在2021年1月25号发布的4.2.27版本中提到Ctrl+V对场景的污染。</p><p>如果您有Ctrl+V的习惯请尽早改正。避免不必要的麻烦。</p><blockquote><p>禁用经常导致误操作的 Ctrl+V [ 不会影响复制关键帧，重启maya后生效 ]<br>(由于maya中的 Ctrl+v 粘贴出来的节点无法撒回，很容易造成场景污染，*强烈推荐勾选 *)<br>—- 我不装了，我摊牌了，这恶心玩意儿必须得勾，<br>用脚后眼想想，弄出一大堆”pasted__”节点名是人干的事儿？<br>可长点心叭，复制粘贴节点给老子死—-</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20231022202512067.png" alt="暴力羊"></p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/END_01.svg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Maya为什么不能使用-Ctrl-C-Ctrl-V&quot;&gt;&lt;a href=&quot;#Maya为什么不能使用-Ctrl-C-Ctrl-V&quot; class=&quot;headerlink&quot; title=&quot;Maya为什么不能使用 Ctrl+C &amp;#x2F; Ctrl+V&quot;&gt;&lt;/a&gt;Maya</summary>
      
    
    
    
    <category term="Maya" scheme="https://sansuidouer.github.io/categories/Maya/"/>
    
    
    <category term="Maya" scheme="https://sansuidouer.github.io/tags/Maya/"/>
    
  </entry>
  
  <entry>
    <title>传递顶点顺序</title>
    <link href="https://sansuidouer.github.io/57164/"/>
    <id>https://sansuidouer.github.io/57164/</id>
    <published>2023-10-20T13:22:07.000Z</published>
    <updated>2024-01-24T14:20:41.254Z</updated>
    
    <content type="html"><![CDATA[<h1 id="顶点ID"><a href="#顶点ID" class="headerlink" title="顶点ID"></a>顶点ID</h1><p>官方帮助：<a href="https://help.autodesk.com/view/MAYAUL/2023/CHS/?guid=GUID-8CF82D97-203C-4056-BEF2-EA0CD27336ED">https://help.autodesk.com/view/MAYAUL/2023/CHS/?guid=GUID-8CF82D97-203C-4056-BEF2-EA0CD27336ED</a></p><p>如果两个物体布线形状完全相同但是传递UV就会碎掉多半是因为顶点ID顺序不同。我在<a href="/63197">传递UV插件</a>一篇文章提到过，这里具体的说明一下这个问题。顶点ID顺序相同后就会正常传递UV。</p><h2 id="显示顶点ID的方法"><a href="#显示顶点ID的方法" class="headerlink" title="显示顶点ID的方法"></a>显示顶点ID的方法</h2><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20231020212234126.png" alt="image-20231020220644750"></p><h2 id="对顶点重新排序"><a href="#对顶点重新排序" class="headerlink" title="对顶点重新排序"></a>对顶点重新排序</h2><p>编辑网格 —&gt;对顶点重新排序</p><p>创建多边形对象时，Maya 会自动为其指定顶点 ID。您可以使用“对顶点重新排序”(Reorder Vertices)命令更改顶点顺序。</p><p>使用方法就是执行该工具后选择同一个面上面的三个相邻顶点。即可重新排序顶点ID。可能描述的不太清楚，可以看官方帮助。</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20231020220644750.png" alt="image-20231020220644750"></p><h2 id="传递顶点顺序"><a href="#传递顶点顺序" class="headerlink" title="传递顶点顺序"></a>传递顶点顺序</h2><p>网格  —&gt; 传递顶点顺序</p><p>在源对象上，单击三个相邻的顶点</p><p>在目标对象上，单击与源对象上选择的三个顶点相关的三个相邻顶点</p><p>Maya 会将其余顶点重新排序，使之相对于三个选定的基础节点与源对象匹配</p><p>先选择的顶点顺序会被传递到后选择的多边形上</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20231020222317574.png" alt="image-20231020222317574"></p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20231020212253062.png" alt="image-20231020212253062"></p><hr><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/END_02.svg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;顶点ID&quot;&gt;&lt;a href=&quot;#顶点ID&quot; class=&quot;headerlink&quot; title=&quot;顶点ID&quot;&gt;&lt;/a&gt;顶点ID&lt;/h1&gt;&lt;p&gt;官方帮助：&lt;a href=&quot;https://help.autodesk.com/view/MAYAUL/2023/CHS/?</summary>
      
    
    
    
    <category term="Maya" scheme="https://sansuidouer.github.io/categories/Maya/"/>
    
    
    <category term="Maya" scheme="https://sansuidouer.github.io/tags/Maya/"/>
    
  </entry>
  
</feed>
