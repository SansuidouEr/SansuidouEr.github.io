<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SansuidouEr Blog</title>
  
  <subtitle>欢迎来到我的博客</subtitle>
  <link href="https://sansuidouer.github.io/atom.xml" rel="self"/>
  
  <link href="https://sansuidouer.github.io/"/>
  <updated>2024-10-31T13:13:08.661Z</updated>
  <id>https://sansuidouer.github.io/</id>
  
  <author>
    <name>三岁豆Er</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>分享会 Round 1</title>
    <link href="https://sansuidouer.github.io/28985/"/>
    <id>https://sansuidouer.github.io/28985/</id>
    <published>2024-10-31T12:30:39.000Z</published>
    <updated>2024-10-31T13:13:08.661Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="42b238b04f481e4926359b528d0dbe288f1cbbddc9ab291ac78796a208d07995"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">如有需要，请联系三岁豆Er获取文章密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">分享会讲述大纲</summary>
    
    
    
    
    <category term="Blender" scheme="https://sansuidouer.github.io/tags/Blender/"/>
    
  </entry>
  
  <entry>
    <title>Blender偏好设置</title>
    <link href="https://sansuidouer.github.io/51776/"/>
    <id>https://sansuidouer.github.io/51776/</id>
    <published>2024-10-27T12:56:06.000Z</published>
    <updated>2024-10-27T13:41:50.347Z</updated>
    
    <content type="html"><![CDATA[<h2 id="BsMax"><a href="#BsMax" class="headerlink" title="BsMax"></a>BsMax</h2><p>版本更新日志：<a href="https://github.com/NevilArt/BsMax/blob/master/CHANGELOG.md">https://github.com/NevilArt/BsMax/blob/master/CHANGELOG.md</a></p><p>作者提供的安装插件视频：<a href="https://www.youtube.com/watch?v=JolpAmvd3CE%EF%BC%88%E9%9C%80%E8%A6%81%E9%AD%94%E6%B3%95%E6%89%8D%E8%83%BD%E6%89%93%E5%BC%80%EF%BC%89">https://www.youtube.com/watch?v=JolpAmvd3CE（需要魔法才能打开）</a></p><p>其实这是一款修改Blender操作模式为3dsMax操作模式的，只不过修改为Maya的操作方式为附属</p><p>作者Github主页：<a href="https://github.com/NevilArt/">https://github.com/NevilArt/</a></p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20241027212451430.png" alt="image-20241027212451430"></p><p>进入作者主页以后点击&nbsp;&nbsp;&nbsp;<span style="font-size: 15px; color: red; font-weight: bold; display: inline-block;">BsMax</span>&nbsp;&nbsp;&nbsp;进入这个项目，里面有一些相应的解释，但是都是英文。可以简单了解一下</p><p>BsMax_2_80这个项目是作者对这个插件的一些备份，可以进去直接下载历史版本</p><p>直接下载BsMax这个项目为zip下载到本地</p><h3 id="Blender插件安装"><a href="#Blender插件安装" class="headerlink" title="Blender插件安装"></a>Blender插件安装</h3><p>在Blender中使用快捷键&nbsp;Ctrl+，（逗号）打开Blender偏好设置，找到插件，直接点击右上角的箭头选择从磁盘中安装，然后浏览到下载的整个Zip压缩包即可完成安装。</p><p>我这个Blender的版本是4.2 LTS，如果是4.1可以UI有一点不一样但是没有影响。</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20241027213102516.png" alt="image-20241027213102516"></p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>安装成功后勾选BsMax启用该脚本</p><p>进入脚本进行一些设置</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20241027213635334.png" alt="image-20241027213635334"></p><p>这样一些视角的旋转平移，移动缩放旋转快捷键就和Maya一致了。</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/END_02.svg"></p>]]></content>
    
    
    <summary type="html">Blender操作方式修改成近似于Maya的操作模式</summary>
    
    
    
    
    <category term="Blender" scheme="https://sansuidouer.github.io/tags/Blender/"/>
    
  </entry>
  
  <entry>
    <title>Blender批量取消模型平滑</title>
    <link href="https://sansuidouer.github.io/40376/"/>
    <id>https://sansuidouer.github.io/40376/</id>
    <published>2024-10-27T11:16:30.000Z</published>
    <updated>2024-10-27T13:57:12.848Z</updated>
    
    <content type="html"><![CDATA[<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>脚本非常简单，旨在将整个场景中的模型表面细分（Catmull - Clark）去掉</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20241027215410787.png" alt="image-20241027215410787"></p><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>打开需要转化的场景，切换到脚本，将脚本粘贴进去，点击小箭头运行即可。</p><p>经过操作以后导出去的模型就不再是被细分后的模型。</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20241027215307197.png" alt="image-20241027215307197"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import bpy</span><br><span class="line"></span><br><span class="line">for obj in bpy.context.scene.objects:</span><br><span class="line">    for modifier in obj.modifiers:</span><br><span class="line">        if modifier.type == &#x27;SUBSURF&#x27;:</span><br><span class="line">            modifier.levels = 0</span><br><span class="line">            modifier.render_levels = 0</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/END_02.svg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;目的&quot;&gt;&lt;a href=&quot;#目的&quot; class=&quot;headerlink&quot; title=&quot;目的&quot;&gt;&lt;/a&gt;目的&lt;/h2&gt;&lt;p&gt;脚本非常简单，旨在将整个场景中的模型表面细分（Catmull - Clark）去掉&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn</summary>
      
    
    
    
    <category term="Blender" scheme="https://sansuidouer.github.io/categories/Blender/"/>
    
    
    <category term="Blender" scheme="https://sansuidouer.github.io/tags/Blender/"/>
    
  </entry>
  
  <entry>
    <title>关于P2P打洞的一些记录</title>
    <link href="https://sansuidouer.github.io/27081/"/>
    <id>https://sansuidouer.github.io/27081/</id>
    <published>2024-10-23T09:43:06.000Z</published>
    <updated>2024-10-27T09:46:40.622Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/P2P0_Banner.png" alt="P2P0_Banner"></p><h3 id="什么是P2P？"><a href="#什么是P2P？" class="headerlink" title="什么是P2P？"></a>什么是P2P？</h3><p>P2P（点对点）连接是一种网络架构，其中各个节点（计算机或设备）可以直接相互通信和共享资源，而不需要依赖中心服务器。每个节点既可以是客户端，也可以是服务器，形成一个对等的网络。</p><h3 id="P2P的工作原理"><a href="#P2P的工作原理" class="headerlink" title="P2P的工作原理"></a>P2P的工作原理</h3><p>在P2P网络中，节点通过特定的协议直接连接，进行数据传输。常见的P2P应用包括文件共享（如BitTorrent）、即时通讯（如Skype）和区块链技术（如比特币）。</p><h3 id="P2P的优点"><a href="#P2P的优点" class="headerlink" title="P2P的优点"></a>P2P的优点</h3><ol><li><strong>去中心化</strong>：没有单一的控制点，减少了单点故障的风险，提高了网络的鲁棒性。</li><li><strong>资源共享</strong>：节点可以共享自己的计算能力、存储和带宽，增强了资源的利用率。</li><li><strong>成本效益</strong>：由于没有中央服务器，运营和维护成本通常较低，用户可以免费使用或以较低的费用享受服务。</li><li><strong>隐私保护</strong>：P2P网络中的用户通常可以在一定程度上保护自己的身份，增强了隐私性。</li><li><strong>扩展性</strong>：P2P网络能够轻松扩展，新增节点可以自然地融入网络，不会对现有结构造成显著影响。</li><li><strong>故障容忍性</strong>：即使某些节点下线，其他节点仍然可以继续保持网络的运作，提供更高的稳定性。</li><li><strong>快速传输</strong>：在文件分享和数据传输方面，P2P网络可以利用多个节点并行传输，往往比传统服务器更快。</li></ol><h3 id="通过P2P打洞前提："><a href="#通过P2P打洞前提：" class="headerlink" title="通过P2P打洞前提："></a>通过P2P打洞前提：</h3><p>首先你要知道什么是NAT</p><p>传送门：<a href="https://baike.baidu.com/item/nat/320024">NAT百度百科</a></p><p>其次非常非常重要的一点是要知道当前网络的NAT类型</p><table><thead><tr><th align="center">NAT</th><th align="center">类型</th><th align="center"></th></tr></thead><tbody><tr><td align="center">NAT1</td><td align="center">Full Cone</td><td align="center">完全锥形NAT</td></tr><tr><td align="center">NAT2</td><td align="center">Address-Restricted Cone</td><td align="center">地址限制锥形NAT</td></tr><tr><td align="center">NAT3</td><td align="center">Port-Restricted Cone</td><td align="center">端口限制锥形NAT</td></tr><tr><td align="center">NAT4</td><td align="center">Symmetric</td><td align="center">对称式NAT（动态NAT）</td></tr></tbody></table><p>可以简单理解为NAT1非常容易打洞，如果你的网络环境是NAT4则很难打洞。</p><p>如果需要打洞的两个网络环境都是<strong>Symmetric NAT</strong>则**100%**不可能打洞成功。</p><p>（其实也有例外，将你的内网某一机器暴露在公网环境下<strong>DMZ</strong>，不建议这么做！）</p><p>如果其中一个网络环境为<strong>Full Cone</strong>则有很大的概率打洞成功。</p><blockquote><p>1.双方中只要有一方是<strong>Full Cone</strong>，可以直连<br>2.双方都是<strong>Restricted Cone</strong>或<strong>Port Restricted Cone</strong>，这种情况可以打洞，通过N2N服务器握手以后，双方的数据不再经过服务端<br>3.一方为<strong>Restricted Cone</strong>，另一方为<strong>Symmetric NAT</strong>，可以打洞，通过N2N服务器握手以后，双方的数据不再经过服务端<br>4.一方为端口<strong>Port Restricted Cone</strong>，另一方为<strong>Symmetric NAT</strong>，这种情况无法打洞，数据要走N2N服务器中转<br>5.双方都为<strong>Symmetric NAT</strong>，这种情况也是无法打洞的，数据要走N2N服务器中转</p></blockquote><p>CSDN资料：<a href="">【网络】P2P打洞原理（简单描述）</a></p><table><thead><tr><th align="center">类型</th><th align="center">类型</th><th align="center">是否可以打通</th></tr></thead><tbody><tr><td align="center">全锥形（NAT1）</td><td align="center">全锥形（NAT1）</td><td align="center"><span style="font-size: 20px; color: green; font-weight: bold; display: inline-block;">Y</span></td></tr><tr><td align="center">全锥形（NAT1）</td><td align="center">受限锥形（NAT2）</td><td align="center"><span style="font-size: 20px; color: green; font-weight: bold; display: inline-block;">Y</span></td></tr><tr><td align="center">全锥形（NAT1）</td><td align="center">端口受限锥形（NAT3）</td><td align="center"><span style="font-size: 20px; color: green; font-weight: bold; display: inline-block;">Y</span></td></tr><tr><td align="center">全锥形（NAT1）</td><td align="center">对称性（NAT4）</td><td align="center"><span style="font-size: 20px; color: green; font-weight: bold; display: inline-block;">Y</span></td></tr><tr><td align="center">受限锥形（NAT2）</td><td align="center">受限锥形（NAT2）</td><td align="center"><span style="font-size: 20px; color: green; font-weight: bold; display: inline-block;">Y</span></td></tr><tr><td align="center">受限锥形（NAT2）</td><td align="center">端口受限锥形（NAT3）</td><td align="center"><span style="font-size: 20px; color: green; font-weight: bold; display: inline-block;">Y</span></td></tr><tr><td align="center">受限锥形（NAT2）</td><td align="center">对称性（NAT4）</td><td align="center"><span style="font-size: 20px; color: green; font-weight: bold; display: inline-block;">Y</span></td></tr><tr><td align="center">端口受限锥形（NAT3）</td><td align="center">端口受限型（NAT3）</td><td align="center"><span style="font-size: 20px; color: green; font-weight: bold; display: inline-block;">Y</span></td></tr><tr><td align="center">端口受限锥形（NAT3）</td><td align="center">对称性（NAT4）</td><td align="center"><span style="font-size: 20px; color: red; font-weight: bold; display: inline-block;">X</span></td></tr><tr><td align="center">对称性（NAT4）</td><td align="center">对称性（NAT4）</td><td align="center"><span style="font-size: 20px; color: red; font-weight: bold; display: inline-block;">X</span></td></tr></tbody></table><p>如何测试NAT类型？</p><p>NatTypeTester_NAT类型测试工具：<a href="https://zhangzhilong.lanzouw.com/icmLM2d9oyyh">https://zhangzhilong.lanzouw.com/icmLM2d9oyyh</a></p><p>打开测试工具</p><p>默认的服务器不能用了</p><p>输入stun.miwifi.com进行测试</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stun.miwifi.com</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20241024205741456.png" alt="image-20241024205741456"></p><p>我第一次测试是对称性的NAT类型，我登录了猫盒，改了桥接模式，通过路由器进行拨号上网</p><p>光猫改桥接具体根据猫盒型号自行百度</p><p>在猫盒上设置打开UPnp</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20241027171826141.png" alt="image-20241027171826141"></p><p>我的路由器是Padavan固件，将路由器防火墙的NAT类型修改为Full Cone NAT类型。</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20241027171447359.png" alt="image-20241027171447359"></p><p>进行了以上设置以后我再次进行了检测，这时候已经是全锥形了。</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20241027173628167.png" alt="image-20241027173628167"></p><p>根据以上总结，我现在已经是NAT1，我对任何外网电脑进行打洞基本就有很大成功率了！</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/END_02.svg"></p>]]></content>
    
    
    <summary type="html">关于P2P打洞遇到的问题和解决方法</summary>
    
    
    
    
    <category term="Windows" scheme="https://sansuidouer.github.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>获取光猫超级管员理密码</title>
    <link href="https://sansuidouer.github.io/29181/"/>
    <id>https://sansuidouer.github.io/29181/</id>
    <published>2024-10-19T04:44:44.000Z</published>
    <updated>2024-10-19T05:42:36.711Z</updated>
    
    <content type="html"><![CDATA[<p>每个光猫都有一个普通的用户管理员密码，都会在猫盒的背面写着，可以根据访问地址登录光猫的后台，但是这个权限是很有限的，甚至有些地方根本不让修改。</p><p>所以要获取到超级管理员的密码进行登录，光猫就可以没有限制的修改设置啦。</p><h2 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h2><p>登陆普通的用户账号密码，</p><p>我的光猫型号是&nbsp;&nbsp;PT27G，按照默认终端配置地址访问192.168.1.1，输入管理员账户密码登录</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20241019130826254.png" alt="image-20241019130826254"></p><p>登录后打开一下以下网址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.1/cgi-bin/abcdidfope94e0934jiewru8ew414.cgi</span><br></pre></td></tr></table></figure><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241019131247963.png" alt="image-20241019131247963"></p><p>这时候看到success则已经打开了&nbsp;&nbsp;Telnet</p><h2 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h2><p>打开Windows的Trlnet </p><p>如果你默认是勾选的则忽略这一步</p><p>默认是关闭的，可以去控制面板→程序→启用或关闭Windows功能</p><p>然后启用Telnet客户端，大概等上一分钟左右就好啦</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20241019131805352.png" alt="image-20241019131805352"></p><h2 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h2><p>Win + R</p><p>运行cmd</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20241019133247581.png" alt="image-20241019133247581"></p><p>在cmd输入以下命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet 192.168.1.1</span><br></pre></td></tr></table></figure><p>接着输入用户名和密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">用户名：</span><br><span class="line">yhtcAdmin</span><br><span class="line"></span><br><span class="line">密码：</span><br><span class="line">Cm1@YHfw</span><br></pre></td></tr></table></figure><p>用户名会正常显示，可以复制粘贴</p><p>但是密码必须手动输入，因为密码是不显示的，输入请注意大小写</p><p>输入密码后回车</p><p>再输入以下代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /var/config/lastgood.xml | grep &quot;SUSER_PASSWORD&quot;</span><br></pre></td></tr></table></figure><p>输入以上代码后即可得到该光猫的超级管理员密码</p><p>也就是引号里面的内容</p><p>回到192.168.1.1登录即可</p><p>用户名：CMMCCAdmin</p><p>密码：CMCCAdminBt2Tv3Nw（获取到的秘密）</p><p>我不知道这是不是一个永久的密码，这个密码会不会变化，我大概一周后登录还是可以登录的。</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20241019133630125.png" alt="image-20241019133630125"></p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/END_02.svg"></p>]]></content>
    
    
    <summary type="html">获取中国移动光猫的超级管理员密码</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>MihomoParty</title>
    <link href="https://sansuidouer.github.io/50712/"/>
    <id>https://sansuidouer.github.io/50712/</id>
    <published>2024-10-13T07:19:29.000Z</published>
    <updated>2024-10-13T07:51:20.580Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Mihomo-Party"><a href="#Mihomo-Party" class="headerlink" title="Mihomo Party"></a>Mihomo Party</h1><p>一个傻瓜易用的科学上网工具，UI比较好看。最大的特点就是简单易用。</p><p>订阅，打开系统代理，就可以使用了，非常适合小白，没有复杂的操作。</p><p>还有一个特点，小白要是不会用，刚安装会有一个较为详细的引导。</p><p><span style="font-size: 20px;font-weight: bold;;"><a href="https://mihomo.party/">官方文档</a></span>&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: 20px;font-weight: bold;;"><a href="https://github.com/mihomo-party-org/mihomo-party">Github</a></span></p><p><img src="https://github.com/mihomo-party-org/mihomo-party/raw/master/images/preview.jpg"></p><p>记录一下我的设置：</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20241013154837691.png" alt="image-20241013154837691"></p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/END_02.svg"></p>]]></content>
    
    
    <summary type="html">一个更易用的科学上网客户端</summary>
    
    
    
    <category term="软件分享" scheme="https://sansuidouer.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%88%86%E4%BA%AB/"/>
    
    
  </entry>
  
  <entry>
    <title>关闭钉钉AI助理</title>
    <link href="https://sansuidouer.github.io/59582/"/>
    <id>https://sansuidouer.github.io/59582/</id>
    <published>2024-10-12T12:49:05.000Z</published>
    <updated>2024-10-12T13:25:58.140Z</updated>
    
    <content type="html"><![CDATA[<h3 id="吐槽："><a href="#吐槽：" class="headerlink" title="吐槽："></a>吐槽：</h3><p>不知道什么时候更新了钉钉，打开电脑后左下角就多了个小图标，打开一看是钉钉Ai助理，我寻思在这就在吧，然后我在选中文本的时候也会有一个小窗口，每次选中文本都会出现，就很烦！！！</p><p>钉钉我想问你，你怎么知道每个钉钉用户都需要这个功能呢？怎么就给所有的用户都默认打开了这俩选项呢？最起码也给用户一个引导吧！让用户决定开不开启。</p><p><span style="font-size: 20px; color: red; font-weight: bold; display: inline-block;">这种行为我觉得真的很流氓</span>&nbsp;&nbsp;<span style="font-size: 40px; color: red; font-weight: bold; display: inline-block;">!</span>&nbsp;&nbsp;<span style="font-size: 50px; color: red; font-weight: bold; display: inline-block;">!</span>&nbsp;&nbsp;<span style="font-size: 60px; color: red; font-weight: bold; display: inline-block;">!</span></p><h3 id="关闭步骤："><a href="#关闭步骤：" class="headerlink" title="关闭步骤："></a>关闭步骤：</h3><p>点击头像，点击设置与隐私</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/DDaI446486.png" alt="DDaI446485"></p><p>把AI助理这一栏的两个勾全部取消即可关闭！</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/DDaI446487.png" alt="DDaI446485"></p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/END_02.svg"></p>]]></content>
    
    
    <summary type="html">关闭钉钉底部任务栏Ai助理小图标</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Vray 安装包下载</title>
    <link href="https://sansuidouer.github.io/12116/"/>
    <id>https://sansuidouer.github.io/12116/</id>
    <published>2024-09-16T12:53:22.000Z</published>
    <updated>2024-09-22T06:27:49.451Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Vray安装包下载官网"><a href="#Vray安装包下载官网" class="headerlink" title="Vray安装包下载官网"></a>Vray安装包下载官网</h2><p><a href="https://nightlies.chaos.com/">https://nightlies.chaos.com/</a></p><p>这种下载方法需要注册登录，其实注册登录很简单，自己注册一个账户即可。</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20240916210313216.png" alt="image-20240916210313216"></p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20240916210433271.png" alt="image-20240916210433271"></p><p>找到 V-Ray 6 for Maya -stable</p><p>找到最新的更新日期进去，这时候可能会很懵，应该下载那个版本，看完下面这段话你就明白一个下载那个版本了。</p><hr><p>这是不同操作系统和不同Maya版本的V-Ray渲染器安装包列表。文件名中包含的信息如下：</p><ol><li><p><strong>vray_adv_62003</strong>: V-Ray 6.2.003 版本。</p></li><li><p><strong>maya2020&#x2F;2022&#x2F;2023&#x2F;2024&#x2F;2025</strong>: 针对不同的Maya版本（2020、2022、2023、2024、2025）的安装包。</p></li><li><p>centos7&#x2F;mavericks_x64&#x2F;rhel8&#x2F;bigsur_univ&#x2F;x64</p><p>: 表示支持的操作系统和架构。</p><ul><li><strong>centos7</strong>: 针对CentOS 7的Linux系统。</li><li><strong>mavericks_x64</strong>: 针对Mac OS Mavericks 64位系统。</li><li><strong>bigsur_univ</strong>: 针对Mac OS Big Sur通用架构。</li><li><strong>rhel8</strong>: 针对Red Hat Enterprise Linux 8系统。</li><li><strong>x64</strong>: 针对Windows的64位版本。</li></ul></li><li><p><strong>python2</strong>: 说明此版本使用Python 2。</p></li></ol><p>你可以根据你的操作系统和Maya版本选择相应的安装包。例如，如果你使用的是Windows上的Maya 2022，则应该选择 <code>vray_adv_62003_maya2022_x64_32743_install.zip</code>。</p><hr><p>下载对应安装即可，接下来将破解补丁放入对应的文件夹即可</p><p>以Maya2022为例，将对应文件放入以下文件夹</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files\Autodesk\Maya2022\vray\vrayplugins</span><br></pre></td></tr></table></figure><p>如果安装的Vray6则放入<code>vray_v60002_maya_fix.dll</code></p><p>Vray5则放入<code>vray_v50020_maya_fix.dll</code></p><p>破解文件下载地址：<a href="https://zhangzhilong.lanzouw.com/i3x2t2a48zrc">蓝奏云</a></p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/END_02.svg"></p>]]></content>
    
    
    <summary type="html">Vray安装包官方下载地址，记录一下怎么下载最新版的Vray安装包。</summary>
    
    
    
    <category term="Vray" scheme="https://sansuidouer.github.io/categories/Vray/"/>
    
    
    <category term="Vray" scheme="https://sansuidouer.github.io/tags/Vray/"/>
    
  </entry>
  
  <entry>
    <title>渲染设定预设</title>
    <link href="https://sansuidouer.github.io/31779/"/>
    <id>https://sansuidouer.github.io/31779/</id>
    <published>2024-09-15T13:49:55.000Z</published>
    <updated>2024-09-16T12:51:34.712Z</updated>
    
    <content type="html"><![CDATA[<h2 id="渲染设置与传统渲染层"><a href="#渲染设置与传统渲染层" class="headerlink" title="渲染设置与传统渲染层"></a>渲染设置与传统渲染层</h2><p>早期 Maya 版本使用的是“层编辑器”(Layer Editor)，现在默认都修改为了渲染设定。</p><h3 id="设置回旧渲染层的方法"><a href="#设置回旧渲染层的方法" class="headerlink" title="设置回旧渲染层的方法"></a>设置回旧渲染层的方法</h3><p>请选择“窗口 &gt; 设置&#x2F;首选项 &gt; 首选项”(Windows &gt; Settings&#x2F;Preferences &gt; Preferences)以打开“首选项”(Preferences)窗口，然后导航到“渲染”(Rendering)类别。选择“传统渲染层”(Legacy Render Layers)作为“首选渲染设置系统”(Preferred Render Setup system)，然后重新启动 Maya。</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/Snipaste_2024-09-15_22-19-59.png" alt="Snipaste_2024-09-15_22-19-59"></p><h2 id="预设"><a href="#预设" class="headerlink" title="预设"></a>预设</h2><p>进入主题，在使用新的渲染层会牵扯到一些覆盖，比如主可见性、产生阴影、接受阴影等。在Maya中内置了一些预设，</p><p>MatteOverride-Arnold（遮罩覆盖 Arnold）</p><p>RemoveRenderableCameras（移除可渲染相机）</p><p>RenderlayerExample-Arnold（渲染层示例 Arnold）</p><p>SetRenderableCameras（设置可渲染相机）</p><p>这些预设我没有具体使用过，因为主要是关于Arnod的预设且不是很常用</p><p>这些预设存储的路径为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Administrator\Documents\maya\RSTemplates</span><br></pre></td></tr></table></figure><p>这些预设的格式为.json格式文件</p><p>我目前写了四个预设，分别是Environmenti、Lights、Shadows、Visibility。</p><p>他们分别的作用如下：</p><h3 id="Environmenti：覆盖大气雾"><a href="#Environmenti：覆盖大气雾" class="headerlink" title="Environmenti：覆盖大气雾"></a>Environmenti：覆盖大气雾</h3><p>因为这是属于渲染设置级别的覆盖，故需要在渲染层这一级别上右键导入用户模版，选择Environmenti。其作用就是将此渲染层关闭大气雾，也就是取消勾选OverrideEnvironmenti选项</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/Snipaste_2024-09-15_22-49-42.png" alt="Snipaste_2024-09-15_22-49-42"></p><h3 id="Lights：覆盖灯光可见性"><a href="#Lights：覆盖灯光可见性" class="headerlink" title="Lights：覆盖灯光可见性"></a>Lights：覆盖灯光可见性</h3><p>因为这一层级属于集和级别的，要在需要覆盖的集和上面右键选择Lights，由于在分层渲染的时候有一些灯光可能会在其他层渲染可见，例如小夜灯灯泡等，在这一渲染层希望不可见，这时候就可以将所有灯光添加在这个集和中，添加一个灯光覆盖的预设，即可将所有灯光可见性关闭，对应的属性为灯光的Lnvisibel属性，可以理解为将这一层的所有灯光均勾选了这一属性。</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/Snipaste_2024-09-15_22-58-02.png" alt="Snipaste_2024-09-15_22-58-02"></p><h3 id="Shadows：阴影覆盖"><a href="#Shadows：阴影覆盖" class="headerlink" title="Shadows：阴影覆盖"></a>Shadows：阴影覆盖</h3><p>集和级覆盖，可将此集和的多边形设置为不投射阴影，常在渲染阴影的时候使用，不详做介绍，和Lights覆盖使用类使，只是使用了多边形的投射阴影属性。</p><h3 id="Visibility：主可见性覆盖"><a href="#Visibility：主可见性覆盖" class="headerlink" title="Visibility：主可见性覆盖"></a>Visibility：主可见性覆盖</h3><p>字面意思，可将该集和的多边形的主可见性关掉，使用到的是主可见性属性。也是最常见的属性之一。</p><p>后续可能会添加更多预设，根据以后遇到的分层需求添加预设……</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/END_02.svg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;渲染设置与传统渲染层&quot;&gt;&lt;a href=&quot;#渲染设置与传统渲染层&quot; class=&quot;headerlink&quot; title=&quot;渲染设置与传统渲染层&quot;&gt;&lt;/a&gt;渲染设置与传统渲染层&lt;/h2&gt;&lt;p&gt;早期 Maya 版本使用的是“层编辑器”(Layer Editor)，现在默</summary>
      
    
    
    
    <category term="Maya" scheme="https://sansuidouer.github.io/categories/Maya/"/>
    
    
    <category term="Maya" scheme="https://sansuidouer.github.io/tags/Maya/"/>
    
  </entry>
  
  <entry>
    <title>小工具：选中场景中被隐藏的组和多边形</title>
    <link href="https://sansuidouer.github.io/37034/"/>
    <id>https://sansuidouer.github.io/37034/</id>
    <published>2024-09-11T13:12:30.000Z</published>
    <updated>2024-10-27T09:44:49.248Z</updated>
    
    <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>此脚本可以选中场景中被隐藏的模型和组，用于快速找到被隐藏的很深的多边形或组。</p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>由于过于脚本简短，功能单一，没写UI，直接复制代码在Maya的MEL中执行即可选中。</p><h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">string $transforms[] = `ls -type &quot;transform&quot;`;</span><br><span class="line">string $hiddenTransforms[] = &#123;&#125;;</span><br><span class="line">for ($transform in $transforms) &#123;</span><br><span class="line">    string $meshes[] = `listRelatives -type &quot;mesh&quot; $transform`;</span><br><span class="line">    string $children[] = `listRelatives -type &quot;transform&quot; $transform`;</span><br><span class="line"></span><br><span class="line">    if (size($meshes) &gt; 0 || size($children) &gt; 0) &#123;</span><br><span class="line">        int $visibility = `getAttr ($transform + &quot;.visibility&quot;)`;</span><br><span class="line">        if ($visibility == 0) &#123;</span><br><span class="line">            $hiddenTransforms[size($hiddenTransforms)] = $transform;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (size($hiddenTransforms) &gt; 0) &#123;</span><br><span class="line">    select -r $hiddenTransforms;</span><br><span class="line">    print(&quot;已选中该场景中隐藏的多边形或组&quot;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    print(&quot;该场景中没有被隐藏的多边形或组&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/END_02.svg"></p>]]></content>
    
    
    <summary type="html">此脚本可以选中场景中被隐藏的模型和组，用于快速找到被隐藏的很深的多边形或组。</summary>
    
    
    
    
    <category term="Mel" scheme="https://sansuidouer.github.io/tags/Mel/"/>
    
  </entry>
  
  <entry>
    <title>CuteHttpFileServer</title>
    <link href="https://sansuidouer.github.io/50791/"/>
    <id>https://sansuidouer.github.io/50791/</id>
    <published>2024-06-30T06:10:05.000Z</published>
    <updated>2024-06-30T08:34:01.077Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CuteHttpFileServer"><a href="#CuteHttpFileServer" class="headerlink" title="CuteHttpFileServer"></a>CuteHttpFileServer</h1><p>这个工具我经常用来局域网传输较大的电影文件，实测速度能够稳定在90MB&#x2F;s，当然，这取决于你的路由器性能和网络设备。总之是我找了很久比较方便的一种局域网传输工具，没有太高门槛，随拿随用，直接在电脑运行即可，可以轻松配置权限，平板和手机无需设置，直接扫码连接传输即可。</p><p>官网：<a href="http://iscute.cn/chfs">http://iscute.cn/chfs</a></p><p>下载：</p><p><a href="https://zhangzhilong.lanzouw.com/iMQ9M234esvi">蓝奏云下载_v3.1</a></p><p>其实这是一个命令行程序，我使用的是GUI版本，有图形化界面更加方便使用！</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20240630161820041.png" alt="image-20240630161820041"></p><p>界面：</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20240630161204426.png" alt="image-20240630161204426"></p><p>使用：</p><p>添加好分享目录，分配好访客权限点左上角的运行即可开启，在操作日志可以看到访问地址和WabDav地址</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20240630162739250.png" alt="image-20240630162739250"></p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/END_02.svg"></p>]]></content>
    
    
    <summary type="html">CuteHttpFileServer(CHFS)是一个免费的、HTTP协议的文件共享服务器，使用浏览器可以快速访问。可用于局域网快速传输大文件。</summary>
    
    
    
    <category term="软件" scheme="https://sansuidouer.github.io/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
    <category term="软件分享" scheme="https://sansuidouer.github.io/tags/%E8%BD%AF%E4%BB%B6%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>Maya定义规则以便将颜色空间指定给输入文件</title>
    <link href="https://sansuidouer.github.io/6645/"/>
    <id>https://sansuidouer.github.io/6645/</id>
    <published>2024-06-14T13:04:11.000Z</published>
    <updated>2024-06-14T15:02:54.417Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Maya定义规则以便将颜色空间指定给输入文件"><a href="#Maya定义规则以便将颜色空间指定给输入文件" class="headerlink" title="Maya定义规则以便将颜色空间指定给输入文件"></a>Maya定义规则以便将颜色空间指定给输入文件</h1><h3 id="Maya官方帮助"><a href="#Maya官方帮助" class="headerlink" title="Maya官方帮助"></a>Maya官方帮助</h3><p><a href="https://help.autodesk.com/view/MAYAUL/2022/CHS/?guid=GUID-631C665F-3092-4B2B-90B7-2A94158870C9">https://help.autodesk.com/view/MAYAUL/2022/CHS/?guid=GUID-631C665F-3092-4B2B-90B7-2A94158870C9</a></p><p>Autodesk对ACES工作流程的解释：</p><p><a href="https://help.autodesk.com/view/ARNOL/CHS/?guid=arnold_for_maya_rendering_am_ACES_Workflow_html">https://help.autodesk.com/view/ARNOL/CHS/?guid=arnold_for_maya_rendering_am_ACES_Workflow_html</a></p><h2 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h2><p>注意有上下级关系，优先匹配上面的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">*[Bb]aseColor*</span><br><span class="line">*[Dd]iffuse*</span><br><span class="line">*[Aa]lbedo*</span><br><span class="line">*[Rr]oughness*</span><br><span class="line">*[Gg]lossiness*</span><br><span class="line">*[Mm]etallic*</span><br><span class="line">*[Nn]ormal*</span><br><span class="line">*[Dd]isplacement*</span><br><span class="line">*[Hh]eight*</span><br></pre></td></tr></table></figure><h3 id="13470907600626234644-filerules-txt"><a href="#13470907600626234644-filerules-txt" class="headerlink" title="13470907600626234644_filerules.txt"></a>13470907600626234644_filerules.txt</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">file_rules:</span><br><span class="line">  - !&lt;Rule&gt; &#123;name: BaseColor, colorspace: sRGB, pattern: &quot;*[Bb]aseColor*&quot;, extension: &quot;*&quot;&#125;</span><br><span class="line">  - !&lt;Rule&gt; &#123;name: Diffuse, colorspace: sRGB, pattern: &quot;*[Dd]iffuse*&quot;, extension: &quot;*&quot;&#125;</span><br><span class="line">  - !&lt;Rule&gt; &#123;name: Albedo, colorspace: sRGB, pattern: &quot;*[Aa]lbedo*&quot;, extension: &quot;*&quot;&#125;</span><br><span class="line">  - !&lt;Rule&gt; &#123;name: Roughness, colorspace: Raw, pattern: &quot;*[Rr]oughness*&quot;, extension: &quot;*&quot;&#125;</span><br><span class="line">  - !&lt;Rule&gt; &#123;name: Glossiness, colorspace: Raw, pattern: &quot;*[Gg]lossiness*&quot;, extension: &quot;*&quot;&#125;</span><br><span class="line">  - !&lt;Rule&gt; &#123;name: Metallic, colorspace: Raw, pattern: &quot;*[Mm]etallic*&quot;, extension: &quot;*&quot;&#125;</span><br><span class="line">  - !&lt;Rule&gt; &#123;name: Normal, colorspace: Raw, pattern: &quot;*[Nn]ormal*&quot;, extension: &quot;*&quot;&#125;</span><br><span class="line">  - !&lt;Rule&gt; &#123;name: Displacement, colorspace: Raw, pattern: &quot;*[Dd]isplacement*&quot;, extension: &quot;*&quot;&#125;</span><br><span class="line">  - !&lt;Rule&gt; &#123;name: Height, colorspace: Raw, pattern: &quot;*[Hh]eight*&quot;, extension: &quot;*&quot;&#125;</span><br><span class="line">  - !&lt;Rule&gt; &#123;name: tx, colorspace: Raw, pattern: &quot;*&quot;, extension: tx&#125;</span><br><span class="line">  - !&lt;Rule&gt; &#123;name: hdr, colorspace: Raw, pattern: &quot;*&quot;, extension: hdr&#125;</span><br><span class="line">  - !&lt;Rule&gt; &#123;name: exr, colorspace: Raw, pattern: &quot;*&quot;, extension: exr&#125;</span><br><span class="line">  - !&lt;Rule&gt; &#123;name: Default, colorspace: sRGB&#125;</span><br></pre></td></tr></table></figure><h3 id="9330721183767755752-filerules-txt"><a href="#9330721183767755752-filerules-txt" class="headerlink" title="9330721183767755752_filerules.txt"></a>9330721183767755752_filerules.txt</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">file_rules:</span><br><span class="line">  - !&lt;Rule&gt; &#123;name: BaseColor, colorspace: Utility - sRGB - Texture, pattern: &quot;*[Bb]aseColor*&quot;, extension: &quot;*&quot;&#125;</span><br><span class="line">  - !&lt;Rule&gt; &#123;name: Diffuse, colorspace: Utility - sRGB - Texture, pattern: &quot;*[Dd]iffuse*&quot;, extension: &quot;*&quot;&#125;</span><br><span class="line">  - !&lt;Rule&gt; &#123;name: Albedo, colorspace: Utility - sRGB - Texture, pattern: &quot;*[Aa]lbedo*&quot;, extension: &quot;*&quot;&#125;</span><br><span class="line">  - !&lt;Rule&gt; &#123;name: Roughness, colorspace: Utility - Raw, pattern: &quot;*[Rr]oughness*&quot;, extension: &quot;*&quot;&#125;</span><br><span class="line">  - !&lt;Rule&gt; &#123;name: Glossiness, colorspace: Utility - Raw, pattern: &quot;*[Gg]lossiness*&quot;, extension: &quot;*&quot;&#125;</span><br><span class="line">  - !&lt;Rule&gt; &#123;name: Metallic, colorspace: Utility - Raw, pattern: &quot;*[Mm]etallic*&quot;, extension: &quot;*&quot;&#125;</span><br><span class="line">  - !&lt;Rule&gt; &#123;name: Nnormal, colorspace: Utility - Raw, pattern: &quot;*[Nn]ormal*&quot;, extension: &quot;*&quot;&#125;</span><br><span class="line">  - !&lt;Rule&gt; &#123;name: Displacement, colorspace: Utility - Raw, pattern: &quot;*[Dd]isplacement*&quot;, extension: &quot;*&quot;&#125;</span><br><span class="line">  - !&lt;Rule&gt; &#123;name: Height, colorspace: Utility - Raw, pattern: &quot;*[Hh]eight*&quot;, extension: &quot;*&quot;&#125;</span><br><span class="line">  - !&lt;Rule&gt; &#123;name: Default, colorspace: Utility - sRGB - Texture&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/END_02.svg"></p>]]></content>
    
    
    <summary type="html">Maya定义规则以便将颜色空间指定给输入贴图文件</summary>
    
    
    
    <category term="Maya" scheme="https://sansuidouer.github.io/categories/Maya/"/>
    
    
    <category term="Maya" scheme="https://sansuidouer.github.io/tags/Maya/"/>
    
  </entry>
  
  <entry>
    <title>FFmpeg</title>
    <link href="https://sansuidouer.github.io/42224/"/>
    <id>https://sansuidouer.github.io/42224/</id>
    <published>2024-06-01T12:50:35.000Z</published>
    <updated>2024-06-06T12:38:13.601Z</updated>
    
    <content type="html"><![CDATA[<h1 id="FFmpeg"><a href="#FFmpeg" class="headerlink" title="FFmpeg"></a>FFmpeg</h1><p>FFmpeg官网：<a href="https://ffmpeg.org/">https://ffmpeg.org/</a></p><p>Windows下载与安装：</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20240602131241323.png" alt="image-20240602131241323"></p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20240602131619040.png" alt="image-20240602131619040"></p><p>然后解压出来将bin这个目录添加到环境变量的Path里面</p><p>假如我解压到了E:\FFmpeg\ffmpeg</p><p>也就是将E:\FFmpeg\ffmpeg\bin这个目录添加到Path的列表中</p><p>如果你不会，那么就让度娘来帮你：<a href="https://jingyan.baidu.com/article/8ebacdf02d3c2949f65cd5d0.html">https://jingyan.baidu.com/article/8ebacdf02d3c2949f65cd5d0.html</a></p><p>查询版本：(其实这一步是验证一下是否安装成功)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -version</span><br></pre></td></tr></table></figure><p>这个我主要是配合yt-dlp使用，具体使用方法还没了解！</p><p>这个博客写的很清楚，可以学习一下</p><p><a href="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/FFmpeg_Banner.webp">https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/FFmpeg_Banner.webp</a></p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/END_02.svg"></p>]]></content>
    
    
    <summary type="html">一个很有名的开源的视频音频命令行编辑工具</summary>
    
    
    
    <category term="软件" scheme="https://sansuidouer.github.io/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
    <category term="软件分享" scheme="https://sansuidouer.github.io/tags/%E8%BD%AF%E4%BB%B6%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>YT-DLP</title>
    <link href="https://sansuidouer.github.io/32939/"/>
    <id>https://sansuidouer.github.io/32939/</id>
    <published>2024-06-01T12:50:35.000Z</published>
    <updated>2024-06-06T12:36:28.388Z</updated>
    
    <content type="html"><![CDATA[<h1 id="YT-dlp"><a href="#YT-dlp" class="headerlink" title="YT-dlp"></a>YT-dlp</h1><p>Github：<br><a href="https://github.com/yt-dlp/yt-dlp">https://github.com/yt-dlp/yt-dlp</a></p><p>安装和下载可以看这篇文章</p><p>yt-dlp 安装和使用（以Windows为例）</p><p><a href="https://blog.csdn.net/euqlll/article/details/126905973">https://blog.csdn.net/euqlll/article/details/126905973</a></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="查询版本号"><a href="#查询版本号" class="headerlink" title="查询版本号"></a>查询版本号</h3><p>版本号的格式是更新日期</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yt-dlp --version</span><br></pre></td></tr></table></figure><h3 id="帮助"><a href="#帮助" class="headerlink" title="帮助"></a>帮助</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yt-dlp -h</span><br></pre></td></tr></table></figure><h3 id="直接下载视频"><a href="#直接下载视频" class="headerlink" title="直接下载视频"></a>直接下载视频</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yt-dlp https://www.bilibili.com/video/BV1FV411d7u7/</span><br></pre></td></tr></table></figure><h3 id="列出每个video可用格式"><a href="#列出每个video可用格式" class="headerlink" title="列出每个video可用格式"></a>列出每个video可用格式</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yt-dlp -F https://www.bilibili.com/video/BV1FV411d7u7/</span><br></pre></td></tr></table></figure><p>(通用）下载最佳mp4视频+最佳m4a音频格式并合成mp4（需要配合FFmpeg）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yt-dlp -f ‘bv[ext=mp4]+ba[ext=m4a]’ –embed-metadata –merge-output-format mp4 https://www.bilibili.com/video/BV1FV411d7u7?p=1</span><br></pre></td></tr></table></figure><h3 id="设置代理"><a href="#设置代理" class="headerlink" title="设置代理"></a>设置代理</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yt-dlp --proxy socks5://127.0.0.1:2080</span><br></pre></td></tr></table></figure><h3 id="未完待续……"><a href="#未完待续……" class="headerlink" title="未完待续……"></a>未完待续……</h3><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/END_02.svg"></p>]]></content>
    
    
    <summary type="html">功能丰富的命令行音频/视频下载器</summary>
    
    
    
    <category term="软件" scheme="https://sansuidouer.github.io/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
    <category term="软件分享" scheme="https://sansuidouer.github.io/tags/%E8%BD%AF%E4%BB%B6%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>ACES流程正确设置贴图的色彩空间</title>
    <link href="https://sansuidouer.github.io/56050/"/>
    <id>https://sansuidouer.github.io/56050/</id>
    <published>2024-05-29T12:33:14.000Z</published>
    <updated>2024-06-01T11:22:14.514Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ACES流程正确设置贴图的色彩空间"><a href="#ACES流程正确设置贴图的色彩空间" class="headerlink" title="ACES流程正确设置贴图的色彩空间"></a>ACES流程正确设置贴图的色彩空间</h1><p>数据来源：<a href="https://blog.csdn.net/qq_39947564/article/details/125898659">CSDN</a></p><table><thead><tr><th>贴图</th><th>颜色空间</th></tr></thead><tbody><tr><td>颜色贴图（8bit）</td><td>Utility-sRGB-Texture</td></tr><tr><td>颜色贴图（32bit）</td><td>Utility_Linear_sRGB</td></tr><tr><td>HDRI(8bit的jpg文件)</td><td>Utility-sRGB-Texture</td></tr><tr><td>HDRI(32bit的exr文件)</td><td>Utility_Linear_sRGB</td></tr><tr><td>输出数值的贴图</td><td>Utility_Raw</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/END_02.svg"></p>]]></content>
    
    
    <summary type="html">记录几个使用ACES流程Maya贴图正确设置对应的颜色空间</summary>
    
    
    
    <category term="Maya" scheme="https://sansuidouer.github.io/categories/Maya/"/>
    
    
    <category term="Maya" scheme="https://sansuidouer.github.io/tags/Maya/"/>
    
  </entry>
  
  <entry>
    <title>PureRef 2.0 汉化版</title>
    <link href="https://sansuidouer.github.io/23644/"/>
    <id>https://sansuidouer.github.io/23644/</id>
    <published>2024-05-26T10:53:01.000Z</published>
    <updated>2024-06-01T11:16:24.485Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PureRef-2-0-汉化版"><a href="#PureRef-2-0-汉化版" class="headerlink" title="PureRef  2.0 汉化版"></a>PureRef  2.0 汉化版</h1><h3 id="官网：https-www-pureref-com"><a href="#官网：https-www-pureref-com" class="headerlink" title="官网：https://www.pureref.com/"></a>官网：<a href="https://www.pureref.com/">https://www.pureref.com/</a></h3><p>研几汉化：<a href="https://yanjicg.com/product/pureref">https://yanjicg.com/product/pureref</a></p><p>2.0更新内容：<a href="https://www.pureref.com/blog/pureref2/">https://www.pureref.com/blog/pureref2/</a></p><p>默认研几提供的是123云盘下载！</p><p>蓝奏云下载：<a href="https://zhangzhilong.lanzouw.com/ieqi41zu4ltg">https://zhangzhilong.lanzouw.com/ieqi41zu4ltg</a></p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/PixPin_2024-05-26_19-04-51.webp" alt="PixPin_2024-05-26_19-04-51"></p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/END_02.svg"></p>]]></content>
    
    
    <summary type="html">PureRef 2.0 汉化版软件分享</summary>
    
    
    
    <category term="软件" scheme="https://sansuidouer.github.io/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
    <category term="软件分享" scheme="https://sansuidouer.github.io/tags/%E8%BD%AF%E4%BB%B6%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>Oblivion Desktop</title>
    <link href="https://sansuidouer.github.io/9922/"/>
    <id>https://sansuidouer.github.io/9922/</id>
    <published>2024-05-26T10:15:14.000Z</published>
    <updated>2024-06-01T11:15:49.404Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Oblivion-Desktop"><a href="#Oblivion-Desktop" class="headerlink" title="Oblivion Desktop"></a>Oblivion Desktop</h1><p>这是由伊朗人开发的一款软件，基于Cloudflare Warp，默认语言是波斯语</p><p>如果你想了解Cloudflare Warp，就在浏览器输入1.1.1.1去看看吧！</p><p>不多做介绍，懂的都懂啦（魔法工具）</p><p>Github主页（Windows）：<a href="https://github.com/bepass-org/oblivion-desktop/">https://github.com/bepass-org/oblivion-desktop/</a></p><p>Github主页（Android ）：<a href="https://github.com/bepass-org/oblivion/">https://github.com/bepass-org/oblivion/</a></p><p>谷歌play商店：<a href="https://play.google.com/store/apps/details?id=org.bepass.oblivion">https://play.google.com/store/apps/details?id=org.bepass.oblivion</a></p><p>Windows端支持中文，需要自己设置，安卓目前不支持，有魔改的版本，但是不稳定。</p><p>Windows端设置中文的方法：</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20240526184248441.png" alt="image-20240526184248441"></p><p>2024年6月1日19:15:40更新：</p><p>Windows设置，勾选系统托盘，这样当最小化时就不会占用托盘的位置！</p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20240529205234123.png" alt="image-20240529205234123"></p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/END_02.svg"></p>]]></content>
    
    
    <summary type="html">Oblivion Desktop软件分享</summary>
    
    
    
    <category term="软件" scheme="https://sansuidouer.github.io/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
    <category term="软件分享" scheme="https://sansuidouer.github.io/tags/%E8%BD%AF%E4%BB%B6%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>关于安装Python后Hexo无法使用的问题</title>
    <link href="https://sansuidouer.github.io/59387/"/>
    <id>https://sansuidouer.github.io/59387/</id>
    <published>2024-05-26T09:33:08.000Z</published>
    <updated>2024-05-26T09:54:24.970Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>前两天安装了以下Python模块，今天打开Hexo发现无论什么命令都会返回<p style="color: red;"> hexo: command not found</p></p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20240526173832960.png" alt="image-20240526173832960"></p><p>于是打开了万能的谷歌，就找到了这篇文章！</p><p>才知道是Python的问题!</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>CSDN原文地址：<a href="https://blog.csdn.net/qq_36759224/article/details/100411949">https://blog.csdn.net/qq_36759224/article/details/100411949</a></p><p>解决办法也很简单，按照上文的解决方法，在变量的Path将你的node_modules.bin添加到里面，</p><p>问题即可解决！</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20240526174342444.png" alt="image-20240526174342444"></p><p>hexo -v</p><p>成功！</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20240526174655502.png" alt="image-20240526174655502"></p><p>万万没想到是安装了Python的坑！</p><p>今天又填上了一个坑！</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/END_02.svg"></p>]]></content>
    
    
    <summary type="html">博客折腾日记之 command not found</summary>
    
    
    
    <category term="Hexo" scheme="https://sansuidouer.github.io/categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="https://sansuidouer.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>ripgrep</title>
    <link href="https://sansuidouer.github.io/11922/"/>
    <id>https://sansuidouer.github.io/11922/</id>
    <published>2024-05-19T09:53:11.000Z</published>
    <updated>2024-06-06T13:04:20.308Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ripgrep"><a href="#ripgrep" class="headerlink" title="ripgrep"></a>ripgrep</h1><p>ripgrep 是一个以行为单位的搜索工具， 它根据提供的 pattern 递归地在指定的目录里搜索。它是由 Rust 语言写成，相较与同类工具，它的特点就是无与伦比地快。</p><p>性能有多强大可以看一下作者提供的几个常见的搜索工具对比&nbsp;&nbsp;<a href="https://github.com/chinanf-boy/ripgrep-zh?tab=readme-ov-file#%E5%90%84%E5%A4%A7%E5%B7%A5%E5%85%B7%E5%AF%B9%E6%AF%94%E4%BE%8B%E5%AD%90">去看看&gt;</a></p><h2 id="下面说正事"><a href="#下面说正事" class="headerlink" title="下面说正事"></a>下面说正事</h2><p>Github开源地址：<a href="https://github.com/BurntSushi/ripgrep">https://github.com/BurntSushi/ripgrep</a></p><p>中文帮助：<a href="https://github.com/chinanf-boy/ripgrep-zh">https://github.com/chinanf-boy/ripgrep-zh</a></p><p>Github最新版本：</p><img src="https://camo.githubusercontent.com/40723696a8f78230fd194ba39de2e9a4ce1fe7f03219fe76b458775d216c59e8/68747470733a2f2f696d672e736869656c64732e696f2f6372617465732f762f726970677265702e737667" align="left" /><p>&nbsp;</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>由于没有使用过MaCOS 和 Linux </p><p>我将安装到Windows上面进行使用</p><h3 id="从Vs-Code中使用"><a href="#从Vs-Code中使用" class="headerlink" title="从Vs Code中使用"></a>从Vs Code中使用</h3><p>如果你安装了Vs Code（Visual Studio Code）（&nbsp;如果你想安装VsCode&nbsp;&nbsp;<a href="/45943/">去看看 &nbsp;&gt;</a>）</p><p>则在Vs Code安装目录下的\resources\app\node_modules.asar.unpacked@vscode\ripgrep\bin目录下有ripgrep（rg.exe）</p><p>我将Vs Code默认安装到了C盘，我的完整目录如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Administrator\AppData\Local\Programs\Microsoft VS Code\resources\app\node_modules.asar.unpacked\@vscode\ripgrep\bin</span><br></pre></td></tr></table></figure><p>将以上目录添加到环境变量的Path里面即可使用！</p><h3 id="从Github下载安装"><a href="#从Github下载安装" class="headerlink" title="从Github下载安装"></a>从Github下载安装</h3><p>第一步，<a href="https://github.com/BurntSushi/ripgrep/releases">下载</a></p><p>如果没有找到Windows别忘了展开全部！</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20240519182517532.png" alt="image-20240519182517532"></p><p>如果你不知道下载那个Windws版本</p><table><thead><tr><th></th><th>windows-gnu.zip</th><th>windows-msvc.zip</th></tr></thead><tbody><tr><td>编译器</td><td>GCC</td><td>MSVC</td></tr><tr><td>兼容性</td><td>更广泛的 Windows 系统</td><td>需要 VCRedist</td></tr><tr><td>速度</td><td>略慢</td><td>略快</td></tr></tbody></table><p>如果你看不懂以上表格，则下载windows-msvc.zip即可</p><p>至于.sha256是哈希值校验</p><p>我这里直接下载<a href="https://github.com/BurntSushi/ripgrep/releases/download/14.1.0/ripgrep-14.1.0-x86_64-pc-windows-msvc.zip">ripgrep-14.1.0-x86_64-pc-windows-msvc.zip</a></p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20240519183509400.png" alt="image-20240519183509400"></p><p>打开压缩包，只有一个rg.exe是有用的！</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20240519183828626.png" alt="image-20240519183828626"></p><p>为了方便使用，将rg可以放在任意一个目录，然后将这个目录添加到环境变量的Path里面</p><p>假如我将rg.exe放在了C:\Program Files\ripgrep\</p><p>也就是将C:\Program Files\ripgrep\这个目录添加到Path的列表中</p><p>如果你不会，那么就让度娘来帮你：<a href="https://jingyan.baidu.com/article/8ebacdf02d3c2949f65cd5d0.html">https://jingyan.baidu.com/article/8ebacdf02d3c2949f65cd5d0.html</a></p><p>这一步完成就意味着你随时随地可以使用ripgrep了！</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>先检查一下ripgrep是否安装成功，Win+R 运行cmd</p><p>在命令行面板输入以下命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rg --version</span><br></pre></td></tr></table></figure><p>安装成功则返回版本号，返回ripgrep 14.1.0 (rev e50df40a19)，也就是当前版本为14.1.0，安装好了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Administrator&gt;rg --version</span><br><span class="line">ripgrep 14.1.0 (rev e50df40a19)</span><br><span class="line"></span><br><span class="line">features:-simd-accel,+pcre2</span><br><span class="line">simd(compile):+SSE2,-SSSE3,-AVX2</span><br><span class="line">simd(runtime):+SSE2,+SSSE3,+AVX2</span><br><span class="line"></span><br><span class="line">PCRE2 10.42 is available (JIT is available)</span><br><span class="line"></span><br><span class="line">C:\Users\Administrator&gt;</span><br></pre></td></tr></table></figure><p><code>rg -h</code> 可以得到简短的帮助！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line">ripgrep 14.1.0（修订版 e50df40a19）</span><br><span class="line">Andrew Gallant &lt;jamslam@gmail.com&gt;</span><br><span class="line"></span><br><span class="line">ripgrep（rg）递归搜索当前目录中与正则表达式模式匹配的行。默认情况下，ripgrep 将遵循 gitignore 规则，并自动跳过隐藏文件/目录和二进制文件。</span><br><span class="line"></span><br><span class="line">使用 -h 获取简短描述，使用 --help 获取更多详细信息。</span><br><span class="line"></span><br><span class="line">项目主页：https://github.com/BurntSushi/ripgrep</span><br><span class="line"></span><br><span class="line">用法：</span><br><span class="line">rg [选项] 模式 [路径...]</span><br><span class="line"></span><br><span class="line">位置参数：</span><br><span class="line">&lt;PATTERN&gt; 用于搜索的正则表达式。</span><br><span class="line">&lt;PATH&gt;... 要搜索的文件或目录。</span><br><span class="line"></span><br><span class="line">输入选项：</span><br><span class="line">-e，--regexp=PATTERN 搜索的模式。</span><br><span class="line">-f，--file=PATTERNFILE 从给定文件中搜索模式。</span><br><span class="line">--pre=COMMAND 对每个路径搜索 COMMAND 的输出。</span><br><span class="line">--pre-glob=GLOB 包含或排除预处理器的文件。</span><br><span class="line">-z，--search-zip 在压缩文件中搜索。</span><br><span class="line"></span><br><span class="line">搜索选项：</span><br><span class="line">-s，--case-sensitive 区分大小写地搜索（默认）。</span><br><span class="line">--crlf 使用 CRLF 行终止符（适用于 Windows）。</span><br><span class="line">--dfa-size-limit=NUM 正则表达式 DFA 的上限大小。</span><br><span class="line">-E，--encoding=ENCODING 指定要搜索的文件的文本编码。</span><br><span class="line">--engine=ENGINE 指定要使用的正则表达式引擎。</span><br><span class="line">-F，--fixed-strings 将所有模式视为字面量。</span><br><span class="line">-i，--ignore-case 不区分大小写搜索。</span><br><span class="line">-v，--invert-match 反转匹配。</span><br><span class="line">-x，--line-regexp 显示由行边界包围的匹配项。</span><br><span class="line">-m，--max-count=NUM 限制匹配行数。</span><br><span class="line">--mmap 尽可能使用内存映射进行搜索。</span><br><span class="line">-U，--multiline 启用跨多行的搜索。</span><br><span class="line">--multiline-dotall 使 &#x27;.&#x27; 匹配行终止符。</span><br><span class="line">--no-unicode 禁用 Unicode 模式。</span><br><span class="line">--null-data 使用 NUL 作为行终止符。</span><br><span class="line">-P，--pcre2 启用 PCRE2 匹配。</span><br><span class="line">--regex-size-limit=NUM 编译后的正则表达式大小限制。</span><br><span class="line">-S，--smart-case 智能大小写搜索。</span><br><span class="line">--stop-on-nonmatch 在非匹配后停止搜索。</span><br><span class="line">-a，--text 将二进制文件视为文本搜索。</span><br><span class="line">-j，--threads=NUM 设置要使用的线程数。</span><br><span class="line">-w，--word-regexp 显示由单词边界包围的匹配项。</span><br><span class="line">--auto-hybrid-regex（已弃用）根据需要使用 PCRE2。</span><br><span class="line">--no-pcre2-unicode（已弃用）禁用 PCRE2 的 Unicode 模式。</span><br><span class="line"></span><br><span class="line">过滤选项：</span><br><span class="line">--binary 搜索二进制文件。</span><br><span class="line">-L，--follow 跟随符号链接。</span><br><span class="line">-g，--glob=GLOB 包含或排除文件路径。</span><br><span class="line">--glob-case-insensitive 对所有 glob 模式进行大小写不敏感处理。</span><br><span class="line">-., --hidden 搜索隐藏文件和目录。</span><br><span class="line">--iglob=GLOB 大小写不敏感地包含/排除路径。</span><br><span class="line">--ignore-file=PATH 指定额外的忽略文件。</span><br><span class="line">--ignore-file-case-insensitive 对忽略文件进行大小写不敏感处理。</span><br><span class="line">-d，--max-depth=NUM 最多遍历 NUM 个目录。</span><br><span class="line">--max-filesize=NUM 忽略大小大于 NUM 的文件。</span><br><span class="line">--no-ignore 不使用忽略文件。</span><br><span class="line">--no-ignore-dot 不使用 .ignore 或 .rgignore 文件。</span><br><span class="line">--no-ignore-exclude 不使用本地排除文件。</span><br><span class="line">--no-ignore-files 不使用 --ignore-file 参数。</span><br><span class="line">--no-ignore-global 不使用全局忽略文件。</span><br><span class="line">--no-ignore-parent 不使用父目录中的忽略文件。</span><br><span class="line">--no-ignore-vcs 不使用源代码控制的忽略文件。</span><br><span class="line">--no-require-git 在 git 存储库之外使用 .gitignore。</span><br><span class="line">--one-file-system 跳过其他文件系统上的目录。</span><br><span class="line">-t，--type=TYPE 仅搜索匹配 TYPE 的文件。</span><br><span class="line">-T，--type-not=TYPE 不搜索匹配 TYPE 的文件。</span><br><span class="line">--type-add=TYPESPEC 为文件类型添加新的 glob。</span><br><span class="line">--type-clear=TYPE 清除文件类型的 glob。</span><br><span class="line">-u，--unrestricted 降低“智能”过滤的级别。</span><br><span class="line"></span><br><span class="line">输出选项：</span><br><span class="line">-A，--after-context=NUM 显示每个匹配项后的 NUM 行。</span><br><span class="line">-B，--before-context=NUM 显示每个匹配项前的 NUM 行。</span><br><span class="line">--block-buffered 强制使用块缓冲。</span><br><span class="line">-b，--byte-offset 打印每个匹配行的字节偏移量。</span><br><span class="line">--color=WHEN 何时使用颜色。</span><br><span class="line">--colors=COLOR_SPEC 配置颜色设置和样式。</span><br><span class="line">--column 显示列号。</span><br><span class="line">-C，--context=NUM 显示每个匹配项前后的 NUM 行。</span><br><span class="line">--context-separator=SEP 设置上下文块的分隔符。</span><br><span class="line">--field-context-separator=SEP 设置字段上下文分隔符。</span><br><span class="line">--field-match-separator=SEP 设置字段匹配分隔符。</span><br><span class="line">--heading 按每个文件分组打印匹配项。</span><br><span class="line">-h，--help 显示帮助输出。</span><br><span class="line">--hostname-bin=COMMAND 运行程序获取此系统的主机名。</span><br><span class="line">--hyperlink-format=FORMAT 设置超链接的格式。</span><br><span class="line">--include-zero 在摘要输出中包含零匹配。</span><br><span class="line">--line-buffered 强制使用行缓冲。</span><br><span class="line">-n，--line-number 显示行号。</span><br><span class="line">-N，--no-line-number 不打印行号。</span><br><span class="line">-M，--max-columns=NUM 忽略长度超过此限制的行。</span><br><span class="line">--max-columns-preview 显示超过限制的行的预览。</span><br><span class="line">-0，--null 在文件路径后打印一个 NUL 字节。</span><br><span class="line">-o，--only-matching 仅打印行的匹配部分。</span><br><span class="line">--path-separator=SEP 设置打印路径的路径分隔符。</span><br><span class="line">--passthru 打印匹配和非匹配行。</span><br><span class="line">-p，--pretty 颜色、标题和行号的别名。</span><br><span class="line">-q，--quiet 不向标准输出打印任何内容。</span><br><span class="line">-r，--replace=TEXT 用给定文本替换匹配</span><br></pre></td></tr></table></figure><p>关键字搜索：</p><p>搜索D盘所有二进制文件内容包含Hello关键字的文件并列举出来</p><p><code>-l</code> &nbsp;告诉 ripgrep 只输出匹配的文件路径，而不显示匹配的内容。</p><p><code>&quot;Hello&quot;</code>&nbsp;关键字:Hello</p><p><code>&quot;D:&quot;</code>&nbsp;路径D盘</p><p><code>-i</code>&nbsp;忽略大小写</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rg -l &quot;Hello&quot; &quot;D:&quot; -i</span><br></pre></td></tr></table></figure><h2 id="搜索有病毒的Maya文件"><a href="#搜索有病毒的Maya文件" class="headerlink" title="搜索有病毒的Maya文件"></a>搜索有病毒的Maya文件</h2><p>关键字vaccine&nbsp;&nbsp;fuckVirus&nbsp;&nbsp;“|”为连接符 </p><p>搜索路径为&nbsp;&nbsp;D:\work</p><p>-g “<em>.ma” -g “</em>.mb”&nbsp;&nbsp;仅搜索ma和mb格式文件</p><p>-i&nbsp;&nbsp;不区分大小写</p><p>> D:\results.txt &nbsp;&nbsp;将搜索结果保存到D:\results.txt<p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rg -l &quot;vaccine|fuckVirus&quot; &quot;D:\work&quot; -g &quot;*.ma&quot; -g &quot;*.mb&quot; -i &gt; D:\results.txt</span><br></pre></td></tr></table></figure><h2 id="更新：2024年6月6日20-59-40"><a href="#更新：2024年6月6日20-59-40" class="headerlink" title="更新：2024年6月6日20:59:40"></a>更新：2024年6月6日20:59:40</h2><p>我发现原来的命令行不能搜索到.mb文件，因为mb文件不是文本编码格式，rg会忽略掉mb文件，我们可以加一个 -a ，这样就可以搜索到mb文件了！</p><p>查看上面的帮助我们可以得知</p><p>-a，–text 将二进制文件视为文本搜索。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rg -l &quot;vaccine|fuckVirus&quot; &quot;D:\work&quot; -a -g &quot;*.ma&quot; -g &quot;*.mb&quot; -i &gt; D:\results.txt</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/END_02.svg"></p>]]></content>
    
    
    <summary type="html">一个面向行的搜索工具</summary>
    
    
    
    <category term="软件" scheme="https://sansuidouer.github.io/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
    <category term="软件分享" scheme="https://sansuidouer.github.io/tags/%E8%BD%AF%E4%BB%B6%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>Ps磨皮插件Portraiture</title>
    <link href="https://sansuidouer.github.io/52338/"/>
    <id>https://sansuidouer.github.io/52338/</id>
    <published>2024-04-27T10:06:21.000Z</published>
    <updated>2024-04-27T10:32:29.852Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Portraiture"><a href="#Portraiture" class="headerlink" title="Portraiture"></a>Portraiture</h3><p>版本：4.1.2</p><p>官网：<a href="https://www.imagenomic.com/products/portraiture">https://www.imagenomic.com/products/portraiture</a></p><p>界面：</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20240427181145704.png" alt="image-20240427181145704"></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>全部点击下一步，然后打开PS在滤镜里面加载可以直接使用。</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/image-20240427182719335.png" alt="image-20240427182719335"></p><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>蓝奏云：<a href="https://zhangzhilong.lanzouw.com/ibDA71wpvtuj">https://zhangzhilong.lanzouw.com/ibDA71wpvtuj</a></p><p>#ps磨皮插件 #Portraiture</p><p><img src="https://cdn.jsdelivr.net/gh/SansuidouEr/images@main/img/END_02.svg"></p>]]></content>
    
    
    <summary type="html">“ Ps磨皮插件Portraiture4.1.2”</summary>
    
    
    
    <category term="Adobe" scheme="https://sansuidouer.github.io/categories/Adobe/"/>
    
    
    <category term="软件分享" scheme="https://sansuidouer.github.io/tags/%E8%BD%AF%E4%BB%B6%E5%88%86%E4%BA%AB/"/>
    
    <category term="Adobe" scheme="https://sansuidouer.github.io/tags/Adobe/"/>
    
    <category term="Ps" scheme="https://sansuidouer.github.io/tags/Ps/"/>
    
  </entry>
  
</feed>
